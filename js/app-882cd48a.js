/**
 * mywcguide.power - Wheelchair Guide - Self-Management Assistance through Technology (SMART)
 * @authors I Made Agus Setiawan
 * @version v0.11.0
 * @link 
 * @license 
 */
"use strict";

angular.module("config", [])

.constant("ENV", {
  "build": {
    "version": "1.0.0",
    "time": "2017-09-15 20:17:28"
  },
  "appName": "mywcguide",
  "name": "production",
  "apiEndpoint": "http://shrs-tr6.shrs.pitt.edu:8080/smart/api/"
})

;
'use strict';
// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
angular.module('smartvcApp', [
    'app.config',
    'ionic',
    'ngCordova',

    'ngAnimate',

    'hari.ui',
    'tabSlideBox',
    'smartvcApp.directives',
    'smartvcApp.services',
    'smartvcApp.filters',
    'smartvcApp.controllers',
    'ui.utils.masks',
    'ui.router',
    'markdown',
    'compile',
    'youtube-embed'
])

.run(["$ionicPlatform", "$state", "$rootScope", "$log", "Global", "System", "Polyfill", "PFNetwork", "$timeout", function($ionicPlatform, $state, $rootScope, $log, Global, System, Polyfill, PFNetwork, $timeout) {

    /**
     * This resume listener, has different behaviour between ios and android
     * android:
     *  will be triggered whenever the app up from background, INCLUDING
     *  when the app use camera/audio capture. Hence System.dispatch() need
     *  to know about it. because right now, when try to capture media,
     *  the modal page still working, but the related page just refreshed to
     *  the front page.
     * ios:
     *  only happen when the app is really from the background
     */
    document.addEventListener("resume", function() {
        $log.debug("The application is resuming from the background");
        // System.dispatch();
    }, false);

    $ionicPlatform.ready(function() {
        // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
        // for form inputs)
        if (window.cordova && window.cordova.plugins.Keyboard) {

            //Trick to prevent keyboard covering text input. and make scroll content = true
            cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
            cordova.plugins.Keyboard.disableScroll(true);
        }
        if (window.StatusBar) {
            // org.apache.cordova.statusbar required
            StatusBar.overlaysWebView(false);
            StatusBar.backgroundColorByHexString("#000033");
            StatusBar.styleLightContent();
        }

        if (window.cordova && window.cordova.InAppBrowser) {
            window.open = cordova.InAppBrowser.open;
        }

        System.dispatch();

        $rootScope.MOBIPICKER_THEME = System.getMobiPickerTheme();

    });


}])

// global function
.run(["$state", "$rootScope", "$ionicLoadingConfig", "System", "ChecklistService", function($state, $rootScope, $ionicLoadingConfig, System, ChecklistService) {

    // overide loading
    $ionicLoadingConfig.template = "<div class='icon ion-loading-a'></div>";

    $rootScope.openModal = function(event, templateUrl, scope) {
        System.getModalPage(templateUrl, scope)
            .then(function(page) {
                page.show();
            });
        event.stopPropagation();
    }

    $rootScope.openGlossary = function(glcode) {

        var scope = $rootScope.$new();
        ChecklistService.getGlossary().then(function(data) {
            scope.gls = _.find(data, function(item) {
                return item.id == glcode;
            });

            System.getModalPage("servicedelivery/modal_glossary.detail.html", scope)
                .then(function(page) {
                    page.show();
                })
        })

    }
}])

.run(["$ionicPlatform", "$rootScope", "$state", "AuthService", "PFNetwork", "$log", "TrackService", "AppStorage", "Notification", "AssessmentPusherService", "$ionicHistory", function($ionicPlatform, $rootScope, $state, AuthService, PFNetwork, $log, TrackService, AppStorage, Notification, AssessmentPusherService, $ionicHistory) {

    $rootScope.$on('$ionicView.loaded', function() {
        if ($state.is('main.home') || $state.is('start')) {
            $ionicPlatform.ready(function() {

                if (navigator && navigator.splashscreen) {
                    $log.debug('hide splashscreen');
                    navigator.splashscreen.hide();

                }

                PFNetwork.registerConnectionListener();
            });
        }
    });

    $rootScope.$on("event:network", function(event, args) {
        $log.debug('event:network, status:', args.status);
    })

    // intercept onChangeState
    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {

        // if (AuthService.isAuthenticated()) {
        //     TrackService.patchEndEvent();
        //     TrackService.addEvent(toState.name, toParams);
        // }

        $rootScope.$broadcast("patchNoActivityReminder");

        // if (toState.data) {
        //   if (!Auth.authorize(toState.data.restricted)) {
        //     event.preventDefault();

        //     $state.go('login');
        //   }
        // }
        // console.log($ionicHistory.viewHistory());
    })


    $rootScope.$on('$stateNotFound', function(event, unfoundState, fromState, fromParams) {
        alert('This Page does not Exists');
    })

    //Listener
    $rootScope.$on("onChangeSettings", function(event, settings) {
        $rootScope.settings = settings;
    });

    function _patchNoActivityTimestamp() {
        var now = new Date(),
            next_reminder_time_from_now = moment(now).add(14, 'days').toDate();

        AppStorage.set('noActivityTimestamp', now);
        Notification.patchNoActivityReminder("Howdy!!!", "Hi, you have no activity for the last 2 weeks", next_reminder_time_from_now, {});
    }

    $rootScope.$on('patchNoActivityReminder', _.throttle(_patchNoActivityTimestamp, 60000));

    ////////////////////////////////////////
    // Assessment Pusher
    ////////////////////////////////////////
    $rootScope.$on("event:setup-assessment-updated", function(event) {
        console.info("send setup assessment to server");
        AssessmentPusherService.sendSetupAssessment();
    })

    $rootScope.$on("event:skill-assessment-updated", function(event) {
        console.info("send skill assessment to server");
        AssessmentPusherService.sendSkillAssessment();
    })

    $rootScope.$on("event:wheelchair-checklist-data-updated", function(event) {
        console.info("send wheelchair checklist data to server");
        AssessmentPusherService.sendWheelchairAssessment();
    })

    $rootScope.$on("event:dumping-data", function(event) {
        console.info("send all data to server");
        AssessmentPusherService.sendDumpData();
    })
}])

.config(["$stateProvider", "$compileProvider", "$ionicConfigProvider", function($stateProvider, $compileProvider, $ionicConfigProvider) {

    $compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|data|blob|cdvphotolibrary|ionic|cdvfile):/);

    $ionicConfigProvider.backButton.previousTitleText(false).text('&emsp;&emsp;');
    $ionicConfigProvider.tabs.position('bottom');
}])

.config(['AppStorageProvider', '$httpProvider', 'UtilsProvider',
    function(AppStorageProvider, $httpProvider, UtilsProvider) {

        AppStorageProvider.setPrefix('smartvcApp');
        $httpProvider.interceptors.push('AuthInterceptor');
        $httpProvider.interceptors.push('LoadingInterceptor');

        //Parse Date String into Date object with intercept
        var utils = UtilsProvider.$get();
        $httpProvider.defaults.transformResponse.push(function(responseData) {
            utils.convertDateStringsToDates(responseData);
            return responseData;
        });
    }
])

// .config(function($mdGestureProvider) {
//     // resolve ng-click issue with ionic
//     // src: https://github.com/angular/material/issues/1826
//     $mdGestureProvider.skipClickHijack();

// })

.config(["$cryptoProvider", function($cryptoProvider) {
    // https://jswebcrypto.azurewebsites.net/demo.html#/hmac
    // 1. CryptoJS
    // 2. Key: mysafetyspace
    // 3. Plaintext: galungan
    // 4. algo: SHA256
    // 5. Hash: Base64
    $cryptoProvider.setCryptographyKey('CqE+1qO9nIk5T3CCga9ab86DmwV7ITenlw7GBsQCC6o=');
}])

/********************************
 * Disable Bouncing Globally
 * http://angular-tips.com/blog/2013/09/experiment-decorating-directives/
 ********************************/
.config(['$provide', function($provide) {
    $provide.decorator('ionContentDirective', ["$delegate", function($delegate) {
        var directive = $delegate[0];

        var compile = directive.compile;
        directive.compile = function(element, attrs) {
                if (attrs.hasBouncing == undefined) attrs.hasBouncing = "false";
                return compile.apply(this, arguments);
            };

        return $delegate;
    }]);
}])

angular.module('smartvcApp.services', ['ngResource', 'ngCordova', 'mdo-angular-cryptography']);
angular.module('smartvcApp.directives', []);
angular.module('smartvcApp.filters', []);
angular.module('smartvcApp.controllers', ['ngResource']);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.apiservice
 * @description
 * # apiservice
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory("Profile", ["ENV", "$resource", function(ENV, $resource) {

  return $resource(ENV.apiEndpoint + 'accounts/:id', {}, {
    update: {
      method: 'PUT'
    },
    getProfile: {
      url: ENV.apiEndpoint + 'accounts/:id/profile',
      method: 'GET'
    }
  });

}])

.factory("Device", ["ENV", "$resource", function(ENV, $resource) {

  return $resource(ENV.apiEndpoint + 'awds/:id', {}, {
    update: {
      method: 'PUT'
    }
  });

}])

.factory("Review", ["ENV", "$resource", function(ENV, $resource) {

  return $resource(ENV.apiEndpoint + 'reviews/:id', {}, {
    update: {
      method: 'PUT'
    },
    getTotalReview: {
      method: 'GET',
      params: {type: 'total_review'}
    },
    getMyReviews: {
      method: 'GET',
      params: {type: 'myreviews'}
    }
  });

}])

.factory("WCDevice", ["ENV", "$resource", function(ENV, $resource) {

  return $resource(ENV.apiEndpoint + 'wcdevices/:id', {}, {
    update: {
      method: 'PUT'
    },
    searchWithTotalReview: {
      method: 'GET',
      params: {type: 'searchWithTotalReview'},
      isArray: true
    }
  });

}])

.factory("Event", ["ENV", "$resource", function(ENV, $resource) {

  return $resource(ENV.apiEndpoint + 'tracks/:id', {}, {
    update: {
      method: 'PUT'
    },
    patchEnd: {
      method: 'PATCH',
      url: ENV.apiEndpoint + "tracks/:id/end"
    }
  });

}])
;

/**
 * 
 * http://stackoverflow.com/questions/27434262/pass-a-controller-to-ionicmodal
 * http://codepen.io/julianpaulozzi/pen/wBgpjM
 */

(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('AppModalService', Service);

    Service.$inject = ['$q', '$log', '$ionicModal', '$rootScope', '$injector', '$controller'];

    /* @ngInject */
    function Service($q, $log, $ionicModal, $rootScope, $injector, $controller) {

        // $log = $log.getInstance('AppModalService');

        var service = { };
        
        service.show    = _show;
        
        return service;

        ////////////////

        // function _sliderModal(tplUrl, $scope, config) {
        //     var slideBox, $modal,
        //         defer = $q.defer(),
        //         options = {
        //             onShowModal: function() {},
        //             delegateHandle: 'slideBox',
        //             animation: 'scale-in-out',
        //             //animation: 'slide-in-up'
        //         };
                
        //     angular.extend(options, config);

        //     $modal = $ionicModal.fromTemplateUrl(tplUrl, {
        //         scope: $scope,
        //         animation: options.animation,
        //         hardwareBackButtonClose: false,
        //         backdropClickToClose: false
        //     });
            
        //     $modal.then(function(modal) {
        //         $scope.modal = modal;                
        //         slideBox = $ionicSlideBoxDelegate.$getByHandle(options.delegateHandle);
                
        //         $scope.modal.close = function() {
        //                 modal.hide();
        //                 modal.remove();
        //         };  

        //         if (slideBox) {
        //             $scope.updateSlideBox(slideBox);
        //             $timeout(function() {
        //                slideBox.enableSlide(false); 
        //             }, 100);
        //         }
                
        //         $scope.modal.show();
        //         options.onShowModal();
        //     });
            
        //     $scope.updateSlideBox = function(slideBox) {                
        //         $timeout(function() {
        //             if (slideBox) {
        //                 slideBox.update();
        //                 $scope.pageTotal    = slideBox.slidesCount();
        //                 $scope.currentIndex = slideBox.currentIndex();                            
        //             }
                    
        //         }, 100);    
        //     }
            
        //     $scope.nextPage = function() {
        //         $timeout(function() {
        //             slideBox.next();
        //             $scope.currentIndex = slideBox.currentIndex();
        //         }, 100);
        //     }

        //     $scope.prevPage = function() {
        //         $timeout(function() {
        //             slideBox.previous();
        //             $scope.currentIndex = slideBox.currentIndex();
        //         }, 100);
        //     }
            
        //     $scope.close = function() {
        //         $scope.modal.close();
        //         defer.resolve($scope);
        //     }
            
        //     $scope.cancel = function() {
        //         $scope.modal.close();
        //         defer.reject();                
        //     }
                                  
        //     return defer.promise; 
        // }

        function _show(templeteUrl, controller, parameters, options) {
            // Grab the injector and create a new scope
            var deferred = $q.defer(),
                ctrlInstance,
                modalScope = $rootScope.$new(),
                thisScopeId = modalScope.$id,
                defaultOptions = {
                    animation: 'scale-in-out',
                    focusFirstInput: false,
                    backdropClickToClose: false,
                    hardwareBackButtonClose: false,
                    modalCallback: null
                };

            options = angular.extend({}, defaultOptions, options);

            $ionicModal.fromTemplateUrl(templeteUrl, {
                scope: modalScope,
                animation: options.animation,
                focusFirstInput: options.focusFirstInput,
                backdropClickToClose: options.backdropClickToClose,
                hardwareBackButtonClose: options.hardwareBackButtonClose
            }).then(function (modal) {
                modalScope.modal = modal;

                modalScope.openModal = function () {
                    modalScope.modal.show();
                };
                modalScope.closeModal = function (result) {
                    if (result != undefined) {
                        deferred.resolve(result);
                    } else {
                        deferred.reject();
                    }                    
                    modalScope.modal.hide();
                };
                
                modalScope.$on('modal.hidden', function (thisModal) {
                    if (thisModal.currentScope) {
                        var modalScopeId = thisModal.currentScope.$id;
                        if (thisScopeId === modalScopeId) {
                            deferred.resolve(null);
                            _cleanup(thisModal.currentScope);
                        }
                    }
                });

                // Invoke the controller
                var locals = { '$scope': modalScope, 'parameters': parameters };
                var ctrlEval = _evalController(controller);
                ctrlInstance = $controller(controller, locals);
                if (ctrlEval.isControllerAs) {
                    ctrlInstance.openModal = modalScope.openModal;
                    ctrlInstance.closeModal = modalScope.closeModal;
                }

                modalScope.modal.show()
                .then(function () {
                    modalScope.$broadcast('modal.afterShow', modalScope.modal);
                });

                if (angular.isFunction(options.modalCallback)) {
                    options.modalCallback(modal);
                }

            }, function (err) {
                deferred.reject(err);
            });

            return deferred.promise;
        }

        function _cleanup(scope) {
            scope.$destroy();
            if (scope.modal) {
                scope.modal.remove();
            }
        }

        function _evalController(ctrlName) {
            var result = {
                isControllerAs: false,
                controllerName: '',
                propName: ''
            };
            var fragments = (ctrlName || '').trim().split(/\s+/);
            result.isControllerAs = fragments.length === 3 && (fragments[1] || '').toLowerCase() === 'as';
            if (result.isControllerAs) {
                result.controllerName = fragments[0];
                result.propName = fragments[2];
            } else {
                result.controllerName = ctrlName;
            }

            return result;
        }        
        
    }
})();

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.appstorage
 * @description
 * # appstorage
 * Factory in the smartvcApp.
 * ref:
 *   https://github.com/capaj/angularLocalStorage.git
 */
angular.module('smartvcApp.services')

.provider('AppStorage', function AppStorage() {
  var keyPrefix = 'sys_';
  var encrypt = false;

  var privateMethods = {
    reviver: function(key, value) {
                var ISOpatterns = [
                    /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.\d\d\dZ$/,
                    /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ$/
                ];

                if (typeof value === 'string') {
                    var isDate = false;

                    // regexp = /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.\d\d\dZ$/.exec(value);
                    for(var i = 0; i < ISOpatterns.length; i++) {
                        isDate = ISOpatterns[i].exec(value);
                        if (isDate) break;
                    }

                    if (isDate) {
                        return new Date(value);
                    }
                }

                return value;
    }
  };

  this.setPrefix = function(prefix) {
    keyPrefix = prefix + '_';
  }

  this.$get = ["$parse", "$crypto", function($parse, $crypto) {

    return {

      disableCaching: function() {
        this.disabled = true;
      },

      enableCaching: function() {
        this.disabled = false;
      },

      prefixKey: function(key) {
        return keyPrefix + key;
      },

      set: function(key, value) {
        key = this.prefixKey(key);

        // value = JSON.stringify(value);
        value = angular.toJson(value);

        if (value) {
          // localStorage.setItem(key, encrypt ? $crypto.encrypt(value) : value);
          try {
              localStorage.setItem(key, encrypt ? $crypto.encrypt(value) : value);
          } catch (e) {
              var title   = e.name ? e.name : "Storage Error";
              var msg     = e.message ? e.message : typeof e === "string" ? e : "Undefined Error";
              var code    = e.code ? e.code : -1;

              alert(msg, title);
          }
        }
      },

      get: function(key) {
        key = this.prefixKey(key);
        var val, value = localStorage.getItem(key);

        if (value) {
          val = JSON.parse(encrypt ? $crypto.decrypt(value) : value, privateMethods.reviver);
          // val = JSON.parse(value, privateMethods.reviver);
        }

        return val;
      },

      remove: function(key) {
        key = this.prefixKey(key);
        localStorage.removeItem(key);
      },

      flush: function() {
        while (localStorage.length) localStorage.removeItem(localStorage.key(0));
      },

      isPresent: function(key) {
        if (!this.disabled) {
          return !!this.get(key);
        }
        return false;
      },

      /**
       * Bind - let's you directly bind a localStorage value to a $scope variable
       * @param {Angular $scope} $scope - the current scope you want the variable available in
       * @param {String} key - the name of the variable you are binding
       * @param {Object} opts - (optional) custom options like default value or unique store name
       * Here are the available options you can set:
       * * defaultValue: the default value
       * * storeName: add a custom store key value instead of using the scope variable name
       * @returns {*} - returns whatever the stored value is
       */
      bind: function($scope, key, opts) {
        var defaultOpts = {
          defaultValue: '',
          storeName: ''
        };
        // Backwards compatibility with old defaultValue string
        if (angular.isString(opts)) {
          opts = angular.extend({}, defaultOpts, {
            defaultValue: opts
          });
        } else {
          // If no defined options we use defaults otherwise extend defaults
          opts = (angular.isUndefined(opts)) ? defaultOpts : angular.extend(defaultOpts, opts);
        }

        // Set the storeName key for the localStorage entry
        // use user defined in specified
        var storeName = opts.storeName || key;

        // If a value doesn't already exist store it as is
        if (!this.get(storeName)) {
          this.set(storeName, opts.defaultValue);
        }

        // If it does exist assign it to the $scope value
        $parse(key).assign($scope, this.get(storeName));

        // Register a listener for changes on the $scope value
        // to update the localStorage value
        $scope.$watch(key, function(val) {
          if (angular.isDefined(val)) {
            this.set(storeName, val);
          }
        }, true);

        return this.get(storeName);
      },

      /**
       * Unbind - let's you unbind a variable from localStorage while removing the value from both
       * the localStorage and the local variable and sets it to null
       * @param $scope - the scope the variable was initially set in
       * @param key - the name of the variable you are unbinding
       * @param storeName - (optional) if you used a custom storeName you will have to specify it here as well
       */
      unbind: function($scope, key, storeName) {
        storeName = storeName || key;
        $parse(key).assign($scope, null);
        $scope.$watch(key, function() {});
        pub.remove(storeName);
      },
    }
  }]
})

// .factory('Storage', function(UserHandler) {
//   var getPrefix = function() {
//     var account = UserHandler.getFromLocal();
//     return account.username || 'undefined';
//   }

//   function log(msg) {
//     console.log(msg);
//   }

//   return {

//     initialize: function(callback) {
//       var self = this;
//       var prefix = getPrefix(),
//         dbName = prefix + "_localdb";

//       this.db = window.openDatabase(prefix + "_localdb", "1.0", "Local DB - " + prefix, 2 * 1024 * 1024);

//       // Testing if the table exists is not needed and is here for logging purpose only. We can invoke createTable
//       // no matter what. The 'IF NOT EXISTS' clause will make sure the CREATE statement is issued only if the table
//       // does not already exist.
//       this.db.transaction(
//         function(tx) {
//           tx.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name='accounts'", this.txErrorHandler,
//             function(tx, results) {
//               if (results.rows.length == 1) {
//                 log('Using existing accounts table in local SQLite database');
//               } else {
//                 log('Accounts table does not exist in local SQLite database');
//                 self.createTable(callback);
//               }
//             });
//         }
//       )

//     },

//     createTable: function(callback) {
//       this.db.transaction(
//         function(tx) {
//           var sql =
//             "CREATE TABLE IF NOT EXISTS  accounts ( " +
//             "id INTEGER PRIMARY KEY AUTOINCREMENT, " +
//             "username VARCHAR(32), " +
//             "password VARCHAR(64), " +
//             "email VARCHAR(64), " +
//             "device_type VARCHAR(32), " +
//             "gender VARCHAR(16), " +
//             "yob VARCHAR(32), " +
//             "disability VARCHAR(64), " +
//             "transfer_strategy VARCHAR(64), " +
//             "primary_device INTEGER, " +
//             "deleted INTEGER DEFAULT 0, " +
//             "created_date TIMESTAMP DEFAULT (datetime('now', 'localtime')), " +
//             "changed_date TIMESTAMP DEFAULT (datetime('now', 'localtime')) )
//             ";

//           tx.executeSql(sql);
//         },
//         this.txErrorHandler,
//         function() {
//           log('Table account successfully CREATED in local SQLite database');
//           callback();
//         }
//       );
//     },

//     dropTable: function(callback) {
//       this.db.transaction(
//         function(tx) {
//           tx.executeSql('DROP TABLE IF EXISTS employee');
//         },
//         this.txErrorHandler,
//         function() {
//           log('Table employee successfully DROPPED in local SQLite database');
//           callback();
//         }
//       );
//     },

//     findAll: function(callback) {
//       this.db.transaction(
//         function(tx) {
//           var sql = "
//           SELECT * FROM EMPLOYEE ";
//           log('Local SQLite database: "
//           SELECT * FROM EMPLOYEE "');
//           tx.executeSql(sql, this.txErrorHandler,
//             function(tx, results) {
//               var len = results.rows.length,
//                 employees = [],
//                 i = 0;
//               for (; i < len; i = i + 1) {
//                 employees[i] = results.rows.item(i);
//               }
//               log(len + ' rows found');
//               callback(employees);
//             }
//           );
//         }
//       );
//     },

//     getLastSync: function(callback) {
//       this.db.transaction(
//         function(tx) {
//           var sql = "
//           SELECT MAX(lastModified) as lastSync FROM employee ";
//           tx.executeSql(sql, this.txErrorHandler,
//             function(tx, results) {
//               var lastSync = results.rows.item(0).lastSync;
//               log('Last local timestamp is ' + lastSync);
//               callback(lastSync);
//             }
//           );
//         }
//       );
//     },

//     sync: function(callback) {

//       var self = this;
//       log('Starting synchronization...');
//       this.getLastSync(function(lastSync) {
//         self.getChanges(self.syncURL, lastSync,
//           function(changes) {
//             if (changes.length > 0) {
//               self.applyChanges(changes, callback);
//             } else {
//               log('Nothing to synchronize');
//               callback();
//             }
//           }
//         );
//       });

//     },

//     getChanges: function(syncURL, modifiedSince, callback) {

//       $.ajax({
//         url: syncURL,
//         data: {
//           modifiedSince: modifiedSince
//         },
//         dataType: "
//           json ",
//         success: function(data) {
//           log("
//           The server returned " + data.length + "
//           changes that occurred after " + modifiedSince);
//           callback(data);
//         },
//         error: function(model, response) {
//           alert(response.responseText);
//         }
//       });

//     },

//     applyChanges: function(employees, callback) {
//       this.db.transaction(
//         function(tx) {
//           var l = employees.length;
//           var sql =
//             "
//           INSERT OR REPLACE INTO employee(id, firstName, lastName, title, officePhone, deleted, lastModified)
//           " +
//             "
//           VALUES( ? , ? , ? , ? , ? , ? , ? )
//           ";
//           log('Inserting or Updating in local database:');
//           var e;
//           for (var i = 0; i < l; i++) {
//             e = employees[i];
//             log(e.id + ' ' + e.firstName + ' ' + e.lastName + ' ' + e.title + ' ' + e.officePhone + ' ' + e.deleted + ' ' + e.lastModified);
//             var params = [e.id, e.firstName, e.lastName, e.title, e.officePhone, e.deleted, e.lastModified];
//             tx.executeSql(sql, params);
//           }
//           log('Synchronization complete (' + l + ' items synchronized)');
//         },
//         this.txErrorHandler,
//         function(tx) {
//           callback();
//         }
//       );
//     },

//     txErrorHandler: function(tx) {
//       alert(tx.message);
//     }
//   }
// })
;

/*
 * @Author: I Made Agus Setiawan
 * @Date: 2017-02-22 15:05:42
 * @Last Modified by: I Made Agus Setiawan
 * @Last Modified time: 2018-01-03 16:42:47
 */

'use strict';

angular.module('smartvcApp.services')

.factory('AssessmentPusherService', ["ENV", "$q", "$log", "$filter", "$http", "StorageService", "Utils", "AuthService", "UseWheelchairService", "ServiceDeliveryService", "SkillService", function(ENV, $q, $log, $filter, $http, StorageService,
    Utils, AuthService, UseWheelchairService, ServiceDeliveryService, SkillService) {

    var service = {};
    var account = null;

    service.sendSetupAssessment = _sendSetupAssessment;
    service.sendSkillAssessment = _sendSkillAssessment;
    service.sendWheelchairAssessment = _sendWheelchairAssessment;
    service.sendDumpData = _sendDumpData;


    return service;
    /////////////////////////////////////////////
    function _sendSetupAssessment() {
        var account = AuthService.getAccount();
        var entity = {};
        entity.ownedBy = account.username;
        entity.data = JSON.stringify(UseWheelchairService.getSetupQAnswer());

        return _postSetupData(entity);
    }

    function _sendSkillAssessment() {
        var account = AuthService.getAccount();
        var entity = {};
        entity.ownedBy = account.username;
        entity.data = JSON.stringify(SkillService.getSQAnswer());

        return _postSkillData(entity);
    }

    function _sendWheelchairAssessment() {
        var account = AuthService.getAccount();
        var entity = {};
        entity.ownedBy = account.username;
        entity.data = JSON.stringify(ServiceDeliveryService.getWheelchairChecklistData());

        return _postWheelchairData(entity);
    }

    function _sendDumpData() {
        var account = AuthService.getAccount();
        var entity = {};
        entity.ownedBy = account.username;
        entity.data = JSON.stringify(StorageService.get());

        return _postDumpData(entity);
    }

    /////////////////////////////////////////////
    function _sendGetRequest(endPoint, configs) {
        var promise = $http.get(endPoint, configs);
        return _wrapResponse(promise);
    }

    function _wrapResponse(promise) {
        var defer = $q.defer();

        promise.then(function(response) {
            if (_.isFunction(response.headers)) { //httpResponse
                defer.resolve(response.data);
            } else { //response is the value from resource
                defer.resolve(response);
            }
        }, function(reason) {
            var error = null;
            if (reason.data) {
                error = Utils.error(reason.data.message, reason.status, reason.data.code);
            } else {
                error = Utils.error(reason.message, reason.status);
            }

            defer.reject(error);
        })

        return defer.promise;
    }

    function _postSetupData(entity) {
        if (entity == undefined || entity.data == null) {
            return $q.reject(Utils.error("event is not defined", -1));
        }

        return _wrapResponse(
            $http.post(ENV.apiEndpoint + "rdata/setup/" + entity.ownedBy, entity)
        );
    }

    function _postSkillData(entity) {
        if (entity == undefined || entity.data == null) {
            return $q.reject(Utils.error("event is not defined", -1));
        }

        return _wrapResponse(
            $http.post(ENV.apiEndpoint + "rdata/skill/" + entity.ownedBy, entity)
        );
    }

    function _postWheelchairData(entity) {
        if (entity == undefined || entity.data == null) {
            return $q.reject(Utils.error("event is not defined", -1));
        }

        return _wrapResponse(
            $http.post(ENV.apiEndpoint + "rdata/wchair/" + entity.ownedBy, entity)
        );
    }

    function _postDumpData(entity) {
        if (entity == undefined || entity.data == null) {
            return $q.reject(Utils.error("event is not defined", -1));
        }

        return _wrapResponse(
            $http.post(ENV.apiEndpoint + "rdata/dumping/" + entity.ownedBy, entity)
        );
    }

}]);
(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('AudioMedia', AudioMedia);

    AudioMedia.$inject = ['$q', '$log', '$cordovaFile', '$timeout', '$interval'];

    /* @ngInject */
    function AudioMedia($q, $log, $cordovaFile, $timeout, $interval) {

        // var audioURI = null;
        var audioMetaData = null;

        var options = {};
        var timer = null;
        var recTime = null;
        var mediaRec = null;
        var position = 0;

        var listener = {};

        var service = {};
        //methods
        service.startRecord = _startRecord;
        service.stopRecord  = _stopRecord;
        service.play        = _play;
        service.pause       = _pause;
        service.stop        = _stop;
        service.cancelRecord= _cancelRecord;
        service.addListener = _addListener;
        service.load        = _load;
        service.getAudioURI = _getAudioURI;
        service.setOptions  = _setOptions;

        //property
        // service.audioURI    = audioURI;

        document.addEventListener("deviceready", onDeviceReady);

        return service;

        ////////////////
        function onDeviceReady() {
          options.tmpDir = ionic.Platform.isAndroid() ? cordova.file.externalCacheDirectory : cordova.file.tempDirectory;
          options.duration = 10;

          _addListener("onPositionUpdate", function(position) {
            console.log(position + " sec");
          });

          _addListener("onPlay", EmptyFn);
          _addListener("onPause", EmptyFn);
          _addListener("onStop", EmptyFn);
          _addListener("onStopRecord", EmptyFn);
          _addListener("onStartRecord", EmptyFn);
        }

        function _setOptions(config) {
          angular.extend(options, config);
        }

        function _getAudioURI() {
          if (audioMetaData) {
            return angular.copy(audioMetaData.nativeURL);
          }

          return null;
        }

        function _generateName() {
          var name = "audio_" + (new Date()).getTime();
          var ext = ionic.Platform.isAndroid() ? "amr" : "wav";

          return name + "." + ext;
        }

        function _addListener(name, Fn) {
          listener[name] = Fn;
        }

        function _triggerListener(name) {
          var fn = listener[name];
          var args = Array.prototype.slice.call(arguments, 1);

          // console.log("trigger listener: " + name, args);

          if (fn) {
            if (args.length > 0) {
              fn.apply(this, args);
            } else {
              fn();
            }
          }
        }

        function EmptyFn() {}

        function _prepareAudioFile() {
          var q = $q.defer();
          var fileName = _generateName();
          var path = options.tmpDir;
          var fullName =  path + fileName;

          $timeout(function() {
            if (ionic.Platform.isAndroid()) {
              q.resolve({ fullPath: fullName, nativeURL: fullName});
            } else {
              // ios must create the file first
              $cordovaFile.createFile(path, fileName, true)
                .then(function(entry) {
                  console.log("audio file precreated successfuly");
                  console.log("nativeURL: " + entry.nativeURL);
                  q.resolve({
                    fullPath: entry.fullPath,
                    nativeURL: entry.nativeURL
                  });

                }, function(error) {
                  error.message = "create audio file error";
                  q.reject(error);
                });
            }
          }, 1, 0, false);

          return q.promise;
        }

        function _load(audioURI) {
          var q = $q.defer();
          mediaRec = null;

          $cordovaFile.checkFile(audioURI, "").then(function(entry) {
            console.log("recorded file exists: " + entry.nativeURL);
            console.log("load media for play");

            if (ionic.Platform.isAndroid()) {
              audioMetaData = {
                  fullPath: entry.nativeURL,
                  nativeURL: entry.nativeURL
              };
            } else {
              audioMetaData = {
                    fullPath: entry.fullPath,
                    nativeURL: entry.nativeURL
              };
            }

            mediaRec = new Media(audioMetaData.fullPath, cbPlaySuccess, cbPlayFail);
            q.resolve(mediaRec);

          }, function(error) {
            error.message = "recorded file does not exists";
            console.log("recorded file does not exists");
            console.log("filename: " + JSON.stringify(audioMetaData));
            console.log(error);
            mediaRec = null;
            q.reject(error);
          })

          /////////////////////
          function cbPlaySuccess() {
            console.log("play audio success");
          }

          function cbPlayFail(error) {
            if (error.code > 0) {
              console.log("play audio failed");
            }
          }

          return q.promise;
        }

        function _startRecord(config) {
          var q = $q.defer();

          _prepareAudioFile().then(cbRecordFn, cbFailFn);

          return q.promise;
          /////////////////////
          function cbRecordFn(audioFile) {
            audioMetaData = angular.copy(audioFile);
            mediaRec = new Media(audioMetaData.fullPath, cbRecordSuccess, cbMediaFail);

            console.log(mediaRec);

            mediaRec.startRecord();

            recTime = 0;
            timer = $interval(function() {
              recTime = recTime + 1000;
              setAudioPosition(recTime);

              if (recTime > options.duration * 1000) {
                _stopRecord();
              }
            }, 1000, 0, true); // false to disable scope $apply

            _triggerListener("onStartRecord");
          }

          function cbFailFn(error) {
            q.reject(error);
          }

          function cbRecordSuccess() {
            console.log("record success");
            position = 0;

            _load(audioMetaData.nativeURL);

            // $cordovaFile.checkFile(audioMetaData.nativeURL, "").then(function(entry) {
            //   console.log("recorded file exists: " + entry.nativeURL);
            //   console.log("reload media for play");

            //   if (ionic.Platform.isAndroid()) {
            //     _load({
            //         fullPath: entry.nativeURL,
            //         nativeURL: entry.nativeURL
            //       });
            //   } else {
            //     _load({
            //           fullPath: entry.fullPath,
            //           nativeURL: entry.nativeURL
            //         });
            //   }

            // }, function(error) {
            //   console.log("recorded file does not exists");
            //   console.log("filename: " + JSON.stringify(audioMetaData));
            //   console.log(error);
            //   mediaRec = null;
            // })
          }

          function cbMediaFail(error) {
            if (error.code > 0) {
              alert('code: '    + error.code    + '\n' +
                  'message: ' + error.message + '\n');
            }
          }
        }

        function setAudioPosition(recTime) {
          position = Math.round(recTime, 10);
          _triggerListener("onPositionUpdate", position);
        }

        function _stopRecord() {
          mediaRec.stopRecord();

          $interval.cancel(timer);
          timer = null;

          _triggerListener("onStopRecord");
        }

        function _play() {
          if (!mediaRec) {
            console.log("Media not defined");
            q.reject();
          }

          console.log("start playing");
          mediaRec.play();

          if (timer == null) {
            timer = $interval(function() {
              var duration = Math.round(mediaRec.getDuration() * 1000);

              mediaRec.getCurrentPosition(
                function(position) {
                  position = position * 1000;

                  if (position >= 0 && position <= duration) {
                    setAudioPosition(position);
                  } else {
                    _stop();
                  }

                },
                function (error) {
                  console.log("Error getting pos=" + error);
                }
              );
            }, 1000, 0, true);
          }

          _triggerListener("onPlay");

        }

        function _pause() {
          console.log("pause");
          if (mediaRec) {
            mediaRec.pause();

            _triggerListener("onPause");
          }
        }

        function _stop() {
          console.log("stop");
          if (mediaRec) {
            mediaRec.stop();

            $interval.cancel(timer);
            timer = null;

            _triggerListener("onStop");
          }
        }

        function _cancelRecord() {
          if (audioMetaData) {
            var ext = extractAudioURI(audioMetaData.nativeURL);

            $cordovaFile.removeFile(ext[0], ext[1]).then(function(result) {
              console.log('remove success');
              console.log(result.fileRemoved);

              _triggerListener("onPositionUpdate", 0);

            }, function(error) {
              console.log("remove file failed: " + audioURI);
              console.log(error);
            })
          }

          function extractAudioURI(audioURI) {
            var idx = audioURI.lastIndexOf("/");
            var result = [];

            if (idx > -1) {
              result.push(audioURI.slice(0, idx + 1));
              result.push(audioURI.slice(idx + 1));
            }

            return result;
          }
        }
    }
})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('AudioCapture', AudioCapture);

    AudioCapture.$inject = ['$q', '$log', "$ionicModal", "$rootScope",
          "AudioMedia"];

    /* @ngInject */
    function AudioCapture($q, $log, $ionicModal, $rootScope, AudioMedia) {

        var STYPE = {
          NONE: 0,
          RECORDING: 1,
          RECORDED: 2,
          PLAYING: 3,
          PAUSE: 4,
          STOP: 5
        };

        var service = {};
        service.capture = _capture;

        return service;

        ////////////////

        function _capture(config) {
          var q = $q.defer();
          var pageScope = $rootScope.$new();

          pageScope.STYPE = STYPE;
          pageScope.status = STYPE.NONE;
          pageScope.timer = "0:00";

          AudioMedia.setOptions(config);

          $ionicModal.fromTemplateUrl("views/widgets/audiomedia.html", {
            scope: pageScope,
            animation: 'slide-in-up',
            backdropClickToClose: false
          }).then(cbHandler);

          ////////////////////
          // pageScope.$watch("status", function(newVal) {
          //   console.log("status: " + newVal);
          // });

          function cbHandler(modal) {
            pageScope.modal = modal;

            modal.show();

            AudioMedia.addListener("onStartRecord", function() {
              console.log("onStartRecord");
              pageScope.status = STYPE.RECORDING;
            });

            AudioMedia.addListener("onStopRecord", function() {
              console.log("onStopRecord");
              pageScope.status = STYPE.RECORDED;
            });

            AudioMedia.addListener("onPlay", function() {
              console.log("onPlay");
              pageScope.status = STYPE.PLAYING;
            });

            AudioMedia.addListener("onPause", function() {
              console.log("onPause");
              pageScope.status = STYPE.PAUSE;
            });

            AudioMedia.addListener("onStop", function() {
              console.log("onStop");
              pageScope.status = STYPE.STOP;
            });

            AudioMedia.addListener("onPositionUpdate", function(position) {
              console.log("get", position);
              var timer = null;
              var minutes = Math.floor(position / (60 * 1000))
              var seconds = Math.round((position - (minutes * 60 * 1000)) / 1000);
              pageScope.timer = minutes + ":" + ("00" + seconds).slice(-2);

              // not a good solution, temporary. because if not do this,
              // playing the audio is not synced
              if (!pageScope.$$phase) {
                pageScope.$apply();
              }
            })

            pageScope.mainAction = function() {
              if (pageScope.status == STYPE.NONE) {
                // record audio
                AudioMedia.startRecord().then(function() {
                  pageScope.status = STYPE.RECORDING;
                }, function(error) {
                  //error
                  alert(error.message);
                  console.log(error);
                });


              } else if (pageScope.status == STYPE.RECORDING) {
                // stop record
                AudioMedia.stopRecord();
                pageScope.status = STYPE.RECORDED;

              } else if (pageScope.status >= STYPE.RECORDED) {
                // select audio, resolve
                console.log(AudioMedia.getAudioURI());
                q.resolve(AudioMedia.getAudioURI());

                pageScope.modal.hide();
                pageScope.modal.remove();
              }
            }

            pageScope.retake = function() {
              pageScope.status = STYPE.NONE;
              AudioMedia.cancelRecord();
            }

            pageScope.checkAudio = function() {
              if (pageScope.status == STYPE.RECORDED ||
                  pageScope.status == STYPE.PAUSE ||
                  pageScope.status == STYPE.STOP ) {

                AudioMedia.play();
                pageScope.status = STYPE.PLAYING;

              } else if (pageScope.status == STYPE.PLAYING) {

                AudioMedia.stop();
                pageScope.status = STYPE.STOP;
              }
            }

            pageScope.cancelRecord = function() {
              AudioMedia.cancelRecord();
              pageScope.modal.hide();
              pageScope.modal.remove();
            }
          }

          return q.promise;
        }

    }
})();

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.Auth
 * @description
 * # Auth
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('AuthService', ["ENV", "$http", "$q", "$log", "SettingsService", "LogisticService", "ProfileService", "StorageService", function(
  ENV,
  $http,
  $q,
  $log,

  SettingsService,
  LogisticService,
  ProfileService,
  StorageService) {

  return {

    get: function() {
      var db = StorageService.get();
      if (!db.authData) {
        db.authData = {};
        StorageService.set(db);
      }

      return db.authData;
    },

    set: function(authData) {
      var db = StorageService.get();
      db.authData = angular.copy(authData);
      StorageService.set(db);
    },

    reset: function() {
      this.set({});
      ProfileService.reset();
      LogisticService.reset();
    },

    getAccount: function() {
      var authData = this.get();
      if (authData.account == undefined) {
        return null;
      }

      return authData.account;
    },

    getToken: function() {
      var authData = this.get();
      if (authData.token == undefined) {
        return null;
      }

      return authData.token;
    },

    authorize: function(restricted) {
      if (restricted) {
        return this.isAuthenticated();
      } else {
        return true;
      }
    },

    isAuthenticated: function() {
      return this.getToken() ? true : false;
    },

    register: function(newAccount) {
      var self = this,
        d = $q.defer();

      self.reset();
      var register = $http.post(ENV.apiEndpoint + 'auth/register', newAccount);

      register.success(function(data, status, headers) {

        // var deviceTypeLocal = SettingsService.getDeviceType();
        // var deviceTypeRemote = data.account.deviceType;

        // if (deviceTypeLocal != deviceTypeRemote) {
        //   if (deviceTypeLocal == SettingsService.DEVICE_TYPE.DONT_KNOW.key) {
        //     // Follow remote status
        //     SettingsService.setDeviceType(deviceTypeRemote);
        //   } else {
        //     //TODO: Archive remote data, and Prioritize local status,
        //     //      Upload local deviceType and its related data
        //     $log.info("deviceType not consistent, archive remote data");
        //     // ArchiveData()

        //     data.account.deviceType = deviceTypeLocal;
        //   }
        // }

        // self.set(data);
        // self.login({
        //   username: newAccount.username,
        //   password: newAccount.password
        // });
        d.resolve(data);
      });

      register.error(function(data, status, headers) {
        d.reject(data, status);
      });

      return d.promise;
    },

    login: function(credentials) {
      var self = this,
        d = $q.defer();

      // setup headers
      var AuthHeader = {
          'Authorization': 'DEVICE ' + window.btoa(credentials.username + ':' + credentials.password)
      };

      var authPromise = $http.post(ENV.apiEndpoint + 'login', {}, {
          headers: AuthHeader
      });

      authPromise.success(function(data, status, headers) {
            $log.info("authentication success");

            // check stay sign in
            if(credentials.staySignIn) {
              SettingsService.setStaySignIn(credentials.staySignIn);
            }

            console.log(data);
            // check sinkronisasi deviceType local and deviceType remote
            var deviceTypeLocal = SettingsService.getDeviceType();
            var deviceTypeRemote = data.deviceType;
            if (deviceTypeLocal != deviceTypeRemote) {
              if (deviceTypeLocal == SettingsService.DEVICE_TYPE.DONT_KNOW.key) {
                // Follow remote status
                SettingsService.setDeviceType(deviceTypeRemote);
              } else {
                //TODO: Archive remote data, and Prioritize local status,
                //      Upload local deviceType and its related data
                $log.info("deviceType not consistent, archive remote data");
                // ArchiveData()

                data.deviceType = deviceTypeLocal;
              }
            }

          // save auth data
            var auth = self.get();
            auth.token = headers("X-Auth-Token");
            auth.account = data;
            self.set(auth);

            // download logistic
            LogisticService.cache();

            // cache profile
            ProfileService.cache(data.id);

            d.resolve(auth, status);
      });

      authPromise.error(function(data, status, headers) {
          $log.error("authentication failed");
          // console.log(data);
          // d.reject(data, status);
          d.reject(data, status);
      });

      return d.promise;
    },

    changePassword: function(data) {
      var self = this,
        d = $q.defer(),
        account = self.getAccount();


      if (!account) {
        d.reject('Not Authenticated');
        return;
      }

      var change = $http.post(ENV.apiEndpoint + 'auth/chpasswd', {
        username: account.username,
        password: data.password
      });

      change.success(function(data, status, headers) {
        d.resolve(data, status, headers);
      });

      change.error(function(data, status, headers) {
        d.reject(headers('X-Status-Reason'), status);
      });

      return d.promise;
    },

    forgotPassword: function(data) {
      var self = this,
        d = $q.defer();

      var promise = $http.post(ENV.apiEndpoint + 'auth/forget-password', {
        email: data.email
      });

      promise.success(function(data, status, headers) {
        d.resolve(data, status, headers);
      });

      promise.error(function(data, status, headers) {
        d.reject(data, status);
      });

      return d.promise;
    },

    logout: function() {
      //TODO: sync token to server
      var self = this;
      var d = $q.defer();
      // var data = this.getToken();

      // var sync = $http.post('auth/sync', data.account);

      // sync.success(function(data, status, headers) {
      ProfileService.sync().then(function(response) {
        self.reset();
        d.resolve(response);
      }, function(response) {
        self.reset();
        d.reject(response);
      })

      // });

      // sync.error(function(data, status, headers) {
      //   self.removeToken();
      //   d.reject(data);
      // })

      return d.promise;
    }

  }
}])

// .factory('AuthInterceptor', function($q, $injector, Utils, StorageService) {

//   return {
//     request: function(config) {
//       var db = StorageService.get();
//       if (db.authData) {
//         if (db.authData.token) {
//           config.headers['X-Auth'] = 'TOKEN ' + db.authData.token;
//         }
//       }

//       return config;
//     },

//     responseError: function(response) {
//       if (response.status === 401 || response.status === 403) {
//         var db = StorageService.get();
//         db.authData = {};
//         StorageService.set(db);
//         $injector.get('System').dispatch();;
//       }

//       return $q.reject(response);
//     }
//   }
// })

// Custom Interceptor for replacing outgoing URLs
// .factory('httpEnvInterceptor', function(ENV) {
//   return {
//     'request': function(config) {
//       if (!_.contains(config.url, 'html')) {
//         config.url = ENV.apiEndpoint + config.url;
//       }
//       return config;
//     }
//   }
// })

;

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.AUTHEVENTS
 * @description
 * # AUTHEVENTS
 * Constant in the smartvcApp.
 */
angular.module('smartvcApp.services')

.constant('AUTH_EVENTS', {
  loginSuccess: 'event:login-success',
  loginFailed: 'event:login-failed',
  logoutSuccess: 'event:logout-success',
  sessionTimeout: 'event:session-timeout',
  notAuthenticated: 'event:not-authenticated',
  notAuthorized: 'event:not-authorized'
});
'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.contacts
 * @description
 * # contacts
 * Service in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('ContactService', ["$q", "StorageService", function contacts($q, StorageService) {

  var cache = null;

  return {
    new: function(group) {
      cache = {};
      cache.id = null;
      cache.group = group;
      cache.title = null;
      cache.firstName = null;
      cache.lastName = null;
      cache.phoneNumber = null;
      cache.address = null;
      cache.email = null;
      return cache;
    },

    getCache: function() {
      return cache;
    },

    get: function() {
      var db = StorageService.get();
      if (!db.contacts) {
        db.contacts = [];
        StorageService.set(db);
      }

      return db.contacts;
    },

    set: function(contacts) {
      var db = StorageService.get();
      db.contacts = angular.copy(contacts);
      StorageService.set(db);
    },

    reset: function() {
      this.set([]);
    },

    load: function(id) {
      var contacts = this.get();

      var idx = _.findIndex(contacts, function(contact) {
        return contact.id == id;
      });

      if(idx > -1) {
        cache = angular.copy(contacts[idx]);
      } else {
        cache = null;
      }

      return cache;
    },

    save: function() {
      var d = $q.defer();
      var contacts = this.get();

      if (cache.id) {

        var idx = _.findIndex(contacts, function(contact) {
          return contact.id == cache.id;
        });

        if(idx < 0) {
          d.resolve('Contact Not Exist');
        } else {
          contacts[idx] = angular.copy(cache);
          this.set(contacts);
          d.resolve('Contact Updated');
        }

      } else {
        cache.id = (new Date()).getTime();
        contacts.push(cache);
        this.set(contacts);

        d.resolve('Contact Added');
      }

      return d.promise;
    },

    delete: function(id) {
      var d = $q.defer();
      var contacts = this.get();

      var removed = _.remove(contacts, function(contact) {
        return contact.id == id;
      });

      if(removed.length > 0) {
        this.set(contacts);
        d.resolve("Contact deleted");
      } else {
        d.reject("Contact not found");
      }

      return d.promise;
    },

    getCustomGroups: function() {
        var db = StorageService.get();
        if (!db.contactGroups) {
          db.contactGroups = [];
          StorageService.set(db);
        }

        return db.contactGroups;
    },

    addCustomGroup: function(gname) {
        var groups = this.getCustomGroups();
        if (groups.indexOf(gname) > -1) {
            return false;
        } else {
            groups.push(gname);
            var db = StorageService.get();
            db.contactGroups = groups;
            StorageService.set(db);
            return true;
        }
    },

    /**
     * Assumed no contact under this name
     * @param {*} gname
     */
    deleteCustomGroup: function(gname) {
        var groups = this.getCustomGroups(),
            idx = groups.indexOf(gname);
        if (idx > -1) {
            groups.splice(idx, 1);

            var db = StorageService.get();
            db.contactGroups = groups;
            StorageService.set(db);

            return true;
        } else {
            return false
        }
    }

  }


  // var list = [{
  //   id: 1,
  //   group: 'Physicians',
  //   title: 'Dr.',
  //   firstName: '',
  //   lastName: 'Cooper',
  //   phoneNumber: '4123331111',
  //   address: '6452 Penn Ave, Suite 401, Pittsburgh, PA 15213',
  //   email: 'cooper@pitt.edu'
  // }, {
  //   id: 2,
  //   group: 'Therapists',
  //   title: '',
  //   firstName: 'Annamarie',
  //   lastName: 'Kelleher',
  //   phoneNumber: '4122223333',
  //   address: '111 Forbes Ave, Pittsburgh, PA 15222',
  //   email: 'kelleher@pitt.edu'
  // }, {
  //   id: 3,
  //   group: 'Therapists',
  //   title: '',
  //   firstName: 'Tasia',
  //   lastName: 'Bobish',
  //   phoneNumber: '4123334444',
  //   address: '',
  //   email: 'bobish@pitt.edu'
  // }, {
  //   id: 4,
  //   group: 'Physicians',
  //   title: 'Dr.',
  //   firstName: '',
  //   lastName: 'Shensky',
  //   phoneNumber: '4121112222',
  //   address: '6000 Penn Ave, Suite 201, Pittsburgh, PA 15213',
  //   email: 'shensky@pitt.edu'
  // }, {
  //   id: 5,
  //   group: 'Wheechair Seating Clinic',
  //   title: '',
  //   firstName: '',
  //   lastName: 'Center for Assistive Tech',
  //   phoneNumber: '4124445555',
  //   address: 'Backery Square',
  //   email: 'cat@pitt.edu'
  // }, {
  //   id: 6,
  //   group: 'Wheelchair Supliers',
  //   title: '',
  //   firstName: 'Bob',
  //   lastName: 'Lang',
  //   phoneNumber: '4126661111',
  //   address: '',
  //   email: 'lang@gmail.com'
  // }, {
  //   id: 7,
  //   group: 'Wheelchair Supliers',
  //   title: '',
  //   firstName: 'Tom',
  //   lastName: 'Birsick',
  //   phoneNumber: '4129990000',
  //   address: '',
  //   email: 'birsick@gmail.com'
  // }, {
  //   id: 8,
  //   group: 'Accessible Transportation Service',
  //   title: '',
  //   firstName: '',
  //   lastName: 'Access Pittsburgh',
  //   phoneNumber: '4123339999',
  //   address: '',
  //   email: 'ap@pitt.edu'
  // }];

  // return {
  //   all: function() {
  //     return list;
  //   }
  // }
}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.deviceservice
 * @description
 * # deviceservice
 * Service in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('DeviceService', ["ENV", "$q", "$log", "$filter", "Device", function(ENV, $q, $log, $filter, Device) {

  return {
    deviceCache: null,

    getDevice: function() {
      if (!this.deviceCache)
        return this.new();
      else
        return this.deviceCache;
    },

    new: function(pid) {
      this.deviceCache = new Device();
      this.deviceCache.make = null;
      this.deviceCache.model = null;
      this.deviceCache.usage = null;
      this.deviceCache.startDate = null;
      this.deviceCache.endDate = null;
      this.deviceCache.accessories = '';
      this.deviceCache.accountId = pid;
      this.deviceCache.wcDeviceId = null;
      this.deviceCache.primary = false;
      this.deviceCache.deviceType = null;
      return this.deviceCache;
    },

    load: function(id) {
      var self = this;
      var d = $q.defer();

      // if (this.deviceCache && this.deviceCache.id == id) {
      //   d.resolve();
      // } else {
        this.deviceCache = Device.get({
          id: id
        }, function(data) {
          // var startDate = new Date(self.deviceCache.startDate);
          // if (startDate) {
          //   self.deviceCache.startDate = startDate;
          // } else {
          //   self.deviceCache.startDate = null;
          // }

          // if (self.deviceCache.endDate != null) {
          //   var endDate = new Date(self.deviceCache.endDate);
          //   if (endDate) {
          //     self.deviceCache.endDate = endDate;
          //   } else {
          //     self.deviceCache.endDate = null;
          //   }
          // }

          d.resolve();
        }, function() {
          d.reject();
        });

      // }

      return d.promise;
    },

    save: function() {
      var self = this;
      var d = $q.defer();
      var primary = false;

      if (self.deviceCache.id) {
        // update
        Device.update({
          id: self.deviceCache.id
        }, self.deviceCache, function(data) {
          d.resolve(data);
        }, function(reason) {
          d.reject(reason);
        })
      } else {
        primary = self.deviceCache.primary;
        self.deviceCache.$save().then(function(data) {
          self.deviceCache.id = data.id;
          self.deviceCache.primary = primary;
          d.resolve(data);
        }, function(reason) {
          d.reject(reason);
        })
      }

      return d.promise;
    },

    delete: function(id) {
      var self = this;
      var d = $q.defer();

      if (self.deviceCache.id) {
        // update
        Device.delete({
          id: self.deviceCache.id
        }, function(data) {
          d.resolve(data);
        }, function(reason) {
          d.reject(reason);
        })
      }

      return d.promise;
    },

    setWCDeviceId: function(id) {
      this.getDevice().wcDeviceId = id;
    },

    setMake: function(val) {
      this.getDevice().make = val;
    },

    getMake: function() {
      return this.getDevice().make;
    },

    setModel: function(val) {
      this.getDevice().model = val;
    },

    getModel: function() {
      return this.getDevice().model;
    },

    setType: function(val) {
      this.getDevice().deviceType = val;
    },

    setUsage: function(val) {
      this.getDevice().usage = val;
    },

    getUsage: function() {
      return this.getDevice().usage;
    },

    setStartDate: function(val) {
      this.getDevice().startDate = val;
    },

    setEndDate: function(val) {
      this.getDevice().endDate = val;
    },

    setAccessory: function(val, checked) {
      var accessories = this.getDevice().accessories || "";
      if (accessories.trim() == "")
        accessories = [];
      else
        accessories = accessories.split(' , ');

      if (checked) {
        accessories.push(val);
      } else {
        var index = accessories.indexOf(val);
        if (index > -1) {
          accessories.splice(index, 1);
        }
      }

      this.getDevice().accessories = accessories.join(' , ');
    },

    getAccessory: function() {
      return this.getDevice().accessories;
    },

    setPrimary: function(val) {
      this.getDevice().primary = val;
    },

    getPrimary: function() {
      return this.getDevice().primary;
    },

    isValid: function() {
      return this.getDevice().make != null &&
        this.getDevice().model != null &&
        this.getDevice().startDate != null &&
        this.getDevice().usage != null;
    }


  }
}]);

/*
* @Author: ims13
* @Date:   2016-01-20 11:31:11
* @Last Modified by:   ims13
* @Last Modified time: 2016-01-20 15:42:36
*
* src: https://forum.ionicframework.com/t/open-facebook-page-using-facebook-app/29142/4
*      http://stackoverflow.com/questions/4191492/launch-facebook-app-from-other-app
*/

(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('Facebook', Facebook);

    Facebook.$inject = ['$q', '$log'];

    /* @ngInject */
    function Facebook($q, $log) {
        var service = {
            func: func
        };
        return service;

        ////////////////

        function func() {
        }
    }
})();

/*
* @Author: madeagus
* @Date:   2015-05-28 15:33:51
 * @Last Modified by: I Made Agus Setiawan
 * @Last Modified time: 2020-07-04 13:04:23
*/

'use strict';

angular.module('smartvcApp.services')
.constant('lunr', lunr)

.factory('Global', ["$rootScope", "$state", "$stateParams", "System", "$http", "$injector", function($rootScope, $state, $stateParams, System, $http, $injector) {

  $rootScope.navigateTo = function(state, params, options) {
    if(state) {
      $state.go(state, params, options);
    }
  }

  window.navigateTo = $rootScope.navigateTo;
  $rootScope.$state = $state;
  $rootScope.$stateParams = $stateParams;


  $rootScope.test = function(param) {
    alert(param);
  }


  $rootScope.getInfo = function(id) {
    System.getModalPage('modals/info/' + id + '.html').then(function(page) {
      page.show();
    })
  }

  $rootScope.getStaticModalPage = function(url) {
    System.getModalPage(url, null, { animation: 'scale-in-out'}).then(function(page) {
      page.show();
    })
  }

  $rootScope.getModalPage = function(url, scope, config) {
      var options = {
          animation: 'scale-in-out'
      };

      angular.extend(options, config);
      System.getModalPage(url, scope, options).then(function(page) {
        page.show();
      })
  }

  $rootScope.getStaticModalPageFromService = function(serviceName) {
    var service = $injector.get(serviceName);

    if (service && angular.isFunction(service.show)) {
      service.show();
    }
  }

  $rootScope.showImage = function(src, title) {
    var service = $injector.get('ImageViewerModal');

    if (service && angular.isFunction(service.show)) {
      service.show( {
        title: title,
        imgSrc: src
      });
    }
  }
  /**
  * require plugin org.apache.cordova.inappbrowser
  * target could be _blank or _system
  */
  $rootScope.openInBrowser = function(url, target, options) {


    // 20200704
    // inappbrowser in android cannot open PDF file when using _blank target
    // override here
    if (ionic.Platform.isAndroid()) {
        if (url.split(".").pop() == "pdf") {
            target = "_system";
        }
    }

    target = target || "_system";
    angular.extend(options || {}, {
      location: "no "
    });

    window.open(url, target, options);
  }

  //padding number
  Number.prototype.padLeft = function (n,str){
    return Array(n-String(this).length+1).join(str||'0')+this;
  }


  $rootScope.call = function(number) {
    window.location.href = 'tel:' + number.replace(/ /g, '');
  }

  $rootScope.sms = function(number) {
    window.location.href = 'sms:' + number.replace(/ /g, '');
  }

  $rootScope.showTermOfUse = function() {
    System.openTermOfUse();
  }

  return {};
}]);

(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .controller("ImageViewerModalController", Controller)
        .factory('ImageViewerModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('imageviewer/viewer.html', 'ImageViewerModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;

        vm.title = parameters.title;
        vm.imgSrc = parameters.imgSrc;

        activate();
        /////////////////////
        function activate() {
        }


    }


})();

'use strict';

/**
 * @ngdoc service
 * @name appApp.Interceptor
 * @description
 * # Interceptor
 * Factory in the appApp.
 */
angular.module('smartvcApp.services')

.factory('AuthInterceptor',["$q", "$log", "$injector", function($q, $log, $injector){

  var AppStore = $injector.get('StorageService');

  return {
    request: function(config){
      var db = AppStore.get();
      if (db.authData && db.authData.token) {
          config.headers['X-Auth-Token'] = db.authData.token;
      }

      return config;
    },
    response: function (response) {
        var newToken = response.headers('X-Auth-Token');
        if (newToken != null) {
            var db = AppStore.get();
            if (db.authData && db.authData.token) {
                db.authData.token = newToken;
                AppStore.set(db);
            }
        }

        return response;
    },

    responseError: function(response){
        if (response.status === 401) {
            // var db = store.get();
            // db.auth = {};
            // store.set(db);
            // $rootScope.$broadcast(authEvents.NEED_AUTHENTICATION);
            $log.error('Unauthenticated access detected (401)');
            var db = AppStore.get();
            db.authData = {};
            AppStore.set(db);
            $injector.get('System').dispatch();;
        } else if (response.status === 403) {
            // $rootScope.$broadcast(authEvents.UNAUTHORIZED);
            $log.error('Unauthorized access detected (403)');

            var db = AppStore.get();
            db.authData = {};
            AppStore.set(db);
            $injector.get('System').dispatch();;
        } else {
            if (response.status == -1 || response.statusText == "" || response.data == null) {
                // sepertinya server down
                response.status = 500;
                response.statusText = "It looks like server down. Please report this event to the administrator.";
                response.data = {
                    status: response.status,
                    message: response.statusText
                };
            }
        }

        return $q.reject(response);
    }
  }
}])

.factory('LoadingInterceptor', ["$rootScope", "$q", "$injector", function($rootScope, $q, $injector) {

  return {

    request: function(config) {
      $rootScope.networkBuzy = true;
      return config;
    },

    response: function(response) {
      // get $http via $injector because of circular dependency problem
      var $http = $http || $injector.get('$http');
      if($http.pendingRequests.length < 1) {
          $rootScope.networkBuzy = false;
      }
      return response;
    },

    responseError: function(response) {
      // get $http via $injector because of circular dependency problem
      var $http = $http || $injector.get('$http');
      if($http.pendingRequests.length < 1) {
          $rootScope.networkBuzy = false;
      }
      return $q.reject(response);

    }
  }
}]);

/*
* @Author: ims13
* @Date:   2015-11-10 13:21:25
* @Last Modified by:   ims13
* @Last Modified time: 2015-11-10 13:33:15
*/

// Below solution for ionicModal using rootScope
// refer to this https://github.com/driftyco/ionic/issues/2754
// change with decorator
(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .config(decoratorCfg);

    decoratorCfg.$inject = ['$provide'];

    /* @ngInject */
    function decoratorCfg($provide) {
        $provide.decorator('$ionicSlideBoxDelegate', decoratorFn);
    }

    decoratorFn.$inject = ['$delegate'];

    /* @ngInject */
    function decoratorFn($delegate) {
        $delegate.$getByHandle = function $getByHandle(name) {
          var instances = this._instances;

          return instances.filter(function(ins) {
            return ins['$$delegateHandle'] == name;
          })[0];
        };

        return $delegate;
    }
})();

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.logistic
 * @description
 * # logistic
 * Service in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('LogisticService', ["ENV", "$resource", "$filter", "StorageService", function(ENV, $resource, $filter, StorageService) {

  var logistic = $resource(ENV.apiEndpoint + 'util/lov/:type');

  return {
    get: function() {
      var logistics = StorageService.getValue("logistics");

      if (!logistics) {
        logistics = {};
        StorageService.setValue("logistics", logistics);
      }

      return logistics;
    },

    set: function(logs) {
      var logistics = StorageService.getValue("logistics");
      logistics = angular.copy(logs);
      StorageService.setValue("logistics", logistics);
    },

    reset: function() {
      this.set({});
    },

    cache: function() {
      var self = this;
      var types = ['disability', 'transfer', 'usage', 'employment', 'funding', 'living', 'makemodel', 'accessory'];

      var localLog = self.get();

      types.forEach(function(type) {

        type = type.toUpperCase();

        if (!localLog[type]) {
          logistic.query({
            type: type
          }, function(data) {
            localLog[type] = data;
            self.set(localLog);
          })
        }
      })
    },

    getList: function(type) {
      var logistic = this.get();
      return logistic[type.toUpperCase()];
    },

    getDisabilityList: function() {
      var logistic = this.get();
      return logistic.disability;
    },

    getTransferList: function() {
      var logistic = this.get();
      return logistic.transfer;
    },

    getUsageList: function() {
      var logistic = this.get();
      return logistic.usage;
    },

    getEmploymentList: function() {
      var logistic = this.get();
      return logistic.employment;
    },

    getFundingList: function() {
      var logistic = this.get();
      return logistic.funding;
    },

    getLivingList: function() {
      var logistic = this.get();
      return logistic.living;
    },

    getAccesoryList: function() {
      var logistic = this.get();
      return logistic.accessory;
    },

    getMakes: function() {
      var logistic = this.get();
      var filteredList = logistic["MAKEMODEL"];

      return _.keys(_.groupBy(filteredList, function(item) {
        return item.make
      }));
    },

    getDeviceTypeList: function() {
      var logistic = this.get();
      var filteredList = logistic["MAKEMODEL"];

      return _.keys(_.groupBy(filteredList, function(item) {
        return item.deviceType
      }));      
    },

    getMakeList: function(deviceType) {
      var logistic = this.get();
      var filteredList = logistic["MAKEMODEL"];
      // filter by deviceType
      if (deviceType) {
        filteredList = $filter('filter')(filteredList, {
          deviceType: deviceType
        });
      }

      return _.keys(_.groupBy(filteredList, function(item) {
        return item.make
      }));
    },

    getModels: function() {
      var logistic = this.get();
      var filteredList = logistic["MAKEMODEL"];

      return filteredList;
    },

    getModelList: function(deviceType, make) {
      var logistic = this.get();
      var filteredList = logistic["MAKEMODEL"];

      // filter by deviceType
      if (deviceType) {
        filteredList = $filter('filter')(filteredList, {
          deviceType: deviceType,
          make: make
        });
      } else {
        filteredList = $filter('filter')(filteredList, {
          make: make
        });
      }

      return filteredList;
      // return _.pluck($filter('filter')(filteredList, {
      //   make: make
      // }), 'model');
    },

    getFMAItems: function() {
      return [
        "My current means of mobility allows me to carry out my daily routine as idependently, safely and  efficiently as possible: (e.g., task I want to do, need to do, am required to do, when and where needed)",
        "My current means of mobility meets my comfort needs: (e.g., heat/moisture, sitting tolerance, pain, stability)",
        "My current means of mobility meets my heat needs: (e.g., pressure sores, breathing, edema control, medical equipment)",
        "My current means of mobility allows me to be as independent, safe and efficient as possible: (e.g., do what I want it to do when and where I want to do it)",
        "My current means of mobility allows me to reach and carry as independently, safely and efficiently as possible: (e.g., table, counters, floors, shelves)",
        "My current means of mobility allows me to transfer from one surface to another: (e.g., bed, toilet, chair)",
        "My current means of mobility allows me to carry out personal care tasks:<br>(e.g., dressing, bowel/bladder care, eating, hygiene)",
        "My current means of mobility allows me to get around indoors: (e.g., home, work, mall, restaurants, ramps, obstacles)",
        "My current means of mobility allows me to get around outdoors: (e.g., uneven surfaces, dirt, grass, gravel, ramps, obstacles)",
        "My current means of mobility allows me to use personal or public transformation as independently,safely and efficiently as possible: (e.g., secure, stow, ride)"
      ];
    },

    getFMAItemsShort: function() {
      return [
        "Carry out daily routine",
        "Comfort needs",
        "Health needs",
        "Independent,safe and efficient",
        "Over different surface height",
        "Transfer",
        "Personal care",
        "Get arround indoors",
        "Get arround outdoors",
        "Use transportation"
      ];
    },

    getFMARate: function() {
      return [
        "",
        "Completely Disagree",
        "Mostly Disagree",
        "Slightly Disagree",
        "Slightly Agree",
        "Mostly Agree",
        "Completely Agree"
      ];
    },

    getOverallRate: function() {
      return [
        "",
        "I hate it",
        "I don't like it",
        "It's Ok",
        "I like it",
        "I love it"
      ];
    },

    getReviewQuestions: function() {
      return [
        "Where did you get this wheelchair?",
        "Where do you use it the most?",
        "Pushing / Driving this wheelchair around is:",
        "Navigating in tight spaces using this wheelchair is:",
        "Sitting in this wheelchair is:",
        "Maintaining the wheelchair requires:",
        "I feel the wheelchair is built with:",
        "Storing and transporting this wheelchair is:",
        "The durability of this wheelchair is:",
        "Pushing / Driving this wheelchair to go through obstacles and uneven outdoor surfaces is:"
      ];
    },

    
    getQuestionOptions: function() {
      return [
        [
          "Second hand from others",
          "Online store",
          "Pharmacy store",
          "Hospital",
          "Skilled nursing facility",
          "Wheelchair clinic",
          "Wheelchair supplier",
          "Others"
        ],
        [
          "Indoor", 
          "Outdoor", 
          "Both"    
        ],
        [
          "Very easy",
          "Easy",
          "Neither easy or difficult",
          "Difficult",
          "Very difficult"          
        ],
        [
          "Very easy",
          "Easy",
          "Neither easy or difficult",
          "Difficult",
          "Very difficult"          
        ],
        [
          "Very comfortable",
          "Comfortable",
          "Neither comfortable or uncomfortable",
          "Uncomfortable",
          "Very uncomfortable"          
        ],
        [
          "Very minimum effort",
          "Minimum effort",
          "Reasonable effort",
          "Some effort",
          "A lot of effort"          
        ],
        [
          "Very high quality",
          "High quality",
          "Neither high nor low quality",
          "Low quality",
          "Very low quality"          
        ],
        [
          "Very easy",
          "Easy",
          "Neither easy or difficult",
          "Difficult",
          "Very difficult"          
        ],    
        [
          "Very good",
          "Good",
          "Neither good or bad",
          "Bad",
          "Very bad"          
        ],
        [
          "Very easy",
          "Easy",
          "Neither easy or difficult",
          "Difficult",
          "Very difficult",
          "Not applicable"          
        ]            
      ]
    }

  }
}]);
(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('Multimedia', Multimedia);

    Multimedia.$inject = ["$q", "$cordovaCamera", "$log", "$cordovaFile",
        "$cordovaCapture", "AudioCapture", 'Utils'];

    /* @ngInject */
    function Multimedia($q, $cordovaCamera, $log, $cordovaFile, $cordovaCapture,
      AudioCapture, Utils) {
        /**
         * Need below cordova plugins to make it work
         * - cordova-plugin-file
         * - cordova-plugin-camera
         * - cordova-plugin-media
         */
        console.log("Multimedia");


        var deviceReady = false;
        var cameraOptions = {};
        var audioOptions = {};
        var service = {};

        document.addEventListener("deviceready", onDeviceReady);

        service.getPictureFromCamera = _getPictureFromCamera;
        service.getPictureFromLibrary= _getPictureFromLibrary;
        service.getAudio= _getAudio;
        service.saveMedia = _saveMedia;
        service.deleteMedia = _deleteMedia;

        return service;

        ////////////////

        function onDeviceReady() {
            cameraOptions = {
              quality: 50,
              destinationType: Camera.DestinationType.DATA_URI,
              sourceType: Camera.PictureSourceType.CAMERA,
              allowEdit: false,
              encodingType: Camera.EncodingType.JPEG,
              targetWidth: 350,
              targetHeight: 200,
              popoverOptions: CameraPopoverOptions,
              saveToPhotoAlbum: false
            };

            audioOptions = {
              duration: 10
            }

            deviceReady = true;
        }

        function _getPictureFromCamera(config) {
          if (!deviceReady) {
            $log.error("getPictureFromCamera only work in real device.")
            return null;
          }

          return _getPicture(angular.extend({sourceType: Camera.PictureSourceType.CAMERA}, config));
        }

        function _getPictureFromLibrary(config) {
          if (!deviceReady) {
            $log.error("getPictureFromLibrary only work in real device.")
            return null;
          }

          return _getPicture(angular.extend({sourceType: Camera.PictureSourceType.PHOTOLIBRARY}, config));
        }

        function _getPicture(config) {
          var q = $q.defer();
          var options = angular.extend({}, cameraOptions, config);

          $cordovaCamera.getPicture(options).then(cbSuccess, cbFail);

          return q.promise;
          ///////
          function cbSuccess(pictureURI) {
            q.resolve(pictureURI);
          }

          function cbFail(error) {
            q.reject(error);
          }
        }

        function _extractExtension(path) {
          var idx = path.lastIndexOf(".");

          if (idx > 0) {
            return path.slice(-1 * (path.length - idx))
          } else {
            return "";
          }
        }
        /**
         * [_saveMedia description]
         * @param  {[Object]} config dirPath without leading '/'
         * @return {[Promise]}        [description]
         */
        function _saveMedia(config) {
          var q = $q.defer();

          var options = {
            entryURI: null,
            dirPath: null,
            filePrefix: null,
            targetDir: cordova.file.dataDirectory
          };

          angular.extend(options, config);

          options.filePrefix.replace(/([*+?^=!:${}()|\[\]\/\\\s])/g, "_");
          var newFilename = options.filePrefix + "_" + (new Date()).getTime() +
              _extractExtension(options.entryURI);

          $cordovaFile.checkFile(options.entryURI, "")
            .then(function(fileEntry) {

              $cordovaFile.createDir(options.targetDir, options.dirPath, true)
                .then(cbDirOK, cbFail);

              function cbDirOK(dirEntry) {
                fileEntry.moveTo(dirEntry, newFilename, cbMoveOK, cbFail);
              }

          }, cbFail);

          function cbMoveOK(newFileEntry) {
            $log.info("Save media OK");
            q.resolve(newFileEntry.nativeURL);
          }

          function cbFail(error) {
            $log.error(error);
            q.reject(error);
          }


          return q.promise;
        }

        function _deleteMedia(filePath) {
          var defer = $q.defer();

          var path = Utils.getPath(filePath);
          var fname = Utils.getFilename(filePath);
          $cordovaFile.removeFile(path, fname).then(function(result) {
              console.log("remove success");
              console.log(result.fileRemoved.nativeURL);

              defer.resolve();

            }, function(error) {
              console.log("remove file failed: " + path + fname);
              console.log(error);


              if (error.code == 1) { //NOT_FOUND_ERR
                error.message = "Resource not found";
              }

              defer.reject(error);
            });

          return defer.promise;
        }

        function _getAudio(config) {
          var q = $q.defer();
          var options = angular.extend({}, audioOptions, config);

          AudioCapture.capture(options).then(cbSuccess, cbFail);

          return q.promise;
          ///////
          function cbSuccess(audioURI) {
            q.resolve(audioURI);
          }

          function cbFail(error) {
            q.reject(error);
          }
        }

    }
})();

/**
 * cordova-plugin-media-capture
 * audioData
 * -------------------------------
 * 10s -> 900Kb
 * 30s ->2.7Mb
 * end: 0
 * fullPath: "/var/mobile/Containers/Data/Application/336FD021-771E-4871-9D0D-C3E2F9AD66E4/tmp/audio_010.wav"
 * getFormatData: function (successCallback, errorCallback) {
 * hasOwnProperty: function hasOwnProperty() {
 * isPrototypeOf: function isPrototypeOf() {
 * lastModified: null
 * lastModifiedDate: 1438266460000
 * localURL: "cdvfile://localhost/temporary/audio_010.wav"
 * name: "audio_010.wav"
 * propertyIsEnumerable: function propertyIsEnumerable() {
 * size: 350208
 * slice: function (start, end) {
 * start: 0
 * toLocaleString: function toLocaleString() {
 * toString: function toString() {
 * type: undefined
 * valueOf: function valueOf() {
 * -------------------------------
 *
 *
 * imageData
 * -------------------------------
 * end: 0
 * fullPath: "/var/mobile/Containers/Data/Application/E6424CE8-97C0-42D9-A1E2-E14688A305A8/tmp/photo_003.jpg"
 * getFormatData: function (successCallback, errorCallback) {
 * hasOwnProperty: function hasOwnProperty() {
 * isPrototypeOf: function isPrototypeOf() {
 * lastModified: null
 * lastModifiedDate: 1438267948000
 * localURL: "cdvfile://localhost/temporary/photo_003.jpg"
 * name: "photo_003.jpg"
 * propertyIsEnumerable: function propertyIsEnumerable() {
 * size: 678689
 * slice: function (start, end) {
 * start: 0
 * toLocaleString: function toLocaleString() {
 * toString: function toString() {
 * type: "image/jpeg"
 * valueOf: function valueOf() {
 *
 * ----------------------------------
 * In Android
 * ----------------------------------
 *
 * limit option only work in android, not iOS
 *
 * imageData -> appear in camera roll
 * ----------------------------------
 * end: 0
 * fullPath: "file:/storage/emulated/0/Pictures/1438269296902.jpg"
 * lastModified: null
 * lastModifiedDate: 1438269297000
 * localURL: "cdvfile://localhost/persistent/Pictures/1438269296902.jpg"
 * name: "1438269296902.jpg"
 * size: 2233031
 * start: 0
 * type: "image/jpeg"
 *
 * audioData
 * ----------------------------------
 * end: 0
 * fullPath: "file:/storage/emulated/0/recording-85634276.3gpp"
 * lastModified: null
 * lastModifiedDate: 1438270275000
 * localURL: "cdvfile://localhost/persistent/recording-85634276.3gpp"
 * name: "recording-85634276.3gpp"
 * size: 61025
 * start: 0
 * type: "audio/3gpp"
 *
 * ----------------------------------
 * cordova-plugin-camera
 * FILE_URI result
 * ----------------------------------
 * iOS -> file:///var/mobile/Containers/Data/Application/1DD6415D-5170-4706-B0CA-427590F325CA/tmp/cdv_photo_012.jpg
 * android -> file:///storage/emulated/0/Android/data/edu.pitt.shrs.smartvc/cache/1438269640911.jpg
 *
 * cordova-plugin-media-capture
 * ----------------------------------
 * imageData.fullPath: "/var/mobile/Containers/Data/Application/1DD6415D-5170-4706-B0CA-427590F325CA/tmp/photo_004.jpg"
 * imageData.localURL: "cdvfile://localhost/temporary/photo_004.jpg"
 *
 * android -> fullPath: "file:/storage/emulated/0/Pictures/1438269296902.jpg"
 *
 * both path with file://, or file:/ or /var/... working. just use the fullPath
 */

/**
 * FileEntry
 * ----------------------------------
 * filesystem: FileSystem
 *   name: "temporary"
 *   root: DirectoryEntry
 *     fullPath: "/"
 *     isDirectory: true
 *     isFile: false
 *     name: ""
 *     nativeURL: "file:///storage/emulated/0/Android/data/edu.pitt.shrs.smartvc/cache/"
 *     __proto__: DirectoryEntry
 * fullPath: "/audio_1438614045295.amr"
 * isDirectory: false
 * isFile: true
 * name: "audio_1438614045295.amr"
 * nativeURL: "file:///storage/emulated/0/Android/data/edu.pitt.shrs.smartvc/cache/audio_1438614045295.amr"
 */

/*
* @Author: ims13
* @Date:   2015-12-18 11:47:08
 * @Last Modified by: I Made Agus Setiawan
 * @Last Modified time: 2019-07-11 16:55:28
*/

(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('Notification', Notification);

    Notification.$inject = ['$q', '$log', '$cordovaLocalNotification', 'moment'];

    /* @ngInject */
    function Notification($q, $log, $cordovaLocalNotification, moment) {
        var NO_ACTIVITY_REMINDER_ID = 69;

        var service = {
            notifyNow: _notifyNow,
            checkPlugin: _checkPlugin,
            getManager: _getManager,
            cancelAll: _cancelAll,
            clearAll: _clearAll,
            patchNoActivityReminder: _patchNoActivityReminder
        };

        return service;

        ////////////////
        function _checkPlugin() {
          if (window.navigator.simulator === true) {
            console.log ('This plugin is not available in simulator');
            return false;
          } else if (!window.cordova) {
            console.log ('Plugin window.cordova not found');
            return false;
          } else if (window.cordova.plugins === undefined) {
            console.log ('Plugin window.cordova.plugins not found');
            return false;
          } else if (window.cordova.plugins.notification === undefined) {
            console.log ('Plugin window.cordova.plugins.notification not found');
            return false;
          } else {
            return true;
          }
        }

        function _fallback(subject, content) {
          alert(subject + "\n\n" + content);
        }

        function _now() {
          return new Date();
        }

        function _notifyNow(message) {

          if (typeof message === "string") {
            message = {
              id: (new Date()).getTime(),
              subject: "",
              content: message
            };
          }

          if (!_checkPlugin()) return _fallback(message.subject, message.content);


          var options = {
            id: message.id ? message.id : (new Date(message.timestamp)).getTime(),
            title: message.subject,
            text: message.content,
            trigger: {
                at: _now(),
            },
            data: message,

            //status bar icon
            // smallIcon: "res://ic_status_bar",

            //set priority to MAX, priority -2 s.d. 2
            //but IMPORTANCE start from 1 s.d. 5, which is used to determine setExact vs setExactAndAllowWhileIdle
            //fixed using modified plugin
            priority: 2     //set all reminder to be MAX
          };

          $cordovaLocalNotification.schedule(options).then(function() {
            console.log("Notification created");
          })
        }

        function _getManager(){
          return $cordovaLocalNotification;
        }

        function _cancelAll(scope){
          if(_checkPlugin()){
            $cordovaLocalNotification.cancelAll(scope);
          }

        }

        function _clearAll(scope){
          if(_checkPlugin()){
            $cordovaLocalNotification.clearAll(scope);
          }
        }

        function _patchNoActivityReminder(title, message, when, data) {
            if (!_checkPlugin()) return;

            var options = {
              id: NO_ACTIVITY_REMINDER_ID,
              title: title,
              text: message,
              trigger: {
                at: when,
              },
              data: data,

              //status bar icon
              // smallIcon: "res://ic_status_bar",

              //set priority to MAX, priority -2 s.d. 2
              //but IMPORTANCE start from 1 s.d. 5, which is used to determine setExact vs setExactAndAllowWhileIdle
              //fixed using modified plugin
              priority: 2     //set all reminder to be MAX
            };

            $cordovaLocalNotification.isPresent(NO_ACTIVITY_REMINDER_ID).then(function(present) {
              if (!present) {
                $cordovaLocalNotification.schedule(options).then(function() {
                  console.log("No activity reminder created");
                })
              } else {
                $cordovaLocalNotification.update(options).then(function() {
                  console.log("No activity reminder updated");
                })
              }
            })
        }

        // function _registerSchedule(schedule){


        //   var date = _getCompleteDateFromSchedule(schedule);
        //   var generatedId = _getGeneratedId(schedule);
        //   var generatedTitle = 'Reminder for: '+schedule.eventType;
        //   var generatedContent = 'Take @ '+schedule.timeOfDay;
        //   var frequency = _getFrequency(schedule);

        //   var options = {
        //     id: generatedId,
        //     // id: message.id ? message.id : (new Date(message.timestamp)).getTime(),
        //     title: generatedTitle,
        //     text: generatedContent,
        //     every: frequency,
        //     at: date,
        //     autoClear: true,
        //     sound: 'file://audio/beep.wav',
        //     data: schedule
        //   }

        //   // console.log('----------------------');
        //   // console.log('[REGISTERING SCHEDULE]');
        //   // console.log(schedule);
        //   // console.log(date);
        //   // console.log(options);

        //   if (_checkPlugin()) {
        //     $cordovaLocalNotification.schedule(options).then(function() {
        //     })
        //   } else {
        //     console.log('Registering schedule: Event Type: '+schedule.eventType, 'Event Id: '+schedule.eventId);
        //   }
        // }

    }
})();

// var options = {
//   id:         String,  // A unique id of the notification, best to use a numeric value
//   at:         Date,    // This expects a date object
//   text:       String,  // The message
//   title:      String,  // The title of the message
//   every:      String,  // 'minute', 'hour', 'day', 'week', 'month', 'year'
//   badge:      Number,  // Displays a numerical badge
//   sound:      String,  // The sound to be played (null means no sound)
//   json:       String,  // Data to be passed through the notification to your app
//   autoClear:  Boolean, // The notification is canceled when the user clicks it
//   ongoing:    Boolean, // Prevent clearing the notification (Android only)
// };

'use strict';

/**
 * @ngdoc service
 * @name Polyfill
 * @description
 * # Polyfill
 * Common Service
 */

angular.module('smartvcApp.services')

.service('Polyfill', ["$q", "$rootScope", "$ionicPopup", function Polyfill($q, $rootScope, $ionicPopup) {
  var self = this;
  var appName = null;

  window.alert = function(message, title, buttonName) {
    var q = $q.defer();

    title = title || appName;
    buttonName = buttonName || 'OK';

    if (navigator.notification) {
      navigator.notification.alert(message, function() {
        q.resolve();
      }, title, buttonName);
    } else {
      $ionicPopup.alert({
        title: title,
        template: message
      }).then(function(res) {
        q.resolve();
      });
    }

    return q.promise;
  }

  /**
  * Native:
  *     buttonIndex 1: Yes, 2: No
  *     ionic res true: Yes, false: No
  */
  window.confirm = function(message, title, buttonLabels) {
    var q = $q.defer();
    title = title || appName;
    buttonLabels = buttonLabels || ['Yes', 'No'];

    if (navigator.notification) {
      navigator.notification.confirm(message, function(buttonIndex) {
        if(buttonIndex == 1) {
          q.resolve();
        } else {
          q.reject();
        }
      }, title, buttonLabels);
    } else {
      $ionicPopup.confirm({
        title: title,
        template: message,
        okText: buttonLabels[0],
        cancelText: buttonLabels[1]
      }).then(function(res) {
        var buttonIndex = res ? 1 : 2;
        if(buttonIndex == 1) {
          q.resolve();
        } else {
          q.reject();
        }
      });
    }

    return q.promise;
  }

  window.prompt = function(message, title, buttonLabels, defaultText) {
    var q = $q.defer();
    title = title || appName;
    buttonLabels = buttonLabels || ['OK', 'Cancel'];

    if (navigator.notification) {
      navigator.notification.prompt(message, function(result) {
        q.resolve(result.input1, result.buttonIndex);
      }, title, buttonLabels, defaultText);
    } else {
      $ionicPopup.prompt({
        title: title,
        template: message,
        cancelText: buttonLabels[1],
        okText: buttonLabels[0]
      }).then(function(res) {
        if (res == undefined) {
          q.resolve(null, 2)
        } else {
          q.resolve(res, 1);
        }
      });
    }

    return q.promise;
  }


}])

.service('PFNetwork', ["$rootScope", "$log", function PFNetwork($rootScope, $log) {
  var isOnline = null;
  var self = this;

  this.registerConnectionListener = function() {
    var that = self;
    function updateOnlineStatus(event) {

      $rootScope.isOnline = that.isOnline();

      $rootScope.$broadcast("event:network", {status: $rootScope.isOnline});
    }

    // updateOnlineStatus(null);
    window.addEventListener('online', updateOnlineStatus);
    window.addEventListener('offline', updateOnlineStatus);

    updateOnlineStatus(null);

  };

  this.setConnectionStatus = function(status) {
    isOnline = status;
  }

  this.setOnline = function() {
    isOnline = true;
  }

  this.setOffline = function() {
    isOnline = false;
  }

  this.isOnline = function() {
    var blnReturn = false;
    var Connection = window.Connection || {
      CELL: "cellular",
      CELL_2G: "2g",
      CELL_3G: "3g",
      CELL_4G: "4g",
      ETHERNET: "ethernet",
      NONE: "none",
      UNKNOWN: "unknown",
      WIFI: "wifi"
    };

    switch (this.getStatus()) {
      case Connection.ETHERNET:
      case Connection.WIFI:
      case Connection.CELL_2G:
      case Connection.CELL_3G:
      case Connection.CELL_4G:
      case Connection.CELL:
        blnReturn = true;
        break;
    }

    // if (isOnline) blnReturn = true;

    return blnReturn;
  }

  this.getStatus = function() {
    return (navigator.connection || {
      type: navigator.onLine ? 'wifi' : 'none'
    }).type;
  }
}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.ProfileService
 * @description
 * # ProfileService
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('ProfileService', ["ENV", "$q", "$state", "$log", "$resource", "Profile", "Device", "StorageService", function (
  ENV,
  $q,
  $state,
  $log,
  $resource,

  Profile,
  Device,
  StorageService) {

  return {
    get: function() {
      $log.debug('get profile');
      var db = StorageService.get();

      if (!db.profile) {
        db.profile = {};
        StorageService.set(db);
      }

      return db.profile;
    },

    set: function(profile) {
      $log.debug('set profile');
      var db = StorageService.get();
      if (!db.profile) {
        db.profile = {};
      }

      db.profile = angular.copy(profile);

      if (db.profile.hasOwnProperty('$dirty') &&
          db.profile.$dirty == false) {
        $log.debug('set dirty');
        db.profile.$dirty = true;
      }

      StorageService.set(db);
    },

    reset: function() {
      this.set({});
    },

    cache: function(pid) {
      var self = this;
      var profile = self.get();

      Profile.getProfile({
        id: pid
      }, function(data) {
        // var dateOfBirth = new Date(data.dateOfBirth);
        // if (dateOfBirth) {
        //   data.dateOfBirth = dateOfBirth;
        // } else {
        //   data.dateOfBirth = null;
        // }

        profile = data;
        profile.$dirty = false;
        self.set(profile);
      })
    },

    sync: function() {
      var self = this;
      var d = $q.defer();
      var profile = self.get();

      // check if data available offline?
      if (_.isEmpty(profile)) {
          d.resolve();
        // must not be happen
      } else {
        // YES: upload current info
        // Approach: local first
        if (profile.$dirty) {
          $log.debug('sync profile');

          Profile.update({
            id: profile.id
          }, profile, function(response) {
            profile = response;
            profile.$dirty = false;
            self.set(profile);

            d.resolve(response);
          }, function(response) {
            d.reject(response);
          });
        } else {
          d.resolve();
        }
      }

      return d.promise;
    },

    dirty: function() {
      var profile = this.get();
      if (!profile.$dirty) return false;
      else
        return profile.$dirty;
    },

    setGender: function(gender) {
      var profile = this.get();
      profile.gender = gender;
      this.set(profile);
    },

    getGender: function() {
      var profile = this.get();
      return profile.gender;
    },

    setYOB: function(dateOfBirth) {
      var profile = this.get();
      profile.dateOfBirth = dateOfBirth;
      this.set(profile);
    },

    getYOB: function() {
      var profile = this.get();
      return profile.dateOfBirth;
    },

    formatedYOB: function(yob) {
      var formatedYOB = {
        year: null,
        age: null
      }

      if (yob) {
        var year, age;
        var miliperyear = 365.26 * 24 * 60 * 60 * 1000;
        var diff = (new Date()).getTime() - yob.getTime();

        formatedYOB.year = yob.getFullYear();
        formatedYOB.age = Math.round(diff / miliperyear);
      }

      return formatedYOB;
    },

    setDisability: function(value) {
      var profile = this.get();
      profile.disability = value;
      this.set(profile);
    },

    getDisability: function() {
      var profile = this.get();
      return profile.disability;
    },

    setTransfer: function(value) {
      var profile = this.get();
      profile.transferStrategy = value;
      this.set(profile);
    },

    getTransfer: function() {
      var profile = this.get();
      return profile.transferStrategy;
    },

    setFunding: function(value) {
      var profile = this.get();
      profile.funding = value;
      this.set(profile);
    },

    getFunding: function() {
      var profile = this.get();
      return profile.funding;
    },

    setLiving: function(value) {
      var profile = this.get();
      profile.livingStatus = value;
      this.set(profile);
    },

    getLiving: function() {
      var profile = this.get();
      return profile.livingStatus;
    },

    setEmployment: function(value) {
      var profile = this.get();
      profile.employment = value;
      this.set(profile);
    },

    getEmployment: function() {
      var profile = this.get();
      return profile.employment;
    },

    setUsage: function(value) {
      var profile = this.get();
      profile.usage = value;
      this.set(profile);
    },

    getUsage: function() {
      var profile = this.get();
      return profile.usage;
    },

    setPrimaryDevice: function(value) {
      var profile = this.get();
      profile.primaryDeviceId = value;
      this.set(profile);
    },

    getPrimaryDevice: function() {
      var profile = this.get();
      return profile.primaryDeviceId;
    },

    getDevices: function() {
      var profile = this.get();


    }
  }

}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.reviewservice
 * @description
 * # reviewservice
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('ReviewService', ["ENV", "$q", "$state", "$log", "$resource", "Profile", "Review", "StorageService", function(
  ENV,
  $q,
  $state,
  $log,
  $resource,

  Profile,
  Review,
  StorageService
) {

  var cache = null;

  return {
    get: function() {
      var db = StorageService.get();
      if (!db.myReviews) {
        db.myReviews = [];
        StorageService.set(db);
      }

      return db.myReviews;
    },

    set: function(reviews) {
      var db = StorageService.get();
      db.myReviews = angular.copy(reviews);
      StorageService.set(db);
    },

    reset: function() {
      this.set([]);
    },

    getModel: function(accountId, wcDeviceId) {
      var model = new Review();
      angular.extend(model,{
        accountId: accountId,
        wcDeviceId: wcDeviceId
      });

      return model;
    },

    findByDevice: function(device) {
      var myReviews = this.get();
      var reviewFound = _.find(myReviews, function(review) {
                          return review.accountId == device.accountId &&
                                 review.wcDeviceId == device.wcDeviceId;
                        });

      if(typeof reviewFound === "undefined") {
        return null;
      } else {
        return reviewFound;
      }
    },

    // assumpt event is valid
    save: function(review) {
      var self = this,
      defer = $q.defer();

      var myReviews = this.get();

      // if(!review.timestamp) {
      //   review.timestamp =  (new Date()).getTime();
      //   myReviews.push(review);
      // } else {
      //   var idx = _.findIndex(myReviews, {deviceId: review.deviceId});
      //   if(idx < 0) return null;
      //   // remove 1 record at index idx, and insert event at idx position
      //   myReviews.splice(idx, 1, review);
      // }

      // this.set(myReviews);
      // defer.resolve(review);

      if (review.id) {
        // update
        Review.update({ id: review.id }, review, function(data) {
          angular.extend(review, data);

          var idx = _.findIndex(myReviews, {id: review.id});
          if(idx >= 0) {
            // remove 1 record at index idx, and insert data at idx position
            myReviews.splice(idx, 1, review);
          }
          self.set(myReviews);
          defer.resolve(review);
        }, function(reason) {
          defer.reject(reason);
        })
      } else {
        review.$save().then(function(data) {
          angular.extend(review, data);
          myReviews.push(review);
          self.set(myReviews);
          defer.resolve(review);
        }, function(reason) {
          defer.reject(reason);
        })
      }

      return defer.promise;
    }

  //   get: function() {
  //     return cache;
  //   },

  //   new: function(devid, pid, wcdid) {
  //     cache = new Review();
  //     cache.device_id = devid;
  //     cache.profile_id = pid;
  //     cache.wcdevice_id = wcdid;
  //     return cache;
  //   },

  //   load: function(id) {
  //     var self = this;
  //     var d = $q.defer();

  //     if (cache && cache.id == id) {
  //       d.resolve();
  //     } else {
  //       cache = Review.get({
  //         id: id
  //       }, function(data) {
  //         d.resolve();
  //       }, function() {
  //         d.reject();
  //       });
  //     }

  //     return d.promise;
  //   },

  //   save: function() {
  //     var self = this;
  //     var d = $q.defer();

  //     if (cache.id) {
  //       // update
  //       Review.update({
  //         id: cache.id
  //       }, cache, function(data) {
  //         d.resolve(data);
  //       }, function(reason) {
  //         d.reject(reason);
  //       })
  //     } else {
  //       cache.$save().then(function(data) {
  //         cache.id = data.id;
  //         d.resolve(data);
  //       }, function(reason) {
  //         d.reject(reason);
  //       })
  //     }

  //     return d.promise;
  //   },

  //   getTotalReview: function(wcdeviceid, pid) {
  //     var d = $q.defer();

  //     Review.getTotalReview({
  //       p_id: pid,
  //       wcdevice_id: wcdeviceid
  //     }, function(data) {
  //       d.resolve(data)
  //     }, function(reason) {
  //       d.reject(reason)
  //     });

  //     return d.promise;
  //   },

  //   // getMyReviews: function(pid) {
  //   //   var d = $q.defer();

  //   //   Review.getMyReviews({
  //   //     p_id: pid,
  //   //     wcdevice_id: wcdeviceid
  //   //   }, function(data) {
  //   //     d.resolve(data)
  //   //   }, function(reason) {
  //   //     d.reject(reason)
  //   //   });

  //   //   return d.promise;
  //   // }

  };
}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.SettingsService
 * @description
 * # SettingsService
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('SettingsService', ["StorageService", "$rootScope", function(StorageService, $rootScope) {

  return {
    DEVICE_TYPE: {
      'MANUAL': {
        key: 'MANUAL',
        value: "Manual Wheelchair"
      },
      'POWER': {
        key: 'POWER',
        value: "Power Wheelchair"
      },
      'DONT_KNOW': {
        key: 'NONE',
        value: "I don't know"
      }
    },

    get: function() {
      var db = StorageService.get();
      if (!db.settings) {
        db.settings = {};
        StorageService.set(db);
      }

      return db.settings;
    },

    set: function(settings) {
      var db = StorageService.get();
      db.settings = angular.copy(settings);
      StorageService.set(db);
    },

    reset: function() {
      this.set({});
    },

    getDeviceTypeList: function() {
      return _.map(this.DEVICE_TYPE, function(item) {
        return item;
      });
    },

    getDeviceType: function() {
      var settings = this.get();
      if (settings.deviceType == undefined) {
        settings.deviceType = this.DEVICE_TYPE.DONT_KNOW.key; // dont know
        this.set(settings);
      }

      return settings.deviceType;
    },

    setDeviceType: function(deviceType) {
      var settings = this.get();
      settings.deviceType = _.isObject(deviceType) ? deviceType.key : deviceType; // dont know
      this.set(settings);

      $rootScope.$broadcast("onChangeSettings", settings);
    },

    isStaySignIn: function() {
      var settings = this.get();
      if (settings.staySignIn == undefined) {
        settings.staySignIn = true;
        this.set(settings);
      }

      return settings.staySignIn;
    },

    setStaySignIn: function(status) {
      var settings = this.get();
      settings.staySignIn = status;
      this.set(settings);
    },

    isFirstTime: function() {
      var settings = this.get();
      if (settings.firstTime == undefined) {
        settings.firstTime = true;
        this.set(settings);
      }

      return settings.firstTime;
    },

    setFirstTime: function() {
      var settings = this.get();
      settings.firstTime = false;
      this.set(settings);
    },

    isStopPopupServiceDelivery: function() {
      var settings = this.get();
      if (settings.stopPopupServiceDelivery == undefined) {
        settings.stopPopupServiceDelivery = false;
        this.set(settings);
      }

      return settings.stopPopupServiceDelivery;
    },

    setStopPopupServiceDelivery: function(status) {
      var settings = this.get();
      settings.stopPopupServiceDelivery = status;
      this.set(settings);
    },

    isStopPopupSetupHow: function() {
      var settings = this.get();
      if (settings.stopPopupSetupHow == undefined) {
        settings.stopPopupSetupHow = false;
        this.set(settings);
      }

      return settings.stopPopupSetupHow;
    },

    setStopPopupSetupHow: function(status) {
      var settings = this.get();
      settings.stopPopupSetupHow = status;
      this.set(settings);
    }    


  };

}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.StorageService
 * @description
 * # StorageService
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('StorageService', ["$log", "AppStorage", function($log, AppStorage) {
  var _id = "db";

  return {
    id: _id,
    get: function() {
      $log.debug('get local storage');
      var db = AppStorage.get(this.id);
      if (!db) {
        db = {};
        this.set(db);
      }

      return db;
    },

    set: function(db) {
      AppStorage.set(this.id, db);
    },

    reset: function() {
      this.set({});
    },

    setValue: function(key, value) {
      key = this.id + "_" + key;
      AppStorage.set(key, value);
    },

    getValue: function(key) {
      key = this.id + "_" + key;
      return AppStorage.get(key);
    },

    flush: function() {
      AppStorage.flush();
    }
  };
}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.StringTemplate
 * @description
 * # StringTemplate
 * Constant in the smartvcApp.
 */
angular.module('smartvcApp.services')

.constant('StringTemplate', {

  'EMPTY': "",

  //Service Delivery
  'PR_APPOINTMENT_TITLE_DEFAULT': "Physician visit to get a wheelchair prescription",
  'PR_APPOINTMENT_DESC_DEFAULT': "Complete 'My Wheelchair Checklist' prior to the visit",
  'PR_TRANSPORT_TITLE_DEFAULT': "Arrange transportation to visit physician",
  // Wheelchair Evaluation
  'WE_APPOINTMENT_TITLE': "Wheelchair evaluation session",
  "WE_APPOINTMENT_DESC": "Bring wheelchair prescription and your current mobility device or photos",

  "WE_TRANSPORT_TITLE": "Arrange transportation to wheelchair evaluation",

  // Wheelchair Selection
  'WS_APPOINTMENT_TITLE': "Wheelchair selection session",
  "WS_APPOINTMENT_DESC": "",

  'WS_TRANSPORT_TITLE': "Arrange transportation to wheelchair selection",
  'WS_HOME_EVAL_TITLE': "Home evaluation",
  "WS_HOME_EVAL_DESC": "Have a family member or friend present for the home evaluation",

  // Receive Wheelchair
  'RW_FOLLOWUP_TITLE': "Call supplier about new wheelchair",
  'RW_FINALFIT_TITLE': "Final fit assessment",
  'RW_DELIVERY_TITLE': "Schedule a wheelchair delivery",

  // Maintenance
  'MA_SCHEDULE_DESC_DEFAULT': "Perform listed task"
});

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.System
 * @description
 * # System
 * Service in the smartvcApp.
 */
angular.module('smartvcApp.services')

.service('System', ["$rootScope", "$q", "$state", "$log", "$timeout", "$ionicModal", "$ionicLoading", "Polyfill", "PFNetwork", "SettingsService", "AuthService", "TrackService", function System(
  $rootScope, $q,
  $state,
  $log,
  $timeout,

  $ionicModal,
  $ionicLoading,

  Polyfill,
  PFNetwork,
  SettingsService,
  AuthService, TrackService
  ) {
  var self = this;

  this.dispatch = function() {
    console.log('dispatch');

    self.goToDashboard();
    if(SettingsService.isFirstTime()) {
      self.openTermOfUse();
    }
  }

  this.goToDashboard = function() {
    $state.go('main.home');
  }

  this.goToWelcomeScreen = function() {
    $state.go('start');
  }

  this.goToLogin = function() {
    $state.go('start');
  }

  this.getMobiPickerTheme = function() {
    if(ionic.Platform.isIOS()) {
      return "ios7";
    } else if(ionic.Platform.isAndroid()) {
      return "android";
    } else {
      return "default";
    }
  }

  this.openFacebookPage = function() {
    var scheme = ionic.Platform.isIOS() ? "fb://" : "com.facebook.katana";

    if (window.appAvailability) {
      $log.info("AppAvailability plugin available. Checking for '" + scheme + "'' scheme");
      // window.appAvailability.check("twitter://", function() { $log.info("twitter:// twitter available")}, function() { $log.info("twitter:// twitter not available")} )
      // window.appAvailability.check("fb://", function() { $log.info("fb:// facebook available")}, function() { $log.info("fb:// facebook not available")} )
      // window.appAvailability.check("com.twitter.android", function() { $log.info("com.twitter.android twitter available")}, function() { $log.info("com.twitter.android twitter not available")} )
      // window.appAvailability.check("com.facebook.katana", function() { $log.info("com.facebook.katana facebook available")}, function() { $log.info("com.facebook.katana facebook not available")} )
      window.appAvailability.check(scheme,
        function() {
          $log.info("facebook available");
          window.open("fb://group/808947919250863", '_system', 'location=no');
          // window.open("twitter://user/screen_name=John_Papa", '_system', 'location=no');
        }, function() {
          $log.info("facebook not available. Open using browser");
          // if (ionic.Platform.isIOS()) {
            // window.open("itms://itunes.apple.com/us/app/facebook/id284882215?mt=8", '_system', 'location=no');
          // } else {
            // window.open('market://details?id=com.facebook.katana', '_system', 'location=no');
          // }
          window.open("https://www.facebook.com/groups/808947919250863/", '_system', 'location=no');
        }
      )
    } else {
      $log.info("AppAvailability plugin does not exists");
      window.open("https://www.facebook.com/groups/808947919250863/", '_system', 'location=no');
    }

  }

  $rootScope.openFacebookPage = this.openFacebookPage;
  // ============================================================
  // LOGIN FORM
  // ============================================================
  this.$loginScope = $rootScope.$new();
  $ionicModal.fromTemplateUrl('login_modal.html', {
    scope: this.$loginScope,
    animation: 'slide-in-up'
  }).then(function(modal) {
    self.$loginScope.modal = modal;
  });

  this.$loginScope.account = {};
  this.$loginScope.login = function(form) {
    $ionicLoading.show();

    function resetForm(account) {
      account.password = "";
      form.$setPristine();
    }

    var login = AuthService.login(self.$loginScope.account);
    login.then(function(data) {
        $ionicLoading.hide();
        resetForm(self.$loginScope.account);
        self.goToDashboard();
        self.login.close();
        $rootScope.$broadcast('auth:authenticated');
      },
      function(data) {
        $ionicLoading.hide();
        resetForm(self.$loginScope.account);
        window.alert("Invalid username or password");
      });
  }

  this.login = {
    show: function() {
      if (!PFNetwork.isOnline()) {
        window.alert('It seems that there is no Network Connection. Registration cannot be done.');
        return;
      }
      self.$loginScope.modal.show();
    },
    hide: function() {
      self.$loginScope.modal.hide();
    },
    close: function() {
      self.$loginScope.modal.hide();
      // self.$loginScope.modal.remove();
    }
  }

  // ============================================================
  // FORGOT PASSWORD FORM
  // ============================================================
  this.$forgotScope = $rootScope.$new();
  $ionicModal.fromTemplateUrl('forgotpass_modal.html', {
    scope: this.$forgotScope,
    animation: 'slide-in-up'
  }).then(function(modal) {
    self.$forgotScope.modal = modal;
  });

  this.$forgotScope.data = {};
  this.$forgotScope.submit = function(form) {
    $ionicLoading.show();

    function resetForm(data) {
      data.email = "";
      form.$setPristine();
    }

    var promise = AuthService.forgotPassword(self.$forgotScope.data);
    promise.then(function(data) {
        $ionicLoading.hide();
        resetForm(self.$forgotScope.data);

        alert("Password information just sent to your email.")

        self.forgotPasswordWindow.close();
      },
      function(reason) {
        $ionicLoading.hide();
        alert(reason.message);
        resetForm(self.$forgotScope.data);
      });
  }

  this.forgotPasswordWindow = {
    show: function() {
      if (!PFNetwork.isOnline()) {
        window.alert('It seems that there is no Network Connection. Registration cannot be done.');
        return;
      }
      self.$forgotScope.modal.show();
    },
    hide: function() {
      self.$forgotScope.modal.hide();
    },
    close: function() {
      self.$forgotScope.modal.hide();
      // self.$loginScope.modal.remove();
    }
  }


  // ============================================================
  // REGISTER
  // ============================================================
  this.$registerScope = $rootScope.$new();
  $ionicModal.fromTemplateUrl('register_modal.html', {
    scope: this.$registerScope,
    animation: 'slide-in-up'
  }).then(function(modal) {
    self.$registerScope.modal = modal;
  });
  this.$registerScope.deviceTypeList = SettingsService.getDeviceTypeList();
  this.$registerScope.register = function(form) {
    console.log("*** Register");
    $ionicLoading.show();

    function resetForm(account) {
      account.username = "";
      account.password = "";
      account.retypePassword = "";
      account.email = "";
      account.deviceType = SettingsService.getDeviceType();
      form.$setPristine();
    }

    var register = AuthService.register(self.$registerScope.account);
    register.then(function(data) {
        $ionicLoading.hide();
        var credential = {
            username: self.$registerScope.account.username,
            password: self.$registerScope.account.password
        };

        resetForm(self.$registerScope.account);

        window.alert('Registration success')
          .then(function() {
            // self.dispatch();
            self.register.hide();

            AuthService.login(credential).then(function(data) {
                $state.go("main.profile", {justRegister: true});
            }, function(reason) {
               window.alert("Authentication error");
            });
          });
      },
      function(reason) {
        $ionicLoading.hide();
        resetForm(self.$registerScope.account);
        window.alert(reason.message);
      })
  }

  this.register = {
    show: function() {
      if (!PFNetwork.isOnline()) {
        window.alert('It seems that there is no Network Connection. Registration cannot be done.');
        return;
      }

      self.$registerScope.account = {
        deviceType: SettingsService.getDeviceType()
      };
      self.$registerScope.modal.show();
    },
    hide: function() {
      self.$registerScope.modal.hide();
    }
  }

  this.getModalPage = function(templateUrl, pageScope, config) {
    var q = $q.defer();

    var options = {
        animation: 'slide-in-up',
        backdropClickToClose: false
    }

    angular.extend(options, config);

    if (!pageScope) {
      pageScope = $rootScope.$new();
    }

    $ionicModal.fromTemplateUrl(templateUrl, {
      scope: pageScope,
      animation: options.animation,
      backdropClickToClose: options.backdropClickToClose
    }).then(function(modal) {
      pageScope.modal = modal;

      pageScope.page = {
        show: function() {
          TrackService.patchEndEvent();
          TrackService.addEvent($state.current.name + "-MODAL-" + templateUrl, {});

          pageScope.modal.show();
        },
        hide: function() {
          pageScope.modal.hide();

        },
        close: function() {
          pageScope.modal.hide();
          pageScope.modal.remove();

          TrackService.patchEndEvent();
          TrackService.addEvent($state.current.name, "");

        }
      };

      q.resolve(pageScope.page);
    });

    return q.promise;
  }

  this.openTermOfUse = function() {
    var termofuseScope = $rootScope.$new();
    self.getModalPage("modals/termofuse.html", termofuseScope)
      .then(function(page) {
        page.show();

        TrackService.patchEndEvent();
        TrackService.addEvent($state.current.name + "-MODAL-TermOfUse-Open", {});

      });

    termofuseScope.close = function() {
      console.log("*** Term of Use closed");
      termofuseScope.modal.hide();
      TrackService.patchEndEvent();
      TrackService.addEvent($state.current.name + "-MODAL-TermOfUse-Close", {});

      SettingsService.setFirstTime();
    }
  }

  this.openCaution = function() {
        var msg = "Consult your therapist or supplier about any concerns  related to set-up and propulsion. \n\n" +
                "Contact your healthcare provider immediately if you discover any pain, pressure wounds, " +
                "cuts in skin, and red spots that do not go away in 20 minutes.";

        alert(msg);
  }

}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.TodoService
 * @description
 * # TodoService
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('TodoService', ["$q", "$rootScope", "StorageService", "System", "$timeout", "dateFilter", "$ionicPlatform", "$cordovaLocalNotification", "$cordovaCalendar", "$window", function($q, $rootScope, StorageService, System, $timeout,
  dateFilter, $ionicPlatform, $cordovaLocalNotification, $cordovaCalendar, $window) {

  var cache = null;
  var DEFAULT_REMINDER_AT = 60; //minutes or 1 hour
  var DEFAULT_PREFIX_EVENT_AT_NATIVE = "SMARTApp: ";

  $ionicPlatform.ready(function() {
    $rootScope.$on('$cordovaLocalNotification:trigger',
      function (event, notification, state) {
        // console.log(event, notification, state);

        $cordovaLocalNotification.getTriggeredIds().then(function(ids) {
          $cordovaLocalNotification.cancel(ids);
        })

        var now = new Date();
        var todo = _findById(notification.id);

        if (todo && now < todo.dtFrom) {
          todo.reminder = 0;
          _scheduleReminder(todo);
        }
      });
  });

  function _localNotifivationAvailable() {
    return ($window.cordova &&
      $window.cordova.plugins &&
      $window.cordova.plugins.notification &&
      $window.cordova.plugins.notification.local);
  }

  function _calendarAvailable() {
    return ($window.plugins &&
      $window.plugins.calendar);
  }

  function _scheduleReminder(todo) {

    if (todo.reminder == null || !_localNotifivationAvailable()) {
      return;
    }

    //add reminder at designated time by default
    var options = {
      id: todo.id,
      // title: "Todo Reminder",
      text: todo.title,
      trigger: {
          at: todo.dtFrom,
      },
      // data: message,

      //status bar icon
      // smallIcon: "res://ic_status_bar",

      //set priority to MAX, priority -2 s.d. 2
      //but IMPORTANCE start from 1 s.d. 5, which is used to determine setExact vs setExactAndAllowWhileIdle
      //fixed using modified plugin
      priority: 2     //set all reminder to be MAX

    };

    var reminderAt = new Date(todo.dtFrom.getTime() - (todo.reminder * 60 * 1000));
    options.trigger.at = reminderAt;

    $cordovaLocalNotification.schedule(options).then(function() {
      console.log("Reminder for todo id:" + todo.id + " created");
    });

  }

  function _modifyReminder(todo, oldTodo) {

    //delete the existing one
    return _deleteReminder(todo.id).then(cbCallback);
    //=======================
    function cbCallback() {
      if (todo.reminder == null) {
        return;
      }

      //add reminder at designated time by default
      var options = {
        id: todo.id,
        // title: "Todo Reminder",
        text: todo.title,
        trigger: {
            at: todo.dtFrom,
        },
        // data: message,

        //status bar icon
        // smallIcon: "res://ic_status_bar",

        //set priority to MAX, priority -2 s.d. 2
        //but IMPORTANCE start from 1 s.d. 5, which is used to determine setExact vs setExactAndAllowWhileIdle
        //fixed using modified plugin
        priority: 2     //set all reminder to be MAX

      };

      var reminderAt = new Date(todo.dtFrom.getTime() - (todo.reminder * 60 * 1000));
      options.trigger.at = reminderAt;

      $cordovaLocalNotification.schedule(options).then(function() {
        console.log("Reminder for todo id:" + todo.id + " created");
      });

    }
  }

  function _deleteReminder(id) {
    var d = $q.defer();

    if (!_localNotifivationAvailable()) return d.promise;

    $cordovaLocalNotification.cancel(id).then(function() {
      console.log("Reminder with id:" + id + " removed");
      d.resolve();
    })

    return d.promise;
  }

  function _createEventInNative(todo) {

    if (!_calendarAvailable()) return;

    $cordovaCalendar.createEventWithOptions({
        title: DEFAULT_PREFIX_EVENT_AT_NATIVE + todo.title,
        location: todo.location,
        notes: todo.description,
        startDate: todo.dtFrom,
        endDate: todo.dtTo,
        firstReminderMinutes: null      //set No Reminder in Native Calendar
      }).then(function (result) {
        // success
        console.log("Event with title:'" + todo.title + "' created in native calendar");
      }, function (err) {
        // error
        console.log("Event creation in native calendar failed")
      });
  }

  function _modifyEventInNative(todoOld, todoNew) {
    //Android dont support modify event, so better to delete the existing and
    //create one
    _deleteEventInNative(todoOld);
    _createEventInNative(todoNew);
    // $cordovaCalendar.modifyEvent({
    //     title: todoOld.title,
    //     location: todoOld.location,
    //     notes: todoOld.description,
    //     startDate: todoOld.dtFrom,
    //     endDate: todoOld.dtTo,

    //     newTitle: todoNew.title,
    //     newLocation: todoNew.location,
    //     newNotes: todoNew.description,
    //     newStartDate: todoNew.dtFrom,
    //     newEndDate: todoNew.dtTo
    //   }).then(function (result) {
    //     // success
    //     console.log("Event with title:'" + todo.title + "' modified in native calendar");
    //   }, function (err) {
    //     // error
    //     console.log("Event modification in native calendar failed");
    //   });
  }

  function _deleteEventInNative(todo) {

    if (!_calendarAvailable()) return;

    $cordovaCalendar.deleteEvent({
        newTitle: DEFAULT_PREFIX_EVENT_AT_NATIVE + todo.title,
        location: todo.location,
        notes: todo.description,
        startDate: todo.dtFrom,
        endDate: todo.dtTo
      }).then(function (result) {
        // success
        console.log("Event with title:'" + todo.title + "' deleted in native calendar");
      }, function (err) {
        // error
        console.log("Event deletion in native calendar failed");
      });
  }

  function _get() {
      var self = this;
      var db = StorageService.get();
      if (!db.todos) {
        db.todos = [];
        StorageService.set(db);
      }

      var todos = db.todos.map(function(item) {
        return angular.extend(_new(), item);
      })

      return todos;
  }

  function _set(todos) {
      var db = StorageService.get();
      db.todos = angular.copy(todos);
      StorageService.set(db);
  }

  function _findById(id) {
      var todos = _get();
      var eventFound = _.find(todos, function(event) {
                          return event.id == id;
                        });

      if(typeof eventFound === "undefined") {
        return null;
      } else {
        return eventFound;
      }
  }

  function _new() {
      var today = new Date();
      var from = new Date(today.getTime() + (1 * 3600 * 1000));
      var to = new Date(from.getTime() + (1 * 3600 * 1000));

      cache = {
        title: "",
        dtFrom: from,
        dtTo: to,
        isAllDay: false,
        phoneNumber: "",
        location: "",
        description: "",
        isDone: false,
        isExpired: false,
        reminder: DEFAULT_REMINDER_AT,

        setDone: function() { this.isDone = true },
        getRemainingDay: function() {
          if(!(this.dtFrom instanceof Date)) {
            return null;
          }
          var miliperday = 24 * 60 * 60 * 1000;
          var diff = this.dtFrom.getTime() - (new Date()).getTime();
          var remaining = Math.floor(diff/miliperday);
          return remaining;
        }
      };

      return cache;
  }
  // Public API here
  return {
    findAll: function() {
      return this.get();
    },

    get: _get,

    set: _set,

    reset: function() {
      this.set([]);
    },

    new: _new,

    // assumpt event is valid
    save: function(event) {
      var todos = this.get();

      if(!event.id) {
        event.id =  (new Date()).getTime();
        todos.push(event);
      } else {
        var idx = _.findIndex(todos, {id: event.id});
        if(idx < 0) return null;
        // remove 1 record at index idx, and insert event at idx position
        todos.splice(idx, 1, event);
      }

      this.set(todos);
      return event;
    },

    setDone: function(event) {
      event.isDone = true;
      this.save(event);
      return _deleteReminder(event.id);
    },

    setUnDone: function(event) {
      event.isDone = false;
      this.save(event);
    //   return _deleteReminder(event.id);
    },

    findById: _findById,

    delete: function(id) {
      var todos = this.get();
      var idx = _.findIndex(todos, {id: id});

      if(idx < -1) return;

      var todo = todos[idx];
      todos.splice(idx, 1);
      this.set(todos);

      _deleteEventInNative(todo);
      return _deleteReminder(todo.id);
    },

    openForm: function($scope, event) {
      var self = this;
      var defer = $q.defer();
      var modalView;
      $scope.reminderOpts =  [
        {value: null,  label: 'None'},
        {value: 0,  label: 'At time of event'},
        {value: 5,  label: '5 minues before'},
        {value: 15,  label: '15 minutes before'},
        {value: 30,  label: '30 minutes before'},
        {value: 60,  label: '1 hour before'},
        {value: 120,  label: '2 hours before'},
        {value: 24 * 60,  label: '1 day before'}
      ];

      $scope.getOptLabel = function(minutes) {
        var retval = _.find($scope.reminderOpts, function(item) {
          return item.value == minutes;
        });

        if (typeof retval == 'undefined') return $scope.reminderOpts[0].label;
        return retval.label;
      }

      $scope.openOpt = function() { $scope.openOptFlag = !$scope.openOptFlag }
      $scope.closeOpt = function() { $scope.openOptFlag = false }

      System.getModalPage("todo/event-form.html", $scope)
      .then(function(page) {
        setDtToFilter();
        page.show();

        modalView = angular.element(document.getElementsByClassName('modal'));
      });

      $scope.title = "Edit Event";
      if(!event) {
        event = self.new();
        $scope.title = "New Event";
      }

      // assign event to the scope
      $scope.event = event;

      // blackout the mobiscroll overley
      var dwo;
      $scope.onHideHandler = function(obj, value, scroller) {
        $scope.page.show();
        dwo.removeClass('mobiscroll-dwo');
      }

      $scope.onShowHandler = function(obj, value, scroller) {
        $scope.page.hide();
        dwo = angular.element(document.getElementsByClassName('dwo'));
        dwo.addClass('mobiscroll-dwo');
        if(modalView) modalView.removeClass('slide-in-up');
      }

      $scope.toggleAllDay = function(event) {
        if(event.isAllDay) {
          event.dtTo = new Date(event.dtFrom);
          event.dtFrom.setHours(0,0,0,1);
          event.dtTo.setHours(24,0,0,0);
        }
      }

      var setDtToFilter = function() {
        if(dateFilter($scope.event.dtTo, 'ddMMyy') == dateFilter($scope.event.dtFrom, 'ddMMyy')) {
          $scope.dtToFilter = 'HH:mm'
        } else {
          $scope.dtToFilter = 'MMM d, y  HH:mm'
        }
      }

      // check if dtTo less than dtFrom, change dtTo equal to dtFrom
      $scope.$watch("event.dtFrom", function(newVal, oldVal) {
        if($scope.event.dtTo < newVal) {
          $scope.event.dtTo = new Date(newVal);
        }

        setDtToFilter();
      })

      $scope.$watch("event.dtTo", function(newVal, oldVal) {
        setDtToFilter();
      })

      $scope.cancel = function() {
        if(modalView) modalView.addClass('slide-in-up');
        $scope.page.close();
        defer.reject();
      }

      $scope.save = function(event) {
        var isNew = event.id ? false : true;
        var oldEvent = self.findById(event.id);
        var newEvent = self.save(event);

        var alertText = null;
        if(isNew) {
          alertText = "A new event is added to your To-Do list.";
        }
        else {
          alertText = "An event has been updated.";
        }

        if (isNew) {
           _createEventInNative(newEvent);
          _scheduleReminder(newEvent);

        } else {
           _modifyEventInNative(oldEvent, newEvent);
          _modifyReminder(newEvent, oldEvent);
        }

        alert(alertText).then(function() {
          defer.resolve(event);
          $scope.page.close();
        })

      }


      return defer.promise;

    }

  };
}]);

/*
 * @Author: ims13
 * @Date:   2015-09-09 00:49:34
 * @Last Modified by:   ims13
 * @Last Modified time: 2016-01-20 14:22:15
 */

'use strict';

angular.module('smartvcApp.services')

.factory('TrackService', ["ENV", "$q", "$log", "$filter", "Event", "AuthService", "StorageService", function(ENV, $q, $log, $filter, Event, AuthService,
    StorageService) {

    var service = {
        addEvent: _addEvent,
        patchEndEvent: _patchEndEvent
    }

    return service;
    //////////

    function _addEvent(state, params) {

        var d = $q.defer();
        var lastState = StorageService.getValue("lastState");
        var acc = AuthService.getAccount();

        if (acc == null) {
            return;
        }

        if (lastState === state) {
            return;
        }

        if (_.isEmpty(params)) {
            params = {};
        }

        params = JSON.stringify(params);

        var event = new Event();
        event.accountId = acc.id;
        event.state = state;
        event.params = params;

        event.$save().then(cbSuccess, cbFail);

        return d.promise;

        //////////////
        function cbSuccess(data) {
            StorageService.setValue('lastEventId', data.id);
            StorageService.setValue('lastState', data.state);
            d.resolve(data);
        }

        function cbFail(reason) {
            StorageService.setValue('lastEventId', null);
            d.reject(reason);
        }
    }

    function _patchEndEvent() {
        var d = $q.defer();
        var lastEventId = StorageService.getValue("lastEventId");
        if (!lastEventId) {
            return;
        }

        Event.patchEnd({ id: lastEventId }, {}, cbSuccess, cbFail);
        return d.promise;
        //////////////
        function cbSuccess(data) {
            console.log("patchEndEvent success");
            d.resolve(data);
        }

        function cbFail(reason) {
            console.log("patchEndEvent failed", reason);
            d.reject(reason);
        }

    }

}]);
'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.utils
 * @description
 * # utils
 * Service in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('Utils', utils)
    .constant('moment', moment);

utils.$inject = [];

/* @ngInject */
function utils() {
    var service = {
        sleep: _sleep,
        getFilename: _getFilename,
        getPath: _getPath,

        /* string stuffs */
        stringFormat: _stringFormat,

        /* error object */
        error: _error2,

        /* scope timer */
        scopeTimer: _scopeTimer,

        parseJSON: _parseJSON,

        findDiffObject: _findDiffObject,

        toDate: _toDate,

        reflect: _reflect,

        omitNull: _omitNull,

        convertDateStringsToDates: _convertDateStringsToDates,

        checkPlugin: _checkPlugin

    };

    return service;

    ////////////////

    function _sleep(milliseconds) {
        var start = new Date().getTime();
        for (var i = 0; i < 1e7; i++) {
            if ((new Date().getTime() - start) > milliseconds) {
                break;
            }
        }
    }

    function _getFilename(fileURI) {
        var idx = fileURI.lastIndexOf("/");

        if (idx > -1) {
            return fileURI.slice(idx + 1);
        }

        return fileURI;
    }

    function _getPath(fileURI) {
        var idx = fileURI.lastIndexOf("/");

        if (idx > -1) {
            return fileURI.slice(0, idx + 1);
        }

        return fileURI;
    }

    //only support 1 level object
    function _omitNull(obj) {
        if (angular.isArray(obj)) {
            var array = [];
            obj.forEach(function(item) {
                item = _.omit(item, function(it) {
                    return it == null || it == undefined
                });
                array.push(item);
            });

            return array;
        } else {
            return _.omit(obj, function(it) {
                return it == null || it == undefined
            });
        }
    }

    // Using reflect to make sure all the promise done, whether resolve or reject
    // $q.all(promises.map(Utils.reflect)).then(function(data) {
    function _reflect(promise) {
        return promise.then(function(v) { return { v: v, status: "resolved" } },
            function(e) { return { e: e, status: "rejected" } });
    }

    function _toDate(input, trialAndError) {
        if (typeof input === 'string') {

            if (trialAndError) {
                input = _parseDateTrialAndError(input);
            } else {
                input = _parseDateISO8601(input);
            }
        }

        return input;
    }
    //http://aboutcode.net/2013/07/27/json-date-parsing-angularjs.html
    // regexISO8601 = /^(\d{4}|\+\d{6})(?:-(\d{2})(?:-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2})(\.(\d{1,}))?(Z|([\-+])(\d{2}):(\d{2}))?)?)?)?$/
    function _convertDateStringsToDates(input, trialAndError, deep) {
        if (deep == undefined) deep = 0;

        if (deep > 10) {
            console.error("Stop execution, it's too many recursion. Method convertDateStringsToDates() called > 10.");
            return input;
        }

        if (typeof input === 'string') {
            var match;

            if (trialAndError) {
                input = _parseDateTrialAndError(input);
            } else {
                input = _parseDateISO8601(input);
            }
        }

        // Ignore things that aren't objects.
        else if (typeof input === "object") {
            for (var key in input) {
                if (!input.hasOwnProperty(key)) continue;

                var value = input[key];
                var match;
                // Check for string properties which look like dates.
                if (typeof value === 'string') {

                    if (trialAndError) {
                        input[key] = _parseDateTrialAndError(value);
                    } else {
                        input[key] = _parseDateISO8601(value);
                    }

                } else if (typeof value === "object") {
                    // Recurse into object
                    _convertDateStringsToDates(value, trialAndError, deep + 1);
                }
            }
        }

        return input;

        /*********/

    }

    function _parseDateISO8601(value) {
        // regex below make 4 digit string acceptable as Date. will be harmful for string
        // var regexISO8601 = /^(\d{4}|\+\d{6})(?:-(\d{2})(?:-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2})(\.(\d{1,}))?(Z|([\-+])(\d{2}):(\d{2}))?)?)?)?$/;
        // Forced minimal date 2000-01-01
        var regexISO8601 = /^(\d{4}|\+\d{6})-(\d{2})-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2})(\.(\d{1,}))?(Z|([\-+])(\d{2}):(\d{2}))?)?$/
        var match;

        if ((match = value.match(regexISO8601))) {
            var milliseconds = Date.parse(match[0]);
            if (!isNaN(milliseconds)) {
                var date = new Date(milliseconds);
                date.src = value;
                value = date;
            }
        }
        return value;
    }

    function _parseDateTrialAndError(value) {
        var date = new Date(value);
        if (!isNaN(date)) {
            date.src = value;
            value = date;
        }
        return value;
    }


    function _findDiffObject(original, edited) {
        var diff = {};
        var passed = {};


        for (var key in original) {
            if (key.indexOf('$') >= 0) continue;
            passed[key] = true;

            // check array, only the object item as whole,
            // not each key properties in the object
            if (_.isArray(original[key])) {
                diff[key] = _.filter(edited[key], function(it) {
                    //footprint angular ng-repeat must be removed
                    delete it.$$hashKey;
                    return !_.findWhere(original[key], it);
                });

                if (diff[key].length == 0) {
                    delete diff[key];
                }

            } else {
                if (!angular.equals(original[key], edited[key])) {
                    diff[key] = edited[key];
                }
            }
        }

        for (var key in edited) {
            if (key.indexOf('$') >= 0) continue;
            if (passed[key]) continue;

            // if (_.isArray(edited[key])) {

            // } else {
            if (!angular.equals(edited[key], original[key])) {
                diff[key] = edited[key];
            }
            // }
        }

        return diff;
    }
    /**
     * utils.stringFormat("{0} - {1}{2}", [ param1, param2, param3])
     *
     * @param  {[type]} template [description]
     * @param  {[type]} values   [description]
     * @param  {[type]} pattern  [description]
     * @return {[type]}          [description]
     */
    function _stringFormat(template, values, pattern) {
        pattern = pattern || /\{([^\{\}]*)\}/g;
        return template.replace(pattern, function(a, b) {
            var p = b.split("."),
                r = values;
            try {
                for (var s in p) {
                    r = r[p[s]];
                }
            } catch (e) {
                r = a;
            }
            return typeof r === "string" || typeof r === "number" ? r : a;
        });
    };

    function _error(reason, status) {
        return {
            code: status,
            status: reason.data.status,
            message: reason.data.message,
            source: reason
        }
    };

    function _error2(message, status, code) {
        return {
            code: code || status,
            status: status || "local",
            message: message
        };
    }

    /**
     * source @{@link https://github.com/christopherthielen/ui-router-extras/blob/gh-pages/example/timerService.js}
     * @param  {[type]} $scope [description]
     * @return {[type]}        [description]
     */
    function _scopeTimer($scope) {
        console.log("scopeTimer: " + $scope.$id);
        var scopeCreated = Date.now();
        var computeAge = function() {
            var delta = Date.now() - scopeCreated;
            $scope.ageMs = delta;
            $scope.age = Math.floor(delta / 1000);
            if (!$scope.$$phase) {
                $scope.$digest();
            }
        };
        computeAge();
        var intervalPromise = setInterval(computeAge, 1000);
        $scope.$on("$destroy", function() {
            // $interval.cancel(intervalPromise);
            clearInterval(intervalPromise);
            console.log("scope: " + $scope.$id + " destroyed");
        })
    }

    function _parseJSON(str) {

        return JSON.parse(str, reviver);

        ///////////////////////////////
        function reviver(key, value) {
            if (typeof value === 'string') {
                var regexp;

                regexp = /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.\d\d\dZ$/.exec(value);
                if (regexp) {
                    return new Date(value);
                }
            }

            return value;
        }
    }

    function _checkPlugin(pluginName) {
        if (window.navigator.simulator === true) {
            console.log('This plugin is not available in simulator');
            return false;
        } else if (!window.cordova) {
            console.log('Plugin window.cordova not found');
            return false;
        } else if (window.cordova.plugins === undefined) {
            console.log('Plugin window.cordova.plugins not found');
            return false;
        } else if (window.cordova.plugins[pluginName] === undefined) {
            console.log('Plugin window.cordova.plugins.' + pluginName + ' not found');
            return false;
        } else {
            return true;
        }
    }
}
(function() {
    'use strict';

    angular
        .module('smartvcApp.directives')
        .directive('checkToRadio', directiveFn);

    directiveFn.$inject = ['$parse'];

    /* @ngInject */
    function directiveFn ($parse) {
        // Usage:
        //
        // Creates:
        //
        var directive = {
            link: link,
            restrict: 'A',
            required: ['ngModel'],
            scope: {
                model: "=checkToRadio",
                value: "=radioValue",
                checked: "=ngModel"
            }
        };
        return directive;

        function link(scope, element, attrs) {
            element.on('click', function() {
                scope.model = scope.checked ? scope.value : null;
                scope.checked = scope.model == scope.value;
                
                console.log(scope.model)
            });

        }
    }
})();
angular.module('smartvcApp.directives')

/** dynamic height wont work if the height of each page dynamically changed in runtime */
.directive('dynamicHeight', function() {
    return {
        require: ['^ionSlideBox'],
        link: function(scope, elem, attrs, slider) {
            var slides = null;

            // scope.$on('$ionicView.beforeEnter', function(){ console.log("masuk")
                if (slides == null) {
                    slides = elem.find('ion-slide');
                    slides = slides.map ? slides.map(function(itm, el) { return el.clientHeight }) : [];
                }

                // console.log(elem.find('ion-slide'))
                scope.$watch(function() {
                    return slider[0].__slider.selected();
                }, function(val) {
                    //getting the heigh of the container that has the height of the viewport
                    var newHeight = slides[val];//window.getComputedStyle(slides[val], null).getPropertyValue("height");
                    // if (newHeight && val == slider[0].__slider.selected()) {
                        elem[0].style.height = newHeight + "px";
                    // }
                    // console.log(val, $ionicScrollDelegate)
                    // $ionicScrollDelegate.scrollTop();
                });
            // });


        }
    };
})

/*
* @Author: ims13
* @Date:   2015-09-01 01:09:19
* @Last Modified by:   ims13
* @Last Modified time: 2015-10-21 04:21:56
*/

// http://stackoverflow.com/questions/17343696/adding-an-ng-click-event-inside-a-filter
// declare a new module, and inject the $compileProvider
angular.module('compile', [], ["$compileProvider", function($compileProvider) {
  // configure new 'compile' directive by passing a directive
  // factory function. The factory function injects the '$compile'
  $compileProvider.directive('compile', ["$compile", function($compile) {
    // directive factory creates a link function
    return function(scope, element, attrs) {
      scope.$watch(
        function(scope) {
           // watch the 'compile' expression for changes
          return scope.$eval(attrs.compile);
        },
        function(value) {
          // when the 'compile' expression changes
          // assign it into the current DOM

          element.html(value);

          // compile the new DOM and link it to the current
          // scope.
          // NOTE: we only compile .childNodes so that
          // we don't get into infinite loop compiling ourselves
          $compile(element.contents())(scope);
        }
      );
    };
  }])
}]);

'use strict';

/**
 * @ngdoc directive
 * @name smartvcApp.directive:fadebar
 * @description
 * # fadebar
 */
angular.module('smartvcApp.directives')

//Fadebar Directive
.directive('fadeBar', ["$timeout", "$ionicSideMenuDelegate", function($timeout, $ionicSideMenuDelegate) {
  return {
    restrict: 'E',
    template: '<div class="fade-bar"></div>',
    replace: true,
    link: function($scope, $element, $attr) {
      // Run in the next scope digest
      $timeout(function() {
        // Watch for changes to the openRatio which is a value between 0 and 1 that says how "open" the side menu is

        $scope.$watch(function() {
            return $ionicSideMenuDelegate.getOpenRatio();
          },
          function(ratio) {
            $element[0].style.opacity = Math.abs(ratio);
          });
      });
    }
  }
}]);
(function() {
    'use strict';

    angular
        .module('smartvcApp.directives')
        .directive('goto', directiveFn);

    directiveFn.$inject = ['$rootScope', '$ionicHistory'];

    /* @ngInject */
    function directiveFn($rootScope, $ionicHistory) {
        var directive = {
            link: link,
            restrict: 'A'
        };

        return directive;


        function link(scope, element, attrs) {
            element.bind('click', function($event) {
                if (attrs.goto == null) return;

                //NOTE: disable back button for the next view
                $ionicHistory.nextViewOptions({
                    disableBack: true,
                    disableAnimate: true
                });

                navigateTo(attrs.goto, {}, {reload: true});
                $event.stopPropagation();
            })
        }

    }

})();
'use strict';

/**
 * @ngdoc directive
 * @name smartvcApp.directive:fadebar
 * @description
 * # fadebar
 */
angular.module('smartvcApp.directives')

//hideTabs Directive
.directive('hideTabs', ["$rootScope", function($rootScope) {
    return {
        restrict: 'A',
        link: function($scope, $el) {
            $rootScope.hideTabs = true;
            $scope.$on('$destroy', function() {
                $rootScope.hideTabs = false;
            });
        }
    };
}]);

'use strict';

/**
 * @ngdoc directive
 * @name smartvcApp.directive:fadebar
 * @description
 * # fadebar
 */
angular.module('smartvcApp.directives')

.factory("navService", ["$rootScope", "$ionicHistory", function($rootScope, $ionicHistory) {
    var service = {
        anchorView: null
    };

    service.setBackView = function(view) {
        if (view != null && service.anchorView == null) {
            service.anchorView = view;
        } else if (view == null && service.anchorView == null) {
            service.anchorView = $ionicHistory.backView();
        }


    }

    service.goBack = function() {
        var histories = $ionicHistory.viewHistory().histories;
        var backIndex = service.anchorView.index + 1 - histories[service.anchorView.historyId].stack.length;
        $ionicHistory.goBack(backIndex);
        service.anchorView = null;
    }

    return service;
}])

//Fadebar Directive
.directive('navContent', ["$rootScope", "$state", function($rootScope, $state) {

    var template = "\
            <ion-footer-bar ng-show='isShow()' class='bar-positive'>\
                <div class='buttons' ng-click='prevPage()' ng-hide='currentIndex == 0'>\
                    <button class='button'>Previous</button>\
                </div>\
                <h1 class='title pager' style='text-align: center'>{{page.title}}</h1>\
                <div class='buttons'>\
                    <button class='button' ng-if='currentIndex + 1 != pageTotal' ng-click='nextPage()'>Next</button>\
                </div>\
            </ion-footer-bar>\
            ";

    return {
        restrict: 'E',
        replace: true,
        template: template,
        link: function($scope, $el, $attrs) {
            var configs = null;

            $scope.isShow = _isShow;
            $scope.nextPage = _nextPage;
            $scope.prevPage = _prevPage;

            // $rootScope.hideTabs = true;
            // $scope.$on('$destroy', function() {
            //     $rootScope.hideTabs = false;
            // });


            //////////////////////////////
            function _initiate() {

                $scope.$watch('$root.navContentConfigs', function(newV, oldV) {
                    if (oldV == null && newV != null) {
                        configs = $rootScope.navContentConfigs;
                        if (!Array.isArray(configs.pages)) throw new Error("List of pages must be provided!");

                        _findCurrentIndex();
                        $scope.pageTotal = configs.pages.length;
                    } else if (newV == null && oldV != null) {
                        configs = null;
                    }

                });
            }


            function _isShow() {
                if (configs == null) return false;
                if (Array.isArray(configs.states)) {
                    for(var i = 0; i < configs.states.length; i++) {
                        if ($state.includes(configs.states[i])) {
                            return true;
                        }
                    }
                } else if (typeof configs.states === "string") {
                    return $state.includes(configs.states);
                }

                return false;
            }

            function _findCurrentIndex() {
                var idx = _.findIndex(configs.pages, function(page) {
                    return $state.is(page.state, page.params);
                })

                if (idx <= -1) $scope.currentIndex = 0;
                else $scope.currentIndex = idx;
            }

            function _nextPage() {
                if ($scope.currentIndex + 1 >= configs.pages.length) $scope.currentIndex = configs.pages.length - 1;
                else $scope.currentIndex += 1;

                $scope.page = configs.pages[$scope.currentIndex];
                $state.go($scope.page.state, $scope.page.params);
            }

            function _prevPage() {
                if ($scope.currentIndex - 1 < 0) $scope.currentIndex = 0;
                else $scope.currentIndex -= 1;

                $scope.page = configs.pages[$scope.currentIndex];
                $state.go($scope.page.state, $scope.page.params);
            }
        }
    };
}])

/**
 * configs: {
 *      pages: [
 *          { state: "", params: "", title: "" }
 *      ],
 *      states: [
 *
 *      ]
 * }
 */

//hideTabs Directive
.directive('showNavContent', ["$rootScope", function($rootScope) {
    return {
        restrict: 'A',
        scope: {
            configs: "=showNavContent"
        },
        link: function($scope, $el) {
            $rootScope.navContentConfigs = $scope.configs;
            $scope.$on('$destroy', function() {
                $rootScope.navContentConfigs = null;
            });
        }
    };
}])

.directive('navContentBarConfigs', ["$rootScope", function($rootScope) {
    return {
        restrict: 'A',
        scope: {
            configs: "=navContentBarConfigs"
        },
        link: function($scope, $el) {
            $rootScope.navContentBarConfigs = $scope.configs;
            $scope.$on('$destroy', function() {
                $rootScope.navContentBarConfigs = null;
            });
        }
    };
}])


//Fadebar Directive
.directive('navContentBar', ["$rootScope", "$state", "$ionicHistory", function($rootScope, $state, $ionicHistory) {

    var template = "\
            <div class='nav-content-bar' ng-show='isShow()'>\
                <div class='left-button'><i class='icon ion-chevron-left' ng-click='prevPage()' ng-hide='pageIndex == 0 && currentChildIndex == 0'></i></div>\
                <div class='nav-bar-items'>\
                    <div class='nav-item' ng-class='{ selected: $index == currentChildIndex}' ng-repeat='item in page.children' ui-sref='{{item.state}}' ng-click='changePage($index)'>\
                        <span>{{item.title}}</span>\
                    </div>\
                </div>\
                <div class='right-button'><i class='icon ion-chevron-right' ng-hide='pageIndex + 1 == pageTotal && currentChildIndex + 1 == page.children.length' ng-click='nextPage()'></i>\
                </div>\
            </div>\
            ";

    return {
        restrict: 'E',
        replace: true,
        template: template,
        link: function($scope, $el, $attrs) {
            var configs = null;

            $scope.isShow = _isShow;
            $scope.nextPage = _nextPage;
            $scope.prevPage = _prevPage;
            $scope.changePage = _changePage;
            $scope.gotoPage = _gotoNavPage;

            $rootScope.navHandler = $scope;

            _initiate();


            //////////////////////////////
            function _initiate() {

                $scope.$watch('$root.navContentBarConfigs', function(newV, oldV) {

                    if (newV != null) {
                        configs = newV;
                        if (!Array.isArray(configs.pages)) throw new Error("List of pages must be provided!");

                        _findCurrentIndex();
                        $scope.pageTotal = configs.pages.length;
                        $rootScope.$broadcast("navContentBar:onChangePage", $scope.currentChildIndex);
                    } else if (newV == null) {
                        configs = null;
                    }
                });
            }


            function _isShow() {
                if (configs == null) return false;
                if (Array.isArray(configs.states)) {
                    for(var i = 0; i < configs.states.length; i++) {
                        if ($state.includes(configs.states[i])) {
                            return true;
                        }
                    }
                } else if (typeof configs.states === "string") {
                    return $state.includes(configs.states);
                }

                return false;
            }

            function _findCurrentIndex() {
                var currentChildIndex = -1;
                var pageIndex = _.findIndex(configs.pages, function(page) {
                    currentChildIndex = _.findIndex(page.children, function(item) {
                        return $state.is(item.state, item.params);
                    });
                    return (currentChildIndex >= 0) ? true : false;
                })

                if (pageIndex <= -1) $scope.pageIndex = 0;
                else $scope.pageIndex = pageIndex;

                if (currentChildIndex == -1) $scope.currentChildIndex = 0;
                else $scope.currentChildIndex = currentChildIndex;

                $scope.page = configs.pages[$scope.pageIndex];
            }

            function _nextPage() {
                if ($scope.currentChildIndex + 1 >= configs.pages[$scope.pageIndex].children.length) {
                    if ($scope.pageIndex + 1 >= configs.pages.length) {
                        $scope.pageIndex = configs.pages.length - 1;
                        $scope.currentChildIndex = configs.pages[$scope.pageIndex].children.length - 1;
                    }
                    else {
                        $scope.pageIndex += 1;
                        $scope.currentChildIndex = 0;
                    }
                }
                else {
                    $scope.currentChildIndex += 1;
                }

                $scope.page = configs.pages[$scope.pageIndex];
                _changePage($scope.currentChildIndex);
                $rootScope.$broadcast("navContentBar:onNextPage", $scope.currentChildIndex);
                // $scope.child = $scope.page.children[$scope.currentChildIndex];
                // $ionicHistory.nextViewOptions({ disableAnimate: true, disableBack: true });
                // $state.go($scope.child.state, $scope.child.params);
            }

            function _prevPage() {
                if ($scope.currentChildIndex - 1 < 0) {
                    if ($scope.pageIndex - 1 < 0) {
                        $scope.pageIndex = 0;
                        $scope.currentChildIndex = 0;
                    }
                    else {
                        $scope.pageIndex -= 1;
                        $scope.currentChildIndex = configs.pages[$scope.pageIndex].children.length - 1;;
                    }
                }
                else {
                    $scope.currentChildIndex -= 1;
                }

                $scope.page = configs.pages[$scope.pageIndex];
                _changePage($scope.currentChildIndex);
                $rootScope.$broadcast("navContentBar:onPreviousPage", $scope.currentChildIndex);

                // $scope.child = $scope.page.children[$scope.currentChildIndex];
                // $ionicHistory.nextViewOptions({ disableAnimate: true, disableBack: true });
                // $state.go($scope.child.state, $scope.child.params);
            }

            function _changePage(childIndex) {
                $scope.currentChildIndex = childIndex;
                $scope.child = $scope.page.children[$scope.currentChildIndex];

                $ionicHistory.nextViewOptions({ disableAnimate: true, disableBack: true });
                $state.go($scope.child.state, $scope.child.params);
                $rootScope.$broadcast("navContentBar:onChangePage", $scope.currentChildIndex);
            }

            function _gotoNavPage(property, value) {
                var currentChildIndex = -1;
                var pageIndex = _.findIndex(configs.pages, function(page) {
                    currentChildIndex = _.findIndex(page.children, function(item) {
                        return item.params[property] == value;
                    });
                    return (currentChildIndex >= 0) ? true : false;
                })

                if (pageIndex <= -1 || currentChildIndex <= -1) return;

                $scope.pageIndex = pageIndex;
                $scope.currentChildIndex = currentChildIndex;
                $scope.page = configs.pages[$scope.pageIndex];
                _changePage($scope.currentChildIndex);

                // $scope.child = $scope.page.children[$scope.currentChildIndex];

                // $ionicHistory.nextViewOptions({ disableAnimate: true, disableBack: true });
                // $state.go($scope.child.state, $scope.child.params);
            }
        }
    };
}])
;

(function() {
    'use strict';

    angular
        .module('smartvcApp.directives')
        .directive('progressbar', directiveFn);

    directiveFn.$inject = ['$timeout', '$filter'];

    /* @ngInject */
    function directiveFn ($timeout, $filter) {
        // Usage:
        //
        // Creates:
        //
        var innerEl = angular.element('<div></div>');
        var textEl  = angular.element('<span></span>');
        var numberFilter = $filter('number');
        
        var directive = {
            link: link, 
            restrict: 'A',
            scope: {
                progress: '=value'
            }
        };
        return directive;

        function link(scope, element, attrs) {
            element.css('position', 'relative');
            textEl.css('position', 'absolute');
            textEl.css('top', 0);
            textEl.css('left', 0);
            textEl.css('bottom', 0);
            textEl.css('right', 0);
            textEl.css('text-align', 'center');
            textEl.css('color', 'white');
            
            element.addClass("progressBar");
            element.append(innerEl);
            element.append(textEl);
            // console.log(element)
            scope.$watch('progress', function(value) {
                    _progress(value, element);
            })    
        }
                
        function _progress(percent, element) {
            var progressBarWidth = percent * element.width() / 100;
            var text = numberFilter(percent, 2);
            element.find('div').css("width", progressBarWidth);//.html(text + "%&nbsp;");
            element.find('span').html(text + "%&nbsp;");
        }        
    }
})();

'use strict';

/**
 * @ngdoc directive
 * @name smartvcApp.directive:rating
 * @description
 * # rating
 */
angular.module('smartvcApp.directives')

.run(["$templateCache",
  function($templateCache) {
    $templateCache.put("template/rating/rating.html",
      "<span ng-mouseleave=\"reset()\" ng-keydown=\"onKeydown($event)\" tabindex=\"0\" role=\"slider\" aria-valuemin=\"0\" aria-valuemax=\"{{range.length}}\" aria-valuenow=\"{{value}}\">\n" +
      "    <i ng-repeat=\"r in range track by $index\" ng-mouseenter=\"enter($index + 1)\" ng-click=\"rate($index + 1)\" class=\"rating icon\" ng-class=\"$index < value && (r.stateOn || 'ion-ios-star') || (r.stateOff || 'ion-ios-star-outline')\">\n" +
      // "        <span class=\"sr-only\">({{ $index < value ? '*' : ' ' }})</span>\n" +
      "    </i>\n" +
      "</span>");
  }
])

.constant('ratingConfig', {
  max: 5,
  stateOn: null,
  stateOff: null
})

.controller('RatingController', ['$scope', '$attrs', 'ratingConfig',
  function($scope, $attrs, ratingConfig) {
    var self = this;
    var ngModelCtrl = {
      $setViewValue: angular.noop
    };

    this.init = function(ngModelCtrl_) {
      ngModelCtrl = ngModelCtrl_;
      ngModelCtrl.$render = this.render;

      this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;
      this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;

      // var ratingStates = $scope.ratingStates ? $scope.ratingStates :
      //   new Array(angular.isDefined($scope.max) ? $scope.max : ratingConfig.max);
      // $scope.range = this.buildTemplateObjects(ratingStates);
    };

    $scope.$watch('max', function(val) {
      if (angular.isDefined($scope.max)) {
        var ratingStates = $scope.ratingStates ? $scope.ratingStates :
          new Array(angular.isDefined($scope.max) ? parseInt($scope.max) : ratingConfig.max);
        $scope.range = self.buildTemplateObjects(ratingStates);
      }
    })

    this.buildTemplateObjects = function(states) {
      for (var i = 0, n = states.length; i < n; i++) {
        states[i] = angular.extend({
          index: i
        }, {
          stateOn: this.stateOn,
          stateOff: this.stateOff
        }, states[i]);
      }
      return states;
    };

    $scope.rate = function(value) {
      if (!$scope.readonly && value >= 0 && value <= $scope.range.length) {
        ngModelCtrl.$setViewValue(value);
        ngModelCtrl.$render();
      }
    };

    $scope.enter = function(value) {
      if (!$scope.readonly) {
        $scope.value = value;
      }
      $scope.onHover({
        value: value
      });
    };

    $scope.reset = function() {
      $scope.value = ngModelCtrl.$viewValue;
      $scope.onLeave();
    };

    $scope.onKeydown = function(evt) {
      if (/(37|38|39|40)/.test(evt.which)) {
        evt.preventDefault();
        evt.stopPropagation();
        $scope.rate($scope.value + (evt.which === 38 || evt.which === 39 ? 1 : -1));
      }
    };

    this.render = function() {
      $scope.value = ngModelCtrl.$viewValue;
    };
  }
])

.directive('rating', function() {
  return {
    restrict: 'EA',
    require: ['rating', 'ngModel'],
    scope: {
      readonly: '=?',
      onHover: '&',
      onLeave: '&',
      max: '=?',
      ratingStates: '=?'
    },
    translude: true,
    controller: 'RatingController',
    templateUrl: 'template/rating/rating.html',
    replace: true,
    link: function(scope, element, attrs, ctrls) {
      var ratingCtrl = ctrls[0],
        ngModelCtrl = ctrls[1];

      if (ngModelCtrl) {
        ratingCtrl.init(ngModelCtrl);
      }
    }
  };
});
(function() {
    'use strict';

    angular
        .module('smartvcApp.directives')
        .directive('toggle', directiveFn);

    directiveFn.$inject = ['$log'];

    /* @ngInject */
    function directiveFn ($log) {
        // Usage:
        //
        // Creates: 
        //
        var directive = {
            bindToController: true,
            controller: Controller,
            controllerAs: 'vm',
            link: link,
            restrict: 'AE',
            scope: {
                'isOpen': '=',
                'onExpand': '&',
                'onCollapse': '&',
                'controlOthers': '=',
                'controlItems': '=?',
                'controlVars': '='
            }
        };

        return directive;
        ////////////////////
        function link(scope, element, attrs, ctrl) {
            element.bind('click', ctrl.onToggle );
        }
    }

    Controller.$inject = ['$log', '$scope', '$attrs', '$timeout', '$ionicScrollDelegate'];
    /* @ngInject */
    function Controller ($log, $scope, $attrs, $timeout, $ionicScrollDelegate) {
        var vm = this;
        vm.onToggle = _onToggle;
        
        $scope.$watch('vm.isOpen', function(newVal, oldVal) {
            if (newVal != oldVal) { 
                _onToggleEvent();
            }
        });

        ////////////////////
        function _onToggle($event) {
            vm.isOpen = !vm.isOpen;
            _onToggleEvent();   

            $scope.$apply();                    
        }

        function _onToggleEvent() {
            if (!vm.isOpen && angular.isDefined(vm.onCollapse)) {
                vm.onCollapse();    
            }

            if (vm.isOpen && angular.isDefined(vm.onExpand)) {
                vm.onExpand();    
            }            

            if (vm.controlOthers) {
                if (vm.controlItems == null) {
                    $log.error('if toggle is used to control other toggle, list of the item must be available');
                    return;
                }

                if (vm.controlVars == null) {
                    $log.error('if toggle is used to control other toggle, list of the item variable must be available');
                    return;
                }

                _toggleAll(vm.isOpen, vm.controlItems, vm.controlVars);
            }

            $timeout(function() {
                $ionicScrollDelegate.resize();
            }, 10);            
        }

        function _toggleAll(isExpand, items, vars) { 
            if (isExpand) {
                //expand all
                if (_.isArray(items)) {
                    items.forEach(function(itm) {
                        vars[itm.id] = true;
                    })                    
                }
            } else {
                //Collapse all
                if (_.isArray(items)) {
                    items.forEach(function(itm) {
                        vars[itm.id] = false;
                    })                    
                }                
            }
        }        

    }

})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.filters')
        .filter('inArray', filterFn);

    filterFn.$inject = ['$filter'];
    /* @ngInject */
    function filterFn($filter) {
        return filterFn;

        ////////////////

        function filterFn(input, include, prop) {

            if (!angular.isArray(input))
                return input;

            if (!angular.isArray(include))
                include = [];

            // if (prop) {
            //     include = include.map(function byProp(item) {
            //         return item[prop];
            //     });
            // }

            return input.filter(function byInclude(item) {
                return include.indexOf(prop ? item[prop] : item) > -1;
            });
        }
    }

})();

'use strict';

/**
 * @ngdoc filter
 * @name smartvcApp.filter:unique
 * @function
 * @description
 * # unique
 * Filter in the smartvcApp.
 *
 * src: http://stackoverflow.com/questions/18381944/ng-options-and-unique-filter-not-displaying-angular-js/18382680#18382680
 */
angular.module('smartvcApp.filters')

.filter('unique', ["$parse", function($parse) {
  return function(input, filter) {
    if (angular.isArray(input)) {

      //unique key
      var getter = $parse(filter);

      return _.uniq(input, function(elm) {
        return getter(elm);
      });
    }
    return input;
  }
}]);
angular.module("app.config", [])

.constant("ENV", {
	"build": {
		"version": "0.11.0",
		"time": "2021-12-29T06:42:42.362Z"
	},
	"appName": "mywcguide.power",
	"name": "production",
	"apiEndpoint": "http://shrs-tr6.shrs.pitt.edu:8080/smart/api/",
	"debug": false,
	"profiling": false
})

;
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:AboutCtrl
 * @description
 * # AboutCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(['$stateProvider',
  function($stateProvider) {
    $stateProvider

    .state('main.about', {
      url: '/about',
      views: {
        'about-tab': {
          templateUrl: 'about.html',
          controller: 'AboutCtrl'
        }
      }
    })

    ;
  }
])

.controller('AboutCtrl', ["$scope", "ENV", function($scope, ENV) {
  $scope.ENV = ENV;

}]);
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:ContactsCtrl
 * @description
 * # ContactsCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(['$stateProvider',
  function($stateProvider) {
    $stateProvider

    // setup contacts
    .state('main.contacts', {
      cache: false,
      url: '/contacts',
      views: {
        'main-content@main': {
          templateUrl: 'contacts.html',
          controller: 'ContactsCtrl'
        }
      }
    })

    .state('main.contacts.detail', {
      cache: false,
      url: '/:id',
      views: {
        'main-content@main': {
          templateUrl: 'contact_detail.html',
          controller: 'ContactDetailCtrl'
        }
      }
    })

    .state('main.contacts.form', {
      cache: false,
      url: '/:id/:group',
      views: {
        'main-content@main': {
          templateUrl: 'contact_form.html',
          controller: 'ContactFormCtrl'
        }
      }
    })
  }
])

.controller('ContactsCtrl', ["$scope", "$state", "ContactService", "$ionicActionSheet", "$cordovaContacts", function($scope, $state, ContactService, $ionicActionSheet, $cordovaContacts) {

  $scope.contactGroups = [
    "Physicians",
    "Therapists",
    "Wheelchair Seating Clinic",
    "Wheelchair Suppliers",
    "Accessible Transportation Service"
  ];

  var contactList = ContactService.get();
  var groupedContact = _.groupBy(contactList, function(item) {
    return item.group;
  });

  $scope.contactGroupsD = ContactService.getCustomGroups();

  // $scope.groups = _.keys(groupedContact);
  $scope.contacts = groupedContact;
  $scope.addNew = function(group) {

    var sheet = $ionicActionSheet.show({
      buttons: [{
        text: 'Add New Contact'
      }, 
      // {
      //   text: 'Import Phone Contact'
      // }
      ],
      // destructiveText: 'Delete',
      titleText: 'Contacts',
      cancelText: 'Cancel',
      cancel: function() {
        // add cancel code..
      },
      buttonClicked: function(index) {

        switch (index) {
          case 0:
            $state.go('main.contacts.form', {
              id: 'new',
              group: group
            });
            break;
          case 1:
            $cordovaContacts.pickContact().then(
              function(contact) {
                var mfirstName   = contact.name ? contact.name.givenName : '';
                var mlastName    = contact.name ? contact.name.familyName : '';
                var mphoneNumber = contact.phoneNumbers && contact.phoneNumbers[0] ? contact.phoneNumbers[0].value : '';
                var memail       = contact.emails && contact.emails[0] ? contact.emails[0].value : '';

                var newc         = ContactService.new(group);
                newc.firstName   = mfirstName;
                newc.lastName    = mlastName;
                newc.phoneNumber = mphoneNumber;
                newc.email       = memail;

                $state.go('main.contacts.form', {
                  id: 'import'
                });
              }, function(error) {
                alert(error);
              })
            break;
        }

        return true;
      }
    });
  }

  $scope.addNewGroup = function(gname) {
    window.prompt("New Category", "Contacts").then(function(result) {

      if (result != null && result != "" && ContactService.addCustomGroup(result)) {
          alert("Category '" + result + "' is added", "Success");

          //update group list
          $scope.contactGroupsD = ContactService.getCustomGroups();
      }
    })
  }

  $scope.actionOnGroup = function(gname) {

    var sheet = $ionicActionSheet.show({
        destructiveText: 'Delete Category',
        titleText: 'Contacts',
        cancelText: 'Cancel',
        cancel: function() {
          // add cancel code..
        },
        destructiveButtonClicked: function() {
            if (groupedContact[gname] != undefined) {
                alert('You have to remove all "' + gname + '" contacts before remove the category!', "Error");
            } else {
                if (ContactService.deleteCustomGroup(gname)) {
                    alert("Category '" + gname + "' is removed", "Success");

                    //update group list
                    $scope.contactGroupsD = ContactService.getCustomGroups();
                }
            }
            return true;
        }
    });
  }


}])

.controller('ContactDetailCtrl', ["$scope", "$state", "ContactService", "$filter", "$stateParams", function($scope, $state, ContactService, $filter, $stateParams) {

  var contactList = ContactService.get(),
    contacts = $filter('filter')(contactList, {
      id: $stateParams.id
    });

  if (contacts.length > 0) {
    $scope.contact = contacts[0];
  }

  $scope.delete = function(contact) {
      confirm("Are you sure you want to delete this contact?").then(function() {
            ContactService.delete(contact.id).then(
            function(response) {
                alert(response);
                $state.go('^');
            }, function(reason) {
                alert(reason);
                $state.go('^');
            });
      });

  }
}])

.controller('ContactFormCtrl', ["$scope", "$state", "ContactService", "$filter", "$stateParams", function($scope, $state, ContactService, $filter, $stateParams) {

    var isEdit = false;


  if ($stateParams.id > 0) {
    $scope.contact = ContactService.load($stateParams.id);
    isEdit = true;
  } else if ($stateParams.id == 'import') {
    $scope.contact = ContactService.getCache();
  } else {
    // show empty form
    $scope.contact = ContactService.new($stateParams.group);
  }

  $scope.save = function() {
    ContactService.save().then(
      function(response) {
        alert(response);
        if (isEdit) {
            $state.go('main.contacts.detail', {id: $scope.contact.id});
        } else {
            $state.go("^");
        }

      });
  }


}])

;

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:DashboardCtrl
 * @description
 * # DashboardCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  // setup dashboard tab
  .state('main.home', {
    url: '/home',
    views: {
      'main-content@main': {
        templateUrl: 'dashboard.html',
        controller: 'DashboardCtrl'
      }
    }
  });

}])

.controller('DashboardCtrl', ["$rootScope", "$scope", "$state", "$timeout", "$ionicPopup", "System", "SettingsService", function($rootScope, $scope, $state, $timeout, $ionicPopup, System, SettingsService) {
  $scope.ready = false;

  $scope.$on('$ionicView.beforeEnter', function(event, data) {
      $scope.deviceType = SettingsService.getDeviceType();
      $rootScope.settings = SettingsService.get();
  })

  $scope.$on('$ionicView.loaded', function(event, data) {
    $scope.ready = true;
    $scope.deviceType = SettingsService.getDeviceType();
    $rootScope.settings = SettingsService.get();
  })

  $scope.getTitle = function() {
    var title = "Virtual Coach ";

    if ($scope.deviceType == "MANUAL") {
      title += "(Manual Version)";
    } else if ($scope.deviceType == "POWER") {
      title += "(Power Version)";
    }

    return title;
  }

  $scope.howToGet = function() {
    $state.go('main.serdelivery');
  }

  $scope.howToUse = function() {
    window.alert('<center>Not implemented yet!</center>');
  }

  $scope.review = function() {
    $state.go('main.review');
  }

  $scope.openFacebookPage = function() {
    System.openFacebookPage();
  }

}]);
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  .state('main.healthissues', {
    url: '/healthissues',
    views: {
      'main-content@main': {
        templateUrl: 'healthissues/main.html',
        controller: 'HealthIssuesCtrl'
      }
    }
  })

  .state('main.healthissues.sub', {
    url: '/:sub',
    views: {
      'main-content@main': {
        templateUrl: function($stateParams) {
          return 'healthissues/' + $stateParams.sub + '/main.html';
        },
        controller: 'HealthIssuesSubCtrl'
      }
    }
  })

  .state('main.healthissues.sub.detail', {
    url: '/:term',
    views: {
      'main-content@main': {
        templateUrl: function($stateParams) {
          return 'healthissues/' + $stateParams.sub + '/main-' + $stateParams.term + '.html';
        },
        controller: 'HealthIssuesSubDetailCtrl'
      }
    }
  })
  ;
}])


.controller('HealthIssuesCtrl', ["$scope", "$rootScope", "$state", "System", function ($scope, $rootScope, $state, System) {
    activate();


    //////////////////////////
    function activate() {
        _init();

    }

    function _init() {
    }
}])


.controller('HealthIssuesSubCtrl', ["$scope", "$rootScope", "$state", "System", function ($scope, $rootScope, $state, System) {
    activate();


    //////////////////////////
    function activate() {
        _init();

    }

    function _init() {
    }
}])

.controller('HealthIssuesSubDetailCtrl', ["$scope", "$rootScope", "$state", "System", function ($scope, $rootScope, $state, System) {
    activate();


    //////////////////////////
    function activate() {
        _init();

    }

    function _init() {
    }
}])
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:LandingCtrl
 * @description
 * # LandingCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  // setup login state
  .state('landing', {
    url: '/landing',
    templateUrl: 'landing.html',
    controller: 'LandingCtrl'
  });

}])

.controller('LandingCtrl', ["$state", "$scope", "$timeout", function($state, $scope, $timeout) {

  // make content center
  // $timeout(function() {
  //   var elm = document.querySelector('#banner'),
  //     windowHeight = window.innerHeight,
  //     elmHeight = elm.offsetHeight;

  //   elm.style.paddingTop = (windowHeight - elmHeight) / 2 + 'px';
  // });

}]);
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:StartPageCtrl
 * @description
 * # StartPageCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  // setup dashboard tab
  .state('start', {
    url: '/login',
    templateUrl: 'login.html',
    controller: 'LoginCtrl'
  });

}])

.controller('LoginCtrl', ["$scope", "$rootScope", "$state", "$log", "$ionicPopup", "$ionicModal", "$ionicLoading", "SettingsService", "AuthService", "System", function(
  $scope,
  $rootScope,
  $state,
  $log,
  $ionicPopup,
  $ionicModal,
  $ionicLoading,
  SettingsService,
  AuthService,
  System) {

  $scope.deviceTypeList = SettingsService.getDeviceTypeList();
  $scope.account = {
    staySignIn: true
  };

  $scope.doTrial = function() {
    var deviceType = SettingsService.getDeviceType();

    $scope.data = {
      deviceType: deviceType
    };

    if (deviceType == SettingsService.DEVICE_TYPE.DONT_KNOW.key) {
      $ionicPopup.show({
        templateUrl: 'modal-deviceType.html',
        title: 'DEVICE TYPE',
        scope: $scope,
        buttons: [{
          text: 'Cancel'
        }, {
          text: '<b>OK</b>',
          onTap: function(e) {
            if ($scope.data.deviceType == null) {
              e.preventDefault();
            } else {
              SettingsService.setDeviceType($scope.data.deviceType);
              $state.go('main.home');
            }
          }
        }]
      });
    } else {
      System.goToDashboard();
    }
  }

  // REGISTER
  $scope.register = function() {
    System.register.show();
  }

  $scope.forgotPassword = function() {
    System.forgotPasswordWindow.show();
  }

  $scope.login = function(form) {
    $ionicLoading.show();

    function resetForm(account) {
      account.password = "";
      form.$setPristine();
    }

    var login = AuthService.login($scope.account);
    login.then(function(data) {
        $ionicLoading.hide();
        System.goToDashboard();

        $rootScope.$broadcast('auth:authenticated');

        resetForm($scope.account);
      },
      function(data) {
        $ionicLoading.hide();
        alert("Invalid username or password").then(function() {
          resetForm($scope.account);
        });

      });
  }
}]);

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:MainCtrl
 * @description
 * # MainCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  // setup abstract state for side menu directive
  .state('main', {
    abstract   : true,
    templateUrl: 'layout/container.html',
    controller : 'MainCtrl',
    data       : {
      restricted: true
    }
  })

  // .state('main', {
  //   url     : '/tab',
  //   abstract: true,
  //   views   : {
  //     "main-content": {
  //       templateUrl: 'tabs.html',
  //       controller: 'TabsCtrl'
  //     }
  //   }
  // });
}])

.controller('MainCtrl', ["$scope", "$state", "$timeout", "$ionicLoading", "System", "AuthService", function($scope, $state, $timeout, $ionicLoading, System, AuthService) {

  $scope.openTermOfUse = System.openTermOfUse;

  $scope.isIOS = ionic.Platform.isIOS();

  $scope.logout = function() {
    $ionicLoading.show();

    var logout = AuthService.logout();

    logout.then(function(data) {

      $timeout(function() {
        $ionicLoading.hide();
        System.dispatch();
      }, 500);

    }, function(reason) {
      $ionicLoading.hide();

      window.alert(reason).then(function() {
        System.dispatch();
      })
    })
  }

}])

// .controller('TabsCtrl', function($scope, $rootScope, $state, $ionicTabsDelegate) {

//   $scope.tabSelected = function() {
//     var idx = $ionicTabsDelegate.selectedIndex();
//     var event = null;

//     switch (idx) {
//       case 0: event = 'tabs:home-selected'; break;
//       case 1: event = 'tabs:contact-selected'; break;
//       case 2: event = 'tabs:todo-selected'; break;
//       case 3: event = 'tabs:more-selected'; break;
//     }

//     $rootScope.$broadcast(event);
//   }
// })
;
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:MaintenanceCtrl
 * @description
 * # MaintenanceCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

    $stateProvider

        .state('main.maintenance', {
        url: '/maintenance',
        views: {
            'main-content@main': {
                templateUrl: 'maintenance/contents/main.html',
                controller: 'MaintenanceCtrl'
            }
        }
    })

    .state('main.maintenance.sub', {
        cache: false,
        url: '/gtask/:id',
        params: {
            sid: null
        },
        views: {
            'main-content@main': {
                // templateUrl: 'maintenance/contents/main-sub.html',
                templateUrl: function($stateParams) {
                    var name = $stateParams.id;
                    if ($stateParams.sid) {
                        name += "-" + $stateParams.sid;
                    }

                    return 'maintenance/contents/main-sub--' + name + '.html';
                },
                controller: 'MaintenanceSubCtrl as vm'
            }
        }
    })

    .state('main.maintenance.sub.task', {
        url: '/task/:taskid',
        views: {
            'main-content@main': {
                templateUrl: function($stateParams) {
                    return 'maintenance/contents/main-sub-' + $stateParams.taskid + '.html';
                },
                controller: 'MaintenanceSubCtrl as vm'
            }
        }
    })

    .state('main.maintenance.sub.note2', {
        url: '/note',
        views: {
            'main-content@main': {
                templateUrl: 'maintenance/contents/main.addnote.html',
                controller: 'MaintenanceNoteCtrl as vm'
            }
        }
    })

    .state('main.maintenance.sub.note', {
        url: '/note',
        views: {
            'main-content@main': {
                templateUrl: 'maintenance/contents/main.newnote.html',
                controller: 'MaintenanceNewNoteCtrl as vm'
            }
        }
    })

    .state('main.maintenance.summary', {
        cache: false,
        url: '/summary',
        views: {
            'main-content@main': {
                templateUrl: 'maintenance/contents/main.summary.html',
                controller: "MaintenanceSummaryCtrl as vm"
            }
        }
    })

    .state('main.maintenance.summary.detail', {
        cache: false,
        url: '/detail',
        params: {
            note: null
        },
        views: {
            'main-content@main': {
                templateUrl: 'maintenance/contents/main.summary.detail.html',
                controller: "MaintenanceSummaryDetailCtrl as vm"
            }
        }
    })

    .state('main.maintenance.summary.task', {
        cache: false,
        url: '/:taskId',
        views: {
            'main-content@main': {
                templateUrl: 'maintenance/contents/main.summary.task.html',
                controller: "MaintenanceSummaryTaskCtrl as vm"
            }
        }
    });
}])

.controller('MaintenanceSummaryDetailCtrl', ["$q", "$scope", "$state", "$stateParams", "MaintenanceService", "AudioMedia", "Utils", "AuthService", function($q, $scope, $state, $stateParams, MaintenanceService, AudioMedia, Utils, AuthService) {
    var vm = this;
    vm.notes = [];

    vm.deleteNote = _deleteNote;
    vm.forwardEmail = _forwardEmail;
    activate();

    ////////////////
    function activate() {
        var promises = [];
        return $q.all(promises).then(function() {
            vm.note = $stateParams.note;
            console.log(vm.note)
        });
    }

    function _deleteNote(note) {
        confirm('Are you sure to delete this note? Continue').then(function() {
            MaintenanceService.deleteNote(note);
            navigateTo(".^");
        })
    }

    function _forwardEmail(note) {

        if (!Utils.checkPlugin('email')) return;

        // check if device has email account set
        // need to set cordova.plugins.email.permission.GET_ACCOUNTS for android
        cordova.plugins.email.hasAccount(function(isAvailable) {
            if (!isAvailable) {
                alert("Email is not available. Please check your email under phone's setting");
                return;
            }

            confirm('Note including image/voice file will be forwarded via email. Do you want to continue?').then(cbSend);
        });

        function cbSend() {
          var subject = note.subject + " (#" + note.id + ")";
          var text = null, medias = null;

          note.items.forEach(function(item) {
            if (item.type === "TEXT") {
              text = item;
            } else if (item.type === "PICTURE" || item.type === "AUDIO") {
              if (medias == null) medias = [];
              medias.push(item.content);
            }
          });

          var emailProps = {
              // to:      'smart.drrp@gmail.com',
              // bcc:     ['hsl16@pitt.edu', 'dad5@pitt.edu'],
              subject: subject,
              isHtml: true
          };

          var body = "Hi,<br><br>\
          Following is my note.";

          if (text != null) body += '<br><br>' + text.content;

          if (medias != null) {
            body += '<br><br>Please find out more in the attachment.';
            emailProps.attachments = medias;
          }

          //add user info
          var authData = AuthService.get();
          if (authData.account) {
            body += '<br><br>' + authData.account.username + '<br>' + authData.account.email;
          }

          emailProps.body = body;

          cordova.plugins.email.open(emailProps);
        }
    }

}])

.controller('MaintenanceNewNoteCtrl', ["$q", "$scope", "$timeout", "$state", "$stateParams", "MaintenanceService", "AudioMedia", function($q, $scope, $timeout, $state, $stateParams, MaintenanceService, AudioMedia) {
    var vm = this;
    var initializing = true;
    vm.toggle = {};


    activate();

    ////////////////
    function activate() {
        var promises = [_prepare()];
        return $q.all(promises).then(function() {

            // $scope.$watch(function() {return vm.note.items}, function(value) {
            //   console.log("watch triggered");
            //   if (initializing) {
            //     $timeout(function() { initializing = false; });
            //   } else {
            //     vm.changed = true;
            //   }

            // }, true);
        });
    }

    function _prepare() {
        var item = MaintenanceService.getItem($stateParams.id);
        vm.note = MaintenanceService.createNote(item);
        vm.note.items.forEach(function(item) {
            vm.toggle[item.id] = true;
        });
        vm.changed = true;
    }

    vm.getAudio = function(item) {
        MaintenanceService.getAudio(item, { duration: 30 });
    }

    vm.getPicture = function(item) {
        MaintenanceService.getPicture(item);
    }

    vm.save = function(note) {
        MaintenanceService.saveNote(note).then(function() {
            navigateTo(".^");
        });


    }
}])

.controller('MaintenanceNoteCtrl', ["$q", "$scope", "$timeout", "$state", "$stateParams", "MaintenanceService", "AudioMedia", function($q, $scope, $timeout, $state, $stateParams, MaintenanceService, AudioMedia) {
    var vm = this;
    var initializing = true;
    vm.toggle = {};

    // vm.note = {
    //   items: [
    //     {type: 'TEXT'},
    //     {type: 'AUDIO'},
    //     {type: 'PICTURE'},
    //   ]
    // }
    //

    activate();

    ////////////////
    function activate() {
        var promises = [_prepare()];
        return $q.all(promises).then(function() {

            $scope.$watch(function() { return vm.note.items }, function(value) {
                console.log("watch triggered");
                if (initializing) {
                    $timeout(function() { initializing = false; });
                } else {
                    vm.changed = true;
                }

            }, true);
        });
    }

    function _prepare() {
        var item = MaintenanceService.getItem($stateParams.id);
        vm.item = item;
        console.log($stateParams.id, item)
        vm.note = MaintenanceService.getNote(item);
        vm.itWasAvail = vm.note.items.length > 0;
        vm.changed = false;
        vm.note.items.forEach(function(item) {
            vm.toggle[item.id] = false;
        });
        // var subTask = _.find(item.tasks, function(item) {
        //   return item.id === $stateParams.taskid;
        // });

        // vm.task = subTask;
        // vm.note = MaintenanceService.newNote(vm.task);
    }

    vm.addText = function() {
        var note = MaintenanceService.addTextNote();
        console.log(note);
        vm.note.items.push(note);
        console.log(vm.note);
        vm.changed = true;
    }

    vm.addAudio = function() {
        var note = MaintenanceService.addAudioNote();
        console.log(note);
        vm.note.items.push(note);
        console.log(vm.note);
        vm.changed = true;
    }

    vm.addPicture = function() {
        var note = MaintenanceService.addPictureNote();
        console.log(note);
        vm.note.items.push(note);
        console.log(vm.note);
        vm.changed = true;
    }

    vm.getAudio = function(item) {
        MaintenanceService.getAudio(item, { duration: 30 });
    }

    vm.getPicture = function(item) {
        MaintenanceService.getPicture(item);
    }

    vm.save = function(note) {
        MaintenanceService.saveNote(note).then(function() {
            console.log(arguments);
            vm.changed = false;
        });


    }

    vm.deleteNote = function(item) {
        confirm("Are you sure to delete this note?").then(function() {
            MaintenanceService.deleteNoteItem(vm.note, item);
        })
    }

}])


.controller('MaintenanceSummaryTaskCtrl', ["$q", "$scope", "$state", "$stateParams", "MaintenanceService", "AudioMedia", function($q, $scope, $state, $stateParams, MaintenanceService, AudioMedia) {
    var vm = this;
    vm.notes = [];

    vm.showNote = _showNote;

    activate();

    ////////////////
    function activate() {
        var promises = [_getNoteList()];
        return $q.all(promises).then(function() {});
    }

    function _getNoteList() {
        var tasks = MaintenanceService.getTasks();
        var notes = MaintenanceService.getNotes();

        notes = _.groupBy(notes, function(note) {
            return note.task.id;
        });

        var task = _.find(tasks, function(task) {
            return task.id == $stateParams.taskId;
        });

        vm.title = (task || { title: "Notes" }).title;
        vm.notes = notes[$stateParams.taskId] || [];

        return vm.notes;
    }

    function _showNote(note) {
        if (note.type == "TEXT") {
            MaintenanceService.openTextNote($scope, null, note).then(function() {
                $state.reload();
            });
        } else if (note.type == "PICTURE") {
            MaintenanceService.openPictureNote($scope, null, note).then(function() {
                $state.reload();
            });
        } else if (note.type == "AUDIO") {
            MaintenanceService.openAudioNote($scope, null, note).then(function() {
                $state.reload();
            });
        }
    }

}])

.controller('MaintenanceSummaryCtrl', ["$q", "$scope", "MaintenanceService", function($q, $scope, MaintenanceService) {
    var vm = this;
    vm.list = [];

    activate();

    ////////////////
    function activate() {
        var promises = [_getNotes()];
        return $q.all(promises).then(function() {});
    }

    function _getNotes() {
        vm.notes = MaintenanceService.getNotes();
        console.log(vm.notes);
        vm.notes.forEach(function(note) {
            note.label = new Date(note.id);
        });

        return vm.notes;
    }

    function _getTaskList() {
        var list = MaintenanceService.getTasks();
        var notes = MaintenanceService.getNotes();

        notes = _.countBy(notes, function(note) {
            return note.task.id;
        })

        list.forEach(function(task) {
            task.numNotes = notes[task.id] ? notes[task.id] : 0;
        })

        vm.list = list;

        return vm.list;
    }

}])


.controller('MaintenanceCtrl', ["$scope", "MaintenanceService", "TodoService", "StringTemplate", function($scope, MaintenanceService, TodoService, StringTemplate) {

    activate();

    //////////////////////////
    function activate() {
        _init();

        if (!MaintenanceService.isCautionMaintenancePopedUp()) {
            MaintenanceService.openCautionMaintenance();
            MaintenanceService.setCautionMaintenancePopeUp(true);
        }
    }

    function _init() {}

    $scope.list = MaintenanceService.getItems();

    $scope.addSchedule = function(item) {
        var event = TodoService.new();
        event.title = item.title;
        event.description = StringTemplate.MA_SCHEDULE_DESC_DEFAULT;

        TodoService.openForm($scope, event)
            .then(function(event) {

            })
    }
}])

.controller('MaintenanceSubCtrl', ["$rootScope", "$scope", "$stateParams", "MaintenanceService", function($rootScope, $scope, $stateParams, MaintenanceService) {
    var vm = this;
    // vm.map = {
    //     "frame": {id: 'menu02', sid: 'frame'},
    //     "wheels": {id: 'menu02', sid: 'wheel-hardware'},

    // }

    vm.openGroup = function(selected, params) {
        vm.selected = selected;
        navigateTo('^.sub', params);
    };

    // vm.openGroup = function(data) {
    //     navigateTo('.features.page', data.params);
    // };

    //   $scope.item = MaintenanceService.getItem($stateParams.id);
    // This is for worksheet menu with three different action
    // $scope.ask4Action = function() {
    //   var subTask = _.find($scope.item.tasks, function(item) {
    //     return item.id === $stateParams.taskid;
    //   });

    //   MaintenanceService.askAction(subTask);
    // }
    $scope.data = MaintenanceService.getChecklist();

    // Immediately move to note page with all three different action
    $scope.ask4Action = function() {
        // MaintenanceService.askAction(subTask);
        // navigateTo('.note', {taskid: $stateParams.taskid});
    }
    $scope.showNote = function() {
        // MaintenanceService.askAction(subTask);
        navigateTo('.note');
    }

    $scope.updateData = function(data) {
            MaintenanceService.setChecklist(data);
        }
        // $scope.ytReady = { player0: false};
        // var _players = [];

    // $scope.onYTReady = function(event, idx) {
    //   _players.push(event.target);
    //   $scope.ytReady[idx] = true;
    // }

    // $scope.onSlideChange = function($index) {
    //   var currentPlayer;
    //   _players.forEach(function(player) {
    //     if(player.getPlayerState() === YT.PlayerState.PLAYING) {
    //       player.pauseVideo();
    //     }
    //   })
    //   // $youtubePlayerDelegate._instances.forEach(function(instance) {
    //   //   var player = instance.getPlayer();
    //   //   if(player.getPlayerState() === YT.PlayerState.PLAYING) {
    //   //     player.pauseVideo();
    //   //   }

    //   //   if(player.$$delegateHandle === 'player'+$index) {
    //   //     currentPlayer = player;
    //   //   }
    //   // });

    // }
}])

;

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.MaintenanceService
 * @description
 * # MaintenanceService
 * Service in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('MaintenanceService', ["$rootScope", "$q", "System", "StorageService", "$ionicPopup", "$ionicActionSheet", "Multimedia", "$cordovaCapture", "$log", "AudioCapture", "$cordovaFile", "Utils", "$timeout", "MaintenanceStore", function($rootScope, $q, System,
    StorageService, $ionicPopup, $ionicActionSheet,
    Multimedia, $cordovaCapture, $log, AudioCapture,
    $cordovaFile, Utils, $timeout,
    MaintenanceStore) {

    var listMenu = [{
            "id": "menu01",
            "title": "Weekly Inspections",
            "tasks": [
                { "id": "task0101", "title": "Tire pressure", "altId": 'tire_pressure' },
                { "id": "task0102", "title": "Cushion cover and insert", "altId": 'cushion_cover_insert' }
            ]
        },
        {
            "id": "menu02",
            "title": "Monthly Inspections",
            "tasks": [
                { "id": "task0201", "title": "Nuts and bolts missing or loose", "altId": "" },
                { "id": "task0202", "title": "Tire condition", "altId": "tire_condition" },
                { "id": "task0203", "title": "Bearing condition", "altId": "bearing_condition" },
                { "id": "task0204", "title": "Spoke tension", "altId": "spoke_tension" },
                { "id": "task0205", "title": "Wheel alignment", "altId": "wheel_alignment" },
                { "id": "task0206", "title": "Wheel axles", "altId": "" },
                { "id": "task0207", "title": "Wheel locks", "altId": "wheel_locks" },
                { "id": "task0208", "title": "Handrims", "altId": "handrims" },
                { "id": "task0209", "title": "Casters", "altId": "casters" },
                { "id": "task0210", "title": "Anti-tippers", "altId": "" },
                { "id": "task0211", "title": "Footrests", "altId": "footrests" },
                { "id": "task0212", "title": "Armrests", "altId": "armrests" },
                { "id": "task0213", "title": "Backrest", "altId": "backrest" },
                { "id": "task0214", "title": "Seat base", "altId": "" },
                { "id": "task0215", "title": "Clothing guards", "altId": "" },
                { "id": "task0216", "title": "Frame", "altId": "" },
                { "id": "task0217", "title": "Folding mechanism", "altId": "folding_mechanism" },
                { "id": "task0218", "title": "Suspension elements", "altId": "" }
            ]
        },
        {
            "id": "menu03",
            "title": "Monthly Actions",
            "tasks": [
                { "id": "task0301", "title": "Wipe down wheelchair frame", "altId": "" },
                { "id": "task0302", "title": "Clean caster axels", "altId": "" },
                { "id": "task0303", "title": "Clean quick-release wheelchair-axle housing", "altId": "" }
            ]
        },
        {
            "id": "menu04",
            "title": "Daily Actions",
            "tasks": [
                { "id": "task0401", "title": "Lubricate moving parts", "altId": "" }
            ]
        },
        {
            "id": "menu05",
            "title": "Yearly Actions",
            "tasks": [
                { "id": "task0501", "title": "Have wheelchair professional serviced", "altId": "" }
            ]
        }
    ];

    /*

      notes: [
        {
          "type": "<type>", --> text, audio, photo
          "timestamp": "<datetime>",
          "task": "<taskid>",
          "content": "depend on type"
        }
      ]

    */
    var _scheme = {
        notes: [],
        checklist: {}
    };

    var _schemeTemplate = {
        note: {
            id: null,
            task: null,
            subject: null,
            items: [],
            createdAt: null
        },
        noteItem: {
            id: null,
            type: null,
            content: null,
        },

        newNote: function(task) {
            var note = angular.copy(this.note);
            note.createdAt = new Date();
            note.task = {};
            note.task.id = task.id;
            note.task.title = task.title;

            return note;
        },

        newRegularNote: function(id) {
            var note = angular.copy(this.note);
            note.id = id;
            note.createdAt = new Date();
            return note;
        },

        newNoteItem: function(type) {
            var item = angular.copy(this.noteItem);
            item.id = (new Date()).getTime();

            if (type === "TEXT") {
                item.type = "TEXT";
            } else if (type === "AUDIO") {
                item.type = "AUDIO";
            } else if (type === "PICTURE") {
                item.type = "PICTURE";
            }

            return item;
        },
        // note: {
        //  id: null,
        //  type: null,
        //  task: null,
        //  content: null,
        //  mediaURI: null
        // },
        // new: function(type) {
        //   var note = angular.copy(this.note);
        //   note.createdAt = new Date();

        //   if (type === "TEXT") {
        //     note.type = "TEXT";
        //   } else if (type === "AUDIO") {
        //     note.type = "AUDIO";
        //   } else if (type === "PICTURE") {
        //     note.type = "PICTURE";
        //   }

        //   return note;
        // }
    };

    var _cache = null;

    var service = {

        get: function(force) {
            var self = this,
                db;

            if (force || _cache == null) {
                db = StorageService.get();
                if (!db.maintenance) {
                    db.maintenance = angular.copy(_scheme);
                    StorageService.set(db);
                }
                _cache = db.maintenance;
            }

            return _cache;
        },

        set: function(data) {
            var self = this,
                db;

            db = StorageService.get();
            angular.extend(db.maintenance, data);
            StorageService.set(db);

            _cache = db.maintenance;
        },


        getChecklist: function() {
            var data = this.get();
            return data.checklist;
        },

        setChecklist: function(checklist) {
            var data = this.get();
            data.checklist = angular.copy(checklist);
            this.set(data);
        },

        getNotes: function() {
            var self = this,
                notes;
            notes = MaintenanceStore.getNotes();

            return notes;
        },

        getNote: function(item) {
            var self = this,
                notes, note;
            notes = self.getNotes();
            if (notes[item.id]) {
                return notes[item.id];
            } else {
                note = _schemeTemplate.newRegularNote(item.id);
                note.task = item.title;
                notes[item.id] = note;
                MaintenanceStore.setNotes(notes);
                return note;
            }
        },

        createNote: function(item) {
            var id = (new Date()).getTime();
            var note = _schemeTemplate.newRegularNote(id);
            note.task = item.title;
            note.subject = item.title;
            note.items.push(this.addTextNote());
            note.items.push(this.addPictureNote());
            note.items.push(this.addAudioNote());
            return note;
        },


        // saveNote: function(note) {
        //   var self = this, local;
        //   local = self.get();

        //   if(!note.id) {
        //     note.id =  (new Date()).getTime();
        //     local.notes.push(note);
        //   } else {
        //     var idx = _.findIndex(local.notes, {id: note.id});
        //     if(idx < 0) return null;
        //     // remove 1 record at index idx, and insert note at idx position
        //     local.notes.splice(idx, 1, note);
        //   }

        //   self.set(local);
        // },

        deleteNote2: function(id) {
            var q = $q.defer();
            var self = this,
                local;
            local = self.get();

            $timeout(function() {

                var idx = _.findIndex(local.notes, function(note) {
                    return note.id == id;
                });

                if (idx > -1) {
                    var note = local.notes[idx];

                    if (note.mediaURI) {
                        var path = Utils.getPath(note.mediaURI);
                        var fname = Utils.getFilename(note.mediaURI);
                        $cordovaFile.removeFile(path, fname).then(function(result) {
                            console.log("remove success");
                            console.log(result.fileRemoved.nativeURL);

                            _delete();

                        }, function(error) {
                            console.log("remove file failed: " + path + fname);
                            console.log(error);

                            if (error.code == 1) { //NOT_FOUND_ERR
                                _delete();

                            } else {
                                q.reject(error);
                            }
                        });
                    } else {
                        _delete();
                    }

                }

                /////////////////////////
                function _delete() {
                    local.notes.splice(idx, 1);
                    self.set(local);

                    q.resolve()
                }
            }, 1);

            return q.promise;
        },

        reset: function() {
            this.set(_scheme);
        },

        getItems: function() {
            return listMenu;
        },

        getTasks: function() {
            var list = listMenu.map(function(item) {
                return item.tasks;
            });

            list = _.flattenDeep(list);
            return list;
        },

        getItem: function(id) {
            return _.find(listMenu, { id: id });
        },

        newNote: function(task) {
            var note = _schemeTemplate.newNote(task);
            return note;
        },

        addTextNote: function(note) {
            var self = this;
            var textNote = _schemeTemplate.newNoteItem('TEXT');
            // note.items.push(textNote);
            return textNote;
        },

        addAudioNote: function(note) {
            var self = this;
            var audioNote = _schemeTemplate.newNoteItem('AUDIO');
            // note.items.push(audioNote);
            return audioNote;
        },

        getAudio: function(item, options) {
            Multimedia.getAudio(options).then(cbGotAudio);

            /////////////////////
            function cbGotAudio(audioFileURI) {
                if (item.content) {
                    //remove existing one
                    Multimedia.deleteMedia(item.content).then(null, function() {
                        console.log("Delete '" + item.content + "' error");
                    });
                }

                item.content = audioFileURI;
            }
        },

        addPictureNote: function(note) {
            var self = this;
            var picNote = _schemeTemplate.newNoteItem('PICTURE');
            // note.items.push(picNote);
            return picNote;
        },

        getPicture: function(item) {
            var sheet = $ionicActionSheet.show({
                buttons: [{
                    text: 'Photo Library'
                }, {
                    text: 'Camera'
                }],
                cancelText: 'Cancel',
                cancel: function() {},
                buttonClicked: function(index) {
                    switch (index) {
                        case 0:
                            Multimedia.getPictureFromLibrary().then(cbGotPicture);
                            break;
                        case 1:
                            Multimedia.getPictureFromCamera().then(cbGotPicture);
                            break;
                    }
                    return true;

                    function cbGotPicture(pictureURI) {
                        if (item.content) {
                            //remove existing one
                            Multimedia.deleteMedia(item.content).then(null, function() {
                                console.log("Delete '" + item.content + "' error");
                            });
                        }

                        item.content = pictureURI;
                    }
                }
            });
        },

        saveNote: function(note) {
            var defer = $q.defer();
            var self = this,
                notes;
            var failedFlag = false;
            var promises = [];
            notes = this.getNotes();

            note = angular.copy(note);

            if (!Array.isArray(note.items)) {
                note.items = [];
            }

            //save multimedia if exist
            // var index = note.items.length - 1;
            // while (index >= 0) {
            //     var item = note.items[index];
            //     var promise;

            //     if (!item.content) {
            //         note.items.splice(index, 1);
            //         index--;
            //         continue;
            //     }

            //     if (item.type == "AUDIO") {
            //         promise = Multimedia.saveMedia({
            //             entryURI: item.content,
            //             dirPath: "notes",
            //             filePrefix: 'audio'
            //         });//.then(cbSaveNote, cbFailMedia);
            //     } else if (item.type == "PICTURE") {
            //         promise = Multimedia.saveMedia({
            //             entryURI: item.content,
            //             dirPath: "notes",
            //             filePrefix: 'picture'
            //         });//.then(cbSaveNote, cbFailMedia);
            //     } else {
            //         promise = $q.resolve();
            //     }

            //     promises.push(promise);
            //     index -= 1;
            // }
            //save multimedia if exist
            for (var i = 0; i < note.items.length; i++) {
              var item = note.items[i];
              var promise;

              if (_.isEmpty(item.content)) {
                promise = $q.reject();

              } else if (item.type == "AUDIO") {
                promise = Multimedia.saveMedia({
                    entryURI: item.content,
                    dirPath: "notes",
                    filePrefix: 'audio'
                });

              } else if (item.type == "PICTURE") {
                promise = Multimedia.saveMedia({
                    entryURI: item.content,
                    dirPath: "notes",
                    filePrefix: 'picture'
                });

              } else {
                promise = $q.resolve(item.content);

              }

              promises.push(promise);
            }


            // Using reflect to make sure all the promise done, whether resolve or reject
            $q.all(promises.map(Utils.reflect)).then(function(allResult) {

                var index = allResult.length - 1;
                while (index >= 0) {
                    var result = allResult[index];

                    if (result.status == 'rejected') {
                        var error = result.e;
                        // console.log(result);

                        if (!_.isEmpty(note.items[index].content)) {
                            failedFlag = true;
                            console.log(error);
                        }

                        note.items.splice(index, 1);

                    } else {
                        var content = result.v;
                        note.items[index].content = content;

                    }

                    index -= 1;
                }

                notes.push(note);
                MaintenanceStore.setNotes(notes);

                if (failedFlag) {
                    alert("Some multimedia data cannot be saved").then(function() {
                        defer.resolve(note);
                    });
                } else {
                    alert("Note Saved").then(function() {
                        defer.resolve(note);
                    });
                }
            })

            return defer.promise;

            ///////
            // function cbSaveNote(mediaURI) {
            //     item.content = mediaURI;
            // }

            // function cbFailMedia(error) {
            //     failedFlag = true;
            //     note.items.splice(i, 1);
            //     console.log(error);
            // }
        },

        // saveNote: function(note) {
        //   var defer = $q.defer();
        //   var self = this, local;
        //   var failedFlag = false;
        //   var promises = [];
        //   local = self.get();

        //   if(!note.id) {
        //     note.id =  (new Date()).getTime();

        //     //save multimedia if exist
        //     for (var i = 0; i < note.items.length; i++) {
        //       var item = note.items[i];
        //       var promise;
        //       if (item.type == "AUDIO") {
        //         promise = Multimedia.saveMedia({
        //           entryURI: item.content,
        //           dirPath: "notes",
        //           filePrefix: 'audio'
        //         }).then(cbSaveNote, cbFailMedia);
        //       } else if (item.type == "PICTURE") {
        //         promise = Multimedia.saveMedia({
        //           entryURI: item.content,
        //           dirPath: "notes",
        //           filePrefix: 'picture'
        //         }).then(cbSaveNote, cbFailMedia);
        //       } else {
        //         var def = $q.defer();
        //         promise = def.promise;
        //         def.resolve();
        //       }

        //       promises.push(promise);
        //     }

        //     // Using reflect to make sure all the promise done, whether resolve or reject
        //     $q.all(promises.map(Utils.reflect)).then(function(data) {
        //       local.notes.push(note);
        //       self.set(local);

        //       if (failedFlag) {
        //         alert ("Some multimedia data cannot be saved").then(function() {
        //           defer.resolve(data);
        //         });
        //       } else {
        //         alert ("Save note success").then(function() {
        //           defer.resolve(data);
        //         });
        //       }
        //     })

        //   }
        //   // else {
        //   //   var idx = _.findIndex(local.notes, {id: note.id});
        //   //   if(idx < 0) return null;
        //   //   // remove 1 record at index idx, and insert note at idx position
        //   //   local.notes.splice(idx, 1, note);
        //   // }

        //   return defer.promise;

        //     ///////
        //     function cbSaveNote(mediaURI) {
        //         item.content = mediaURI;
        //     }

        //     function cbFailMedia(error) {
        //         failedFlag = true;
        //         note.items.splice(i, 1);
        //     }
        // },

        deleteNote: function(note) {
            var notes = this.getNotes();
            var idx = _.findIndex(notes, { id: note.id });
            if (idx < 0) return null;

            note.items.forEach(function(item) {
              //remove media if type is media
              if (item.type == "AUDIO" || item.type == "PICTURE") {
                  if (item.content) {
                      Multimedia.deleteMedia(item.content).then(null, function() {
                          console.log("Delete '" + item.content + "' error");
                      });
                  }
              }
            })

            // remove 1 record at index idx, and insert note at idx position
            notes.splice(idx, 1);
            MaintenanceStore.setNotes(notes);
            return true;
        },

        deleteNoteItem: function(note, item) {
            var idx = _.findIndex(note.items, { id: item.id });
            if (idx < 0) return null;

            //remove media if type is media
            if (item.type == "AUDIO" || item.type == "PICTURE") {
                if (item.content) {
                    Multimedia.deleteMedia(item.content).then(null, function() {
                        console.log("Delete '" + item.content + "' error");
                    });
                }
            }

            // remove 1 record at index idx, and insert note at idx position
            note.items.splice(idx, 1);
        },

        askAction: function(task) {
            var self = this;

            var sheet = $ionicActionSheet.show({
                buttons: [{
                    text: 'Text Note'
                }, {
                    text: 'Audio Note'
                }, {
                    text: 'Picture Note'
                }],
                cancelText: 'Cancel',
                cancel: function() {},
                buttonClicked: function(index) {

                    switch (index) {
                        case 0:
                            // alert('Should jump to Text Note');
                            self.openTextNote($rootScope.$new(), task);
                            break;
                        case 1:
                            // alert('Should jump to Audio Note');
                            self.openAudioNote($rootScope.$new(), task, null, { duration: 30 });
                            break;
                        case 2:
                            // alert('Should jump to Picture Note');
                            self.openPictureNote($rootScope.$new(), task);
                            break;
                    }

                    return true;
                }
            });

        },

        openTextNote: function($scope, task, note) {
            var self = this;
            var defer = $q.defer();
            var modalView;

            System.getModalPage("maintenance/contents/modal-note-text.form.html", $scope)
                .then(function(page) {
                    page.show();

                    modalView = angular.element(document.getElementsByClassName('modal'));
                });

            if (!note) {
                note = _schemeTemplate.newNoteItem("TEXT");
                // note.task = {};
                // note.task.id = task.id;
                // note.task.title = task.title;
            }

            // assign note to the scope
            $scope.note = note;

            $scope.cancel = function() {
                $scope.page.close();
                defer.reject();
            }

            $scope.save = function(note) {
                var isNew = note.id ? false : true;
                note = self.saveNote(note);

                if (isNew)
                    alert("A new note has been added.").then(cbSuccess);
                else
                    alert("A note has been updated.").then(cbSuccess);

                //////////////////
                function cbSuccess() {
                    defer.resolve(note);
                    $scope.page.close();
                }
            }

            $scope.delete = function(note) {
                confirm("This action will delete the note. Continue ?").then(cbSuccess);

                function cbSuccess() {
                    self.deleteNote(note.id).then(function() {
                        _alertResolve("note removed");
                    }, function() {
                        _alertResolve("remove note failed");
                    })
                }

                function _alertResolve(msg) {
                    alert(msg).then(function() {
                        defer.resolve(note);
                        $scope.page.close();
                    })
                }
            }

            return defer.promise;
        },

        openPictureNote: function($scope, task, note) {
            var self = this;
            var defer = $q.defer();
            var modalView;

            System.getModalPage("maintenance/contents/modal-note-picture.form.html", $scope)
                .then(function(page) {
                    page.show();

                    modalView = angular.element(document.getElementsByClassName('modal'));
                });

            if (!note) {
                note = _schemeTemplate.newNoteItem("PICTURE");
                note.task = {};
                note.task.id = task.id;
                note.task.title = task.title;
            }

            // assign note to the scope
            $scope.note = note;
            $scope.tmpPictureURI = note.mediaURI;

            $scope.getPicture = function() {
                var sheet = $ionicActionSheet.show({
                    buttons: [{
                        text: 'Photo Library'
                    }, {
                        text: 'Camera'
                    }],
                    cancelText: 'Cancel',
                    cancel: function() {},
                    buttonClicked: function(index) {
                        switch (index) {
                            case 0:
                                Multimedia.getPictureFromLibrary().then(cbGotPicture);
                                break;
                            case 1:
                                Multimedia.getPictureFromCamera().then(cbGotPicture);
                                break;
                        }
                        return true;

                        function cbGotPicture(pictureURI) {
                            $scope.tmpPictureURI = pictureURI;
                        }
                    }
                });
            }

            $scope.cancel = function() {
                $scope.page.close();
                defer.reject();
            }

            $scope.save = function(note) {
                var isNew = note.id ? false : true;

                if (note.mediaURI !== $scope.tmpPictureURI) {

                    Multimedia.saveMedia({
                        entryURI: $scope.tmpPictureURI,
                        dirPath: "notes",
                        filePrefix: 'picture'
                    }).then(cbSaveNote, cbFailSaveMedia);

                } else {
                    cbSaveNote(null);
                }

                /////////////
                function cbSaveNote(mediaURI) {
                    if (mediaURI) {
                        note.mediaURI = mediaURI;
                    }

                    note = self.saveNote(note);

                    if (isNew)
                        alert("A new note has been added.").then(cbSuccess);
                    else
                        alert("A note has been updated.").then(cbSuccess);

                    //////////////////
                    function cbSuccess() {
                        defer.resolve(note);
                        $scope.page.close();
                    }
                }

                function cbFailSaveMedia(error) {
                    alert("Saving picture note failed");
                    defer.reject(error);
                }
            }

            $scope.delete = function(note) {
                confirm("This action will delete the note. Continue ?").then(cbSuccess);

                function cbSuccess() {
                    self.deleteNote(note.id).then(function() {
                        _alertResolve("note removed");
                    }, function() {
                        _alertResolve("remove note failed");
                    })
                }

                function _alertResolve(msg) {
                    alert(msg).then(function() {
                        defer.resolve(note);
                        $scope.page.close();
                    })
                }
            }

            return defer.promise;

        },

        openAudioNote: function($scope, task, note, options) {
            var self = this;
            var defer = $q.defer();
            var modalView;

            System.getModalPage("maintenance/contents/modal-note-audio.form.html", $scope)
                .then(function(page) {
                    page.show();

                    modalView = angular.element(document.getElementsByClassName('modal'));
                });

            if (!note) {
                note = _schemeTemplate.newNoteItem("AUDIO");
                note.task = {};
                note.task.id = task.id;
                note.task.title = task.title;
            }

            // assign note to the scope
            $scope.note = note;
            $scope.tmpAudioURI = note.mediaURI;

            $scope.getAudio = function() {

                Multimedia.getAudio(options).then(cbGotAudio);

                /////////////////////
                function cbGotAudio(audioFileURI) {
                    console.log(audioFileURI);
                    $scope.tmpAudioURI = audioFileURI;
                }
            }

            $scope.cancel = function() {
                $scope.page.close();
                defer.reject();
            }

            $scope.save = function(note) {
                var isNew = note.id ? false : true;

                if (note.mediaURI !== $scope.tmpAudioURI) {

                    Multimedia.saveMedia({
                        entryURI: $scope.tmpAudioURI,
                        dirPath: "notes",
                        filePrefix: 'audio'
                    }).then(cbSaveNote, cbFailSaveMedia);

                } else {
                    cbSaveNote(null);
                }

                /////////////
                function cbSaveNote(mediaURI) {
                    if (mediaURI) {
                        note.mediaURI = mediaURI;
                    }

                    note = self.saveNote(note);

                    if (isNew)
                        alert("A new note has been added.").then(cbSuccess);
                    else
                        alert("A note has been updated.").then(cbSuccess);

                    //////////////////
                    function cbSuccess() {
                        defer.resolve(note);
                        $scope.page.close();
                    }
                }

                function cbFailSaveMedia(error) {
                    alert("Saving audio note failed");
                    defer.reject(error);
                }
            }

            $scope.delete = function(note) {
                confirm("This action will delete the note. Continue ?").then(cbSuccess);

                function cbSuccess() {
                    self.deleteNote(note.id).then(function() {
                        _alertResolve("note removed");
                    }, function() {
                        _alertResolve("remove note failed");
                    })
                }

                function _alertResolve(msg) {
                    alert(msg).then(function() {
                        defer.resolve(note);
                        $scope.page.close();
                    })
                }
            }

            return defer.promise;

        },

        isCautionMaintenancePopedUp: _isCautionMaintenancePopedUp,
        setCautionMaintenancePopeUp: _setCautionMaintenancePopeUp,
        openCautionMaintenance: _openCautionMaintenance

    };

    $rootScope.$on("auth:authenticated", function() {
        service.setCautionMaintenancePopeUp(false);
    });

    return service;
    /////////////////////////

    function _openCautionMaintenance() {
        var msg = "This section provides checklists and information of maintenance that are appropriate to be performed by the user. " +
            "The goal is to identify problems early to prevent accidents and injuries. \n\n" +
            "If problems are identified, please contact your supplier.";

        alert(msg);
    }

    function _setCautionMaintenancePopeUp(status) {
        var localData = this.get();
        localData.cautionMaintenance = status;
        this.set(localData);
    }

    function _isCautionMaintenancePopedUp() {
        var localData = this.get();
        if (localData.cautionMaintenance == undefined) {
            localData.cautionMaintenance = false;
            this.set(localData);
        }
        return localData.cautionMaintenance;
    }

}]);
(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
    	.factory('MaintenanceStore', storeFn); 
      
    storeFn.$inject = ['$q', '$log', 'StorageService'];

    /* @ngInject */
    function storeFn($q, $log, StorageService) {      
        var _id = "maintenance";
        
        /**
         * Inherit functionality from AppStore,
         * Modified only the store id
         */
        var store = angular.copy(StorageService);
        store.id = _id; 
        
        store.getNotes = _getNotes;
        store.setNotes = _setNotes;

        return store;
        
        /////////
        function _getNotes() {
            var notes = store.getValue("notes");
            if (!notes) {
                notes = [];
                store.setValue("notes", notes);
            }
            
            return notes;            
        }

        function _setNotes(notes) {
            store.setValue("notes", notes);
        }     
    }    
})();
(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("TireCheckAndPatchModalController", Controller)
        .factory('TireCheckAndPatchModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('maintenance/modal/tirecheckandpatch.html', 'TireCheckAndPatchModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;
        $scope.players = {};

        activate();
        /////////////////////
        function activate() {

        }

        vm.onSlideChange = function($index) {

            if (_.isEmpty($scope.players)) return;

            _.forOwn($scope.players, function(player, key) {
                console.log(key, player.currentState);
                if(player.currentState === 'playing') {
                    player.pauseVideo();
                }
            });
        }
    }


})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("TireHowToPatchModalController", Controller)
        .factory('TireHowToPatchModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('maintenance/modal/tirehowtopatch.html', 'TireHowToPatchModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;
        $scope.players = {};

        activate();
        /////////////////////
        function activate() {

        }

        vm.onSlideChange = function($index) {
            if (_.isEmpty($scope.players)) return;

            _.forOwn($scope.players, function(player, key) {
                console.log(key, player.currentState);
                if(player.currentState === 'playing') {
                    player.pauseVideo();
                }
            });
        }
    }


})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("TireReplaceModalController", Controller)
        .factory('TireReplaceModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('maintenance/modal/tirereplace.html', 'TireReplaceModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;
        $scope.players = {};

        activate();
        /////////////////////
        function activate() {

        }

        vm.onSlideChange = function($index) {
            if (_.isEmpty($scope.players)) return;

            _.forOwn($scope.players, function(player, key) {
                console.log(key, player.currentState);
                if(player.currentState === 'playing') {
                    player.pauseVideo();
                }
            });
        }
    }


})();

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:MoreCtrl
 * @description
 * # MoreCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(['$stateProvider',
  function($stateProvider) {
    $stateProvider

    .state('main.more', {
      cache: false,
      url: '/more',
      views: {
        'more-tab': {
          templateUrl: 'more.html',
          controller: 'MoreCtrl'
        }
      }
    })
  }
])

.controller('MoreCtrl', ["$scope", "AuthService", "System", function($scope, AuthService, System) {

  var prepareResources = function () {
    $scope.authenticated = AuthService.isAuthenticated();

    if ($scope.authenticated) {
      $scope.logInOutLabel = "Logout";
    } else {
      $scope.logInOutLabel = "Login";
    }
  }

  $scope.$on('auth:authenticated', function() {
    prepareResources();
  })

  $scope.logInOut = function() {
    if ($scope.logInOutLabel == "Login") {
      // do login
      System.login.show();
    } else {
      // do logout
      AuthService.logout().then(function() {
        System.dispatch();
        prepareResources();
      });
    }

    // if ($scope.authenticated) {
    //   $scope.logInOutLabel = "Logout";
    // }
    prepareResources();
  }

  $scope.register = function() {
    System.register.show();
  }


  prepareResources();
}]);
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:OfflineCtrl
 * @description
 * # OfflineCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  // setup dashboard tab
  .state('offline', {
    url: '/offline',
    templateUrl: 'offline.html',
    controller: 'OfflineCtrl'
  });
}])

.controller('OfflineCtrl', ["$scope", "System", function($scope, System) {

  $scope.$on('NetworkStatus.Online', function() {
    System.dispatch();
  });

}]);
/*
 * @Author: I Made Agus Setiawan
 * @Date: 2017-03-01 17:41:13
 * @Last Modified by: I Made Agus Setiawan
 * @Last Modified time: 2017-03-01 18:00:33
 */
'use strict';

angular.module('smartvcApp.controllers')

.controller('PowerMaintainCtrl', ["$scope", "$rootScope", "$state", "System", function($scope, $rootScope, $state, System) {

}])
/*
 * @Author: I Made Agus Setiawan
 * @Date: 2017-03-01 17:41:32
 * @Last Modified by: I Made Agus Setiawan
 * @Last Modified time: 2018-01-30 21:37:44
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

    $stateProvider

    .state('main.power.maintain', {
        url: '/maintain',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/maintain/main.html',
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.daily-inspect', {
        url: '/daily-inspect',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/maintain/main-daily-inspect.html',
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.weekly-inspect', {
        url: '/weekly-inspect',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/maintain/main-weekly-inspect.html',
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect', {
        url: '/monthly-inspect',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/maintain/main-monthly-inspect.html',
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect.frame', {
        url: '/frame',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/maintain/main-monthly-inspect-frame.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect.wheels', {
        url: '/wheels',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/maintain/main-monthly-inspect-frame.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect.wheel-hardware', {
        url: '/wheel-hardware',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/maintain/main-monthly-inspect-frame.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect.seat', {
        url: '/seat',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/maintain/main-monthly-inspect-frame.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect.electric', {
        url: '/electric',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/maintain/main-monthly-inspect-frame.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.monthly-inspect.others', {
        url: '/others',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/maintain/main-monthly-inspect-frame.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.maintain.daily-action', {
        url: '/daily-action',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/maintain/main-daily-action.html',
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.maintain.monthly-action', {
        url: '/monthly-action',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/maintain/main-monthly-action.html',
                // controller: 'PowerUseCtrl'

            }
        }
    })

}])
'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.Auth
 * @description
 * # Auth
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('PowerNavData', function() {

    var service = {};
    service.navComponents = {
        pages: [{
                title: "Bases",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "bases-front"}, title: "Front" },
                    { state: "main.power.use.components.component.page", params: {name: "bases-mid"}, title: "Mid"},
                    { state: "main.power.use.components.component.page", params: {name: "bases-rear"}, title: "Rear"},
                    { state: "main.power.use.components.component.page", params: {name: "bases-summary"}, title: "Summary", hidden: true}
                ]
            },
            {
                title: "Powered Seat Functions",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "psf-tilt"}, title: "Tilt" },
                    { state: "main.power.use.components.component.page", params: {name: "psf-recline"}, title: "Recline" },
                    { state: "main.power.use.components.component.page", params: {name: "psf-elevation"}, title: "Elevation" },
                    { state: "main.power.use.components.component.page", params: {name: "psf-standing"}, title: "Standing" }
                ]
            },
            {
                title: "Tire",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "tire-pneumatic"}, title: "Pneumatic" },
                    { state: "main.power.use.components.component.page", params: {name: "tire-solid"}, title: "Solid" }
                ]
            },
            {
                title: "Backrest",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "backrest-soft"}, title: "Soft" },
                    { state: "main.power.use.components.component.page", params: {name: "backrest-rigid"}, title: "Rigid" }
                ]
            },
            {
                title: "Armrest",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "armrest-up"}, title: "up" },
                    { state: "main.power.use.components.component.page", params: {name: "armrest-removable"}, title: "Removable" }
                ]
            },
            {
                title: "Footrest",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "footrest-elevating"}, title: "Elevating" },
                    { state: "main.power.use.components.component.page", params: {name: "footrest-center"}, title: "Center" },
                    { state: "main.power.use.components.component.page", params: {name: "footrest-away"}, title: "Away" }
                ]
            },
            {
                title: "Cushion",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "cushion-contoured"}, title: "Contoured" },
                    { state: "main.power.use.components.component.page", params: {name: "cushion-air"}, title: "Air" },
                    { state: "main.power.use.components.component.page", params: {name: "cushion-capsules"}, title: "Capsules" },
                    { state: "main.power.use.components.component.page", params: {name: "cushion-gel"}, title: "Gel" }
                ]
            },
            {
                title: "Controller",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "controller-joystick"}, title: "Joystick" },
                    { state: "main.power.use.components.component.page", params: {name: "controller-alternatives"}, title: "Alternatives" }
                ]
            },
            {
                title: "Accessories",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "accessories-headrest"}, title: "Headrest" },
                    { state: "main.power.use.components.component.page", params: {name: "accessories-trunk"}, title: "Trunk" },
                    { state: "main.power.use.components.component.page", params: {name: "accessories-hip"}, title: "Guides" },
                    { state: "main.power.use.components.component.page", params: {name: "accessories-lap"}, title: "Straps" }

                ]
            },
            {
                title: "Securements",
                children: [
                    { state: "main.power.use.components.component.page", params: {name: "securements-docking"}, title: "Docking" },
                    { state: "main.power.use.components.component.page", params: {name: "securements-four"}, title: "Four" }
                ]
            }
        ],
        states: "main.power.use.components.component.**"
    };

    return service;
})

;

        // pages: [{ group: "Bases", state: "main.power.use.components.component.page", params: { name: "bases-front" }, title: "Front" },
        //     { group: "Bases", state: "main.power.use.components.component.page", params: { name: "bases-mid" }, title: "Mid" },
        //     { group: "Bases", state: "main.power.use.components.component.page", params: { name: "bases-rear" }, title: "Rear" },
        //     { group: "Powered Seat Functions", state: "main.power.use.components.component.page", params: { name: "psf-tilt" }, title: "Tilt" },
        //     { group: "Powered Seat Functions", state: "main.power.use.components.component.page", params: { name: "psf-recline" }, title: "Recline" },
        //     { group: "Powered Seat Functions", state: "main.power.use.components.component.page", params: { name: "psf-elevation" }, title: "Elevation" },
        //     { group: "Powered Seat Functions", state: "main.power.use.components.component.page", params: { name: "psf-standing" }, title: "Standing" }
        // ],

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.controller('PowerUseCtrl', ["$scope", "$rootScope", "$state", "System", function($scope, $rootScope, $state, System) {

}])

.controller('PowerUseComponentCtrl', ["$scope", "$rootScope", "$state", "System", "PowerNavData", "$ionicHistory", function($scope, $rootScope, $state, System, PowerNavData, $ionicHistory) {
    var vm = this;
    vm.navData = PowerNavData.navComponents.pages;

}])

.controller('PowerUseComponentAbsCtrl', ["$scope", "$rootScope", "$state", "System", "PowerNavData", "$ionicHistory", function($scope, $rootScope, $state, System, PowerNavData, $ionicHistory) {
    var vm = this;
    vm.navComponents = PowerNavData.navComponents;

    if (vm.achorView == null) vm.achorView = $ionicHistory.backView();

    vm.goBack = function() {
        $ionicHistory.goBack(vm.achorView.index + 1 - $ionicHistory.viewHistory().histories[vm.achorView.historyId].stack.length);
    };

    $scope.$on('$destroy', function() {
        console.log("DESTROY", arguments);
        vm.achorView = null;
    });

    $scope.prevPage = function () {
        vm.prevPage = $scope.$parent.prevPage;
    }

    $scope.nextPage = function () {
        vm.nextPage = $scope.$parent.nextPage;
    }

    $scope.openWheelchairChecklistOrSummary = function () {
        alert("aaa");
    }


}])

.controller('PowerUseComponentItemCtrl', ["$scope", "$rootScope", "$state", "System", "PowerNavData", function($scope, $rootScope, $state, System, PowerNavData) {
    var vm = this;

}])
// .controller('UWSetupCtrl', function($rootScope, $scope, $state, System, UseWheelchairService) {
//     var isSetupQFilled;

//     activate();

//     //////////////////////
//     function activate() {
//         _init()
//     }

//     function _init() {
//         isSetupQFilled = UseWheelchairService.isSetupQFilled();
//         $scope.isSetupQFilled = isSetupQFilled;
//     }

//     $scope.openSetupQuestionnaire = function() {
//         UseWheelchairService.openSetupQuestionnaire($rootScope.$new()).then(function() {
//             _init();
//         });
//     }

//     $scope.openSetupQSummary = function($event) {
//         UseWheelchairService.openSetupQSummary($rootScope.$new());
//         $event.stopPropagation();
//     }


// })

// .controller('UWSetupHowCtrl', function($scope, $state, System, UseWheelchairService, PopupSetupHowModal, SettingsService) {
//     $scope.currentPage = 1;

//     activate();

//     /////////////////
//     function activate() {
//         _popupMsg();
//     }


//     $scope.onSlideChanged = function($index) {
//         $scope.currentPage = $index + 1;
//     }

//     function _popupMsg() {
//         if (!SettingsService.isStopPopupSetupHow()) {
//             var model = {
//                 stopPopupSetupHow: SettingsService.isStopPopupSetupHow()
//             }

//             PopupSetupHowModal.show({ model: model }).then(function(result) {
//                 SettingsService.setStopPopupSetupHow(result.stopPopupSetupHow);
//             });
//         }
//     }
// })

// .controller('UWSetupFeatureCtrl', function($scope, $state, System, UseWheelchairService, PopupSetupHowModal, SettingsService) {
//     $scope.currentPage = 1;

//     activate();

//     /////////////////
//     function activate() {}


//     $scope.openPopup = function(id, defaultValue) {
//         UseWheelchairService.openFeaturePopup(id, defaultValue)
//             .then(function(data) {
//                 // Go to page 80: Summary
//                 // navigateTo('^.^.summary');
//             });
//     }

//     $scope.onSlideChanged = function($index) {
//         $scope.currentPage = $index + 1;
//     }

// })

// .controller('UWSetupTroubleshootCtrl', function($scope, $state, System, UseWheelchairService) {

//     $scope.problemList = UseWheelchairService.getProblemList();

//     $scope.caution = function() {
//         var msg = "Please work with your therapist or supplier if you want to adjust your wheelchair..\n\n" +
//             "When you change one wheelchair feature, other wheelchair features may need to be adjusted. ";

//         alert(msg);
//     }

//     $scope.openPopup = function(id, defaultValue) {
//         UseWheelchairService.openProblemPopup(id, defaultValue).then(function(data) {
//             // Go to page 80: Summary
//             navigateTo('^.^.summary');
//         });
//     }

// })

// .controller('UWSetupQaCtrl', function($scope, $state, System, UseWheelchairService) {

//     $scope.problemList = UseWheelchairService.getProblemList();

//     $scope.openPopup = function(id, defaultValue) {
//         UseWheelchairService.openProblemPopup(id, defaultValue).then(function(data) {
//             // Go to page 80: Summary
//             navigateTo('^.^.summary');
//         });
//     }

// })

// .controller('UWSetupSummaryCtrl', function($scope, $state, System, UseWheelchairService) {

//     var refreshList = function() {
//         var useWheelchair = UseWheelchairService.get();
//         $scope.summary = useWheelchair.summary;
//     }

//     $scope.deleteFeature = function(item) {
//         confirm('Delete this item ?').then(function() {
//             UseWheelchairService.removeWheelchairFeatureFromSummary(item);
//             refreshList()
//         })
//     }

//     $scope.deleteProblem = function(item) {
//         confirm('Delete this item ?').then(function() {
//             UseWheelchairService.removeWheelchairProblemFromSummary(item);
//             refreshList()
//         })
//     }

//     refreshList();
// })


// .controller('UWSkillsCtrl', function($scope, $rootScope, $state, System, UseWheelchairService) {
//     var isSQFilled;

//     activate();

//     //////////////////////
//     function activate() {
//         _init()
//     }

//     function _init() {
//         isSQFilled = UseWheelchairService.isSQFilled();
//         $scope.isSQFilled = isSQFilled;
//     }

//     $scope.openSkillQuestionnaire = function() {
//         UseWheelchairService.openSkillQuestionnaire($rootScope.$new()).then(function() {
//             _init();
//         });
//     }

//     $scope.openSQSummary = function($event) {
//         UseWheelchairService.openSQSummary($rootScope.$new());
//         $event.stopPropagation();
//     }

// })

// .controller('UWSkillsWhyCtrl', function($scope, $rootScope, $state, System, UseWheelchairService) {
//     $scope.$on("$ionicView.afterEnter", function(event, data) {
//         $scope.videoId = 'CPaBNyZsM4g';
//     });

//     // activate();
//     //////////////////////
//     // function activate() {}
// })

// .controller('UWSkillsHowCtrl', function($scope, $rootScope, $state, System, UseWheelchairService) {
//     var isSQFilled;

//     activate();

//     //////////////////////
//     function activate() {
//         _init()
//     }

//     function _init() {}

//     $scope.openCaution = function() {
//         if (!UseWheelchairService.isCautionSkillAdvancedPopedUp()) {
//             UseWheelchairService.openCautionSkillAdvanced();
//             UseWheelchairService.setCautionSkillAdvancedPopeUp(true);
//         }
//     }
// })

// .controller('UWSkillsQaCtrl', function($scope, $rootScope, $state, System, UseWheelchairService) {
//     var isSQFilled;

//     activate();

//     //////////////////////
//     function activate() {
//         _init()
//     }

//     function _init() {
//         UseWheelchairService.getQASkill().then(function(qa) {
//             $scope.qaList = qa;
//         })
//     }
// })

// .controller('UWSkillsQaACtrl', function($scope, $rootScope, $stateParams) {
//     var isSQFilled;

//     activate();

//     //////////////////////
//     function activate() {
//         _init()
//     }

//     function _init() {
//         $scope.qa = $stateParams.qa;
//     }
// })


// .controller('UWSkillsHowSkillCtrl', function($scope, $rootScope, $state, System, UseWheelchairService) {
//     var isSQFilled;
//     var _players = [];

//     $scope.ytReady = { player0: false };

//     // activate();
//     //////////////////////
//     // function activate() {}

//     $scope.onYTReady = function(event, idx) {
//         _players.push(event.target);
//         $scope.ytReady[idx] = true;
//     }

//     $scope.onSlideChange = function($index) {
//         var currentPlayer;
//         _players.forEach(function(player) {
//             if (player.getPlayerState() === YT.PlayerState.PLAYING) {
//                 player.pauseVideo();
//             }
//         })
//     }
// })

// .controller('UWQaCtrl', function($scope, $rootScope, $state, System, UseWheelchairService, lunr) {
//     var index = null,
//         filter = null;

//     activate();

//     $scope.search = { keyword: null };
//     //////////////////////
//     function activate() {
//         _initializeIndex();
//         _init();

//     }

//     function _init() {
//         UseWheelchairService.getQASkill().then(function(qa) {
//             $scope.qaList = qa;
//             $scope.fullInclude = _.pluck($scope.qaList, 'title');

//             $scope.qaList.forEach(function(qa) {
//                 index.add(qa);
//             })

//             $scope.$watch('search.keyword', function(value) {
//                 console.log(value)
//                 _search(value ? value : "");
//             })
//         })
//     }

//     function _initializeIndex() {
//         index = lunr(function() {
//             this.field('title', { boost: 5 });
//             this.field('q');
//             this.field('a');
//             this.ref('title');
//         })
//     }

//     //TODO: Belum Optimal
//     function _search(keyword) {
//         if (keyword.length < 3) {
//             $scope.include = $scope.fullInclude;
//             return;
//         }

//         var result = index.search(keyword);
//         console.log(result)
//         if (result.length > 0) {
//             $scope.include = _.pluck(result, 'ref');
//         }
//     }
// })

// .controller('UWQaDetailCtrl', function($scope, $rootScope, $stateParams) {

//     activate();

//     //////////////////////
//     function activate() {
//         _init()
//     }

//     function _init() {
//         $scope.qa = $stateParams.qa;
//         console.log($scope.qa);
//     }
// })

/*
 * @Author: I Made Agus Setiawan
 * @Date: 2017-03-01 17:41:43
 * @Last Modified by: I Made Agus Setiawan
 * @Last Modified time: 2017-04-25 02:22:06
 */

angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

    $stateProvider
        .state('main.power', {
            abstract: true,
            url: '/power'
        })

    .state('main.power.use', {
        url: '/use',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/main.html',
                controller: 'PowerUseCtrl'

            }
        }
    })

    .state('main.power.use.components', {
        url: '/components',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/components/main.html',
                controller: 'PowerUseComponentCtrl as vm'
            }
        }
    })

    .state('main.power.use.components.component', {
        url: '/component',
        // abstract: true,
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/components/components-host.html',
                controller: 'PowerUseComponentAbsCtrl as vm'
            }
        }
    })
    .state('main.power.use.components.component.page', {
        url: '/:name',
        views: {
            '@main.power.use.components.component': {
                templateUrl: function($stateParams) {
                    return 'power/views/use/components/components-' + $stateParams.name + '.html';
                    // return 'power/views/use/empty.html'
                },

                // templateUrl: 'power/views/use/components/main.html',
                controller: 'PowerUseComponentItemCtrl as vm'
            }
        }
    })

    .state('main.power.use.setup', {
        url: '/setup',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/setup/main.html',
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.use.setup.why', {
        url: '/setup',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/use/setup/main-why.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.use.setup.how', {
        url: '/setup',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/setup/main-how.html',
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.use.setup.how.feature', {
        url: '/:id',
        views: {
            'main-content@main': {
                templateUrl: function($stateParams) {
                    // return 'power/views/use/setup/how/' + $stateParams.id + '.html';
                    return 'power/views/use/empty.html'
                },
                // controller: 'UWSetupFeatureCtrl'
            }
        }
    })


    .state('main.power.use.skills', {
        url: '/skills',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/skills/main.html',
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.use.skills.why', {
        url: '/setup',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/use/skills/main-why.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.use.skills.how', {
        url: '/setup',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/skills/main-how.html',
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.use.skills.how.skill', {
        url: '/:id',
        views: {
            'main-content@main': {
                templateUrl: function($stateParams) {
                    // return 'power/views/use/skills/how/' + $stateParams.id + '.html';
                    return 'power/views/use/empty.html'
                },
                // controller: 'UWSetupFeatureCtrl'
            }
        }
    })

    .state('main.power.use.qa', {
        url: '/qa',
        views: {
            'main-content@main': {
                // templateUrl: 'power/views/use/qa/main.html',
                templateUrl: 'power/views/use/empty.html'
                // controller: 'PowerUseCtrl'
            }
        }
    })

    .state('main.power.empty', {
        url: '/empty',
        views: {
            'main-content@main': {
                templateUrl: 'power/views/use/empty.html'
            }
        }
    })
    //     .state('main.usewheelchair.fit', {
    //         url: '/setup',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.goals', {
    //         url: '/goals',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-goals.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.why', {
    //         url: '/goals',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-why.html',
    //                 // controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.goals.propulsion', {
    //         url: '/propulsion',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-goals-propulsion.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.goals.maneuverability', {
    //         url: '/maneuverability',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-goals-maneuverability.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.goals.comfort', {
    //         url: '/comfort',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-goals-comfort.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.goals.pressure', {
    //         url: '/pressure',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-goals-pressure.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     /*Wheelchair Features*/
    //     .state('main.usewheelchair.fit.features', {
    //         url: '/features',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-features.html',
    //                 controller: 'UWSetupFeatureCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.features.feature', {
    //         url: '/:id',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: function($stateParams) {
    //                     return 'usewheelchair/main-setup-features-' + $stateParams.id + '.html';
    //                 },
    //                 controller: 'UWSetupFeatureCtrl'
    //             }
    //         }
    //     })


    //     .state('main.usewheelchair.fit.how', {
    //         url: '/how',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-how.html',
    //                 controller: 'UWSetupHowCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.how.feature', {
    //         url: '/:id',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: function($stateParams) {
    //                     return 'usewheelchair/main-setup-features-' + $stateParams.id + '.html';
    //                 },
    //                 controller: 'UWSetupFeatureCtrl'
    //             }
    //         }
    //     })

    //     // /*Troubleshoot*/
    //     .state('main.usewheelchair.fit.troubleshoot', {
    //         url: '/troubleshoot',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-troubleshoot.html',
    //                 controller: 'UWSetupTroubleshootCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.qa', {
    //         url: '/qa',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/setup/setup-qa.html',
    //                 controller: 'UWSetupQaCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.qa.problem', {
    //         url: '/problem/:id',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: function($stateParams) {
    //                     return 'usewheelchair/main-setup-troubleshoot-' + $stateParams.id + '.html';
    //                 },
    //                 controller: 'UWSetupTroubleshootCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.troubleshoot.info', {
    //         url: '/info',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-troubleshoot-info.html',
    //                 controller: 'UWSetupCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.troubleshoot.problem', {
    //         url: '/problem/:id',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: function($stateParams) {
    //                     return 'usewheelchair/main-setup-troubleshoot-' + $stateParams.id + '.html';
    //                 },
    //                 controller: 'UWSetupTroubleshootCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.fit.summary', {
    //         url: '/summary',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/main-setup-summary.html',
    //                 controller: 'UWSetupSummaryCtrl'
    //             }
    //         }
    //     })

    //     /** Use:Skills */
    //     .state('main.usewheelchair.skills', {
    //         url: '/skills',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/skills/main-skills.html',
    //                 controller: 'UWSkillsCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.skills.why', {
    //         url: '/why',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/skills/skill-why.html',
    //                 controller: 'UWSkillsWhyCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.skills.how', {
    //         url: '/how',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/skills/skill-how.html',
    //                 controller: 'UWSkillsHowCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.skills.qa', {
    //         url: '/qa',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/skills/skill-qa.html',
    //                 controller: 'UWSkillsQaCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.skills.qa.a', {
    //         url: '/a',
    //         params: {
    //             qa: null
    //         },
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/skills/skill-qa-a.html',
    //                 controller: 'UWSkillsQaACtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.skills.skill.page', {
    //         url: '/:name',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: function($stateParams) {
    //                     return 'usewheelchair/skills/skill-how-' + $stateParams.name + '.html';
    //                 },
    //                 controller: 'UWSkillsHowSkillCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.qa', {
    //         url: '/qa',
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/qa/main-qa.html',
    //                 controller: 'UWQaCtrl'
    //             }
    //         }
    //     })

    //     .state('main.usewheelchair.qa.detail', {
    //         url: '/detail',
    //         params: {
    //             qa: null
    //         },
    //         views: {
    //             'main-content@main': {
    //                 templateUrl: 'usewheelchair/qa/main-qa-detail.html',
    //                 controller: 'UWQaDetailCtrl'
    //             }
    //         }
    //     })

    //     ;
}])
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:ProfileCtrl
 * @description
 * # ProfileCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(['$stateProvider',
  function($stateProvider) {
    $stateProvider

    .state('main.profile', {
      cache: false,
      url: '/profile',
      params: {
          justRegister: null
      },
      views: {
        'profile-tab': {
          templateUrl: 'profile.html',
          controller: 'ProfileCtrl'
        }
      }
    })

    .state('main.profile-select', {
      cache: false,
      url: '/profile/select/:type',
      views: {
        'profile-tab': {
          templateUrl: 'profile_select_list.html',
          controller: 'SelectCtrl'
        }
      }
    })

    .state('main.profile-device', {
      cache: false,
      url: '/profile/device',
      views: {
        'profile-tab': {
          templateUrl: 'profile_device.html',
          controller: 'DeviceCtrl'
        }
      }
    })

    .state('main.profile-device-form', {
      cache: false,
      url: '/profile/device/:id',
      views: {
        'profile-tab': {
          templateUrl: 'profile_device_form.html',
          controller: 'DeviceFormCtrl'
        }
      }
    })

    // .state('main.profile-select-device-addmodel', {
    //   url: '/profile/select/device/addmodel',
    //   views: {
    //     'profile-tab': {
    //       templateUrl: 'select-device-addmodel.html',
    //       controller: 'SelectDeviceModelCtrl'
    //     }
    //   }
    // })

    // .state('main.profile-select-device-model', {
    //   url: '/profile/select/device/model',
    //   views: {
    //     'profile-tab': {
    //       templateUrl: 'select-device-model.html',
    //       controller: 'SelectDeviceModelCtrl'
    //     }
    //   }
    // })

  }
])

.controller('ProfileCtrl', ["$scope", "$log", "ProfileService", "$ionicLoading", "Device", "$stateParams", function($scope, $log, ProfileService, $ionicLoading, Device, $stateParams) {
  console.log("*** Profile page");

  $scope.justRegister = $stateParams.justRegister;

  $ionicLoading.show();
  ProfileService.sync().then(function() {
  }, function(reason) {
    $log.error("Problems syncing data");
    $log.error(reason.status, reason.statusText);

  }).finally(function() {
    $scope.profile = ProfileService.get();
    $scope.profile.formatedYOB = ProfileService.formatedYOB($scope.profile.dateOfBirth);

    $ionicLoading.hide();
  });

  $scope.$watch('profile.dateOfBirth',
    function(newValue, oldValue) {
      if (newValue instanceof Date && newValue != oldValue) {
        ProfileService.setYOB(newValue);
        $scope.profile.formatedYOB = ProfileService.formatedYOB(newValue);
      }
    })
}])


.controller('SelectCtrl', ["$scope", "$state", "$ionicNavBarDelegate", "$stateParams", "$ionicPopup", "SettingsService", "ProfileService", "LogisticService", "DeviceService", function($scope, $state, $ionicNavBarDelegate, $stateParams, $ionicPopup, SettingsService, ProfileService, LogisticService, DeviceService) {
  var _list = [],
    title, service,
    modelField, modelCustom,
    showAdd = true,
    multi = false;

  $scope.profile = ProfileService.get();

  switch ($stateParams.type) {
    case "gender":
      title = 'Gender';
      _list = ["Male", "Female"];
      modelField = $scope.profile.gender;
      showAdd = false;
      break;
    case "disability":
      title = 'Primary Disability';
      _list = LogisticService.getList("Disability");
      modelField = $scope.profile.disability;
      showAdd = false;
      break;
    case "transfer-strategy":
      title = 'Transfer Strategy';
      _list = LogisticService.getList("Transfer");
      modelField = $scope.profile.transferStrategy;
      showAdd = false;
      break;
    case "employment":
      title = 'Employment';
      _list = LogisticService.getList("Employment");
      modelField = $scope.profile.employment;
      showAdd = false;
      break;
    case "living":
      title = 'Living Status';
      _list = LogisticService.getList("Living");
      modelField = $scope.profile.livingStatus;
      showAdd = false;
      break;
    case "funding":
      title = 'Funding';
      _list = LogisticService.getList("Funding");
      modelField = $scope.profile.funding;
      showAdd = false;
      break;
    case "make": // do not need to prvide addnew feature
      title = 'Device Make';
      _list = LogisticService.getMakeList();
      modelField = DeviceService.getMake();

      if (_.findIndex(_list, modelField) == -1) {
        modelCustom = modelField;
      }
      // showAdd = false;
      break;
    case "model":
      title = 'Device Model';
      _list = LogisticService.getModelList(null, DeviceService.getMake()); console.log(_list)
      modelField = DeviceService.getModel();

      if (_.findIndex(_list, function(itm) { return itm.model == modelField}) == -1) {
        modelCustom = modelField;
      }

      showAdd = false;
      break;
    case "usage":
      title = 'Usage';
      _list = LogisticService.getList("USAGE");
      modelField = DeviceService.getUsage();
      showAdd = false;
      break;
    case "accessory":
      title = 'Accessories';
      _list = LogisticService.getList("ACCESSORY");
      modelField = DeviceService.getAccessory();

      _list = _list.map(function(item) {
        modelField = modelField || "";
        return {
          text: item.value,
          checked: modelField.indexOf(item.value) != -1
        }
      })

      showAdd = false;
      multi = true;
      break;
  }

  $scope._list = _list;
  $scope.title = title;
  $scope.showAdd = showAdd;
  $scope.data = {
    modelField: modelField,
    modelCustom: modelCustom
  };

  $scope.type = $stateParams.type;
  $scope.multiple = multi;
  $scope.showCustomInput = function() {
    return $scope.type == 'make' || $scope.type == 'model';
  }

  $scope.updateSelect = function(value, wdId, type, custom) {
    if (custom) {
      $scope.data.modelField = value;
    } else {
      $scope.data.modelCustom = null;
    }

    switch ($scope.type) {
      case "gender":
        ProfileService.setGender(value);
        break;
      case "disability":
        ProfileService.setDisability(value);
        break;
      case "transfer-strategy":
        ProfileService.setTransfer(value);
        break;
      case "employment":
        ProfileService.setEmployment(value);
        break;
      case "living":
        ProfileService.setLiving(value);
        break;
      case "funding":
        ProfileService.setFunding(value);
        break;
      case "make":
        var make = DeviceService.getMake();
        DeviceService.setMake(value);
        if (make != value) {
          DeviceService.setModel(null);
        }
        break;
      case "model":
        DeviceService.setModel(value);
        DeviceService.setWCDeviceId(wdId);
        DeviceService.setType(type);
        break;
      case "usage":
        DeviceService.setUsage(value);
        break;
    }
  }

  $scope.updateMultiSelect = function(item, checked) {
    switch ($scope.type) {
      case "accessory":
        DeviceService.setAccessory(item, checked);
        // console.log(DeviceService.getAccessory());
        break;
    }
  }

  // $scope.addNew = function() {
  //   $scope.popup = {};

  //   var addForm = window.prompt('Please add if really needed!', title);


  //   addForm.then(function(newValue, buttonIndex) {
  //     if (buttonIndex == 1) {
  //       // save new value to local setting

  //       console.log('Tapped!', newValue);
  //     }

  //   });
  // }
}])

.controller('DeviceCtrl', ["$scope", "$state", "$ionicLoading", "ProfileService", "LogisticService", "Device", "DeviceService", function($scope, $state, $ionicLoading, ProfileService, LogisticService, Device, DeviceService) {
  $scope.success = false;

  $ionicLoading.show();

  $scope.profile = ProfileService.get();
  $scope.devices = Device.query({
    accountId: $scope.profile.id
  }, function() {

    $scope.success = true;
    $ionicLoading.hide();
  }, function() {
    window.alert('Problem getting device list');
    $ionicLoading.hide();
  });

  $scope.addNew = function() {
    DeviceService.new($scope.profile.id);
    $state.go('main.profile-device-form');
  }

}])

.controller('DeviceFormCtrl', ["$scope", "$state", "$filter", "$stateParams", "$ionicNavBarDelegate", "$ionicLoading", "ProfileService", "DeviceService", function($scope, $state, $filter, $stateParams, $ionicNavBarDelegate, $ionicLoading, ProfileService, DeviceService) {
  var profile = ProfileService.get();
  var id = $stateParams.id;

  $scope.isValid = DeviceService.isValid;
  $scope.device = {};
  $ionicLoading.show();

  if (id && !_.isNaN(_.parseInt(id))) {
    // show current data
    DeviceService.load(id).then(
      function() {
        $scope.device = DeviceService.getDevice();
        DeviceService.setPrimary($scope.device.id == ProfileService.getPrimaryDevice());
        $ionicLoading.hide();
      });

  } else {
    // show empty form
    $scope.device = DeviceService.getDevice();
    $ionicLoading.hide();
  }

  $scope.selectModel = function() {
    if (!DeviceService.getMake()) {
      window.alert('Device Make must be selected first').then(function() {});
    } else {
      $state.go('main.profile-select', {
        type: 'model'
      });
    }
  }

  $scope.selectAccessories = function() {
    if (!DeviceService.getModel()) {
      window.alert('Device Model must be selected first').then(function() {});
    } else {
      $state.go('main.profile-select', {
        type: 'accessory'
      });
    }
  }

  var startDate = angular.element(document.querySelector('#startDate'));
  var endDate = angular.element(document.querySelector('#endDate'));
  setTimeout(function() {
    // startDate.scroller('option', 'endYear', (new Date()).getFullYear());
    // endDate.scroller('option', 'endYear', (new Date()).getFullYear());
  }, 100);

  $scope.$watch('device.startDate',
    function(newValue, oldValue) {
      if (newValue instanceof Date && +newValue != +oldValue) {
        DeviceService.setStartDate(newValue);
        endDate.scroller('option', 'minDate', newValue);
      }
    })

  $scope.$watch('device.endDate',
    function(newValue, oldValue) {
      if (+newValue != +oldValue) {
        DeviceService.setEndDate(newValue);
        if (!(newValue instanceof Date)) newValue = new Date();
        startDate.scroller('option', 'maxDate', newValue);
      }
    })

  $scope.save = function() {
    if (DeviceService.isValid()) {
      // do saving
      $ionicLoading.show();
      DeviceService.save().then(function() {
        $scope.device = DeviceService.getDevice();

        if ($scope.device.primary) {
          ProfileService.setPrimaryDevice($scope.device.id);
        }

        window.alert('Device saved').then(function() {

          $state.go("main.profile-device");
          $ionicLoading.hide();
        })
      }, function(reason) {
        window.alert(reason);
        $ionicLoading.hide();
      });
    } else {
      window.alert('Some fields are not completed');
    }
  }

  $scope.delete = function(id) {
    window.confirm('Are you sure to delete this device?')
      .then(function() {
          DeviceService.delete(id)
            .then(function(data) {
              alert("Device deleted");

              if (ProfileService.getPrimaryDevice() == id) {
                ProfileService.setPrimaryDevice(null);
              }

              $state.go("main.profile-device");
            }, function() {
              alert("Failed to delete device");
              $state.go("main.profile-device");
            })
      })
  }

}])

;

'use strict';

angular.module('smartvcApp.controllers')

    .config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

        $stateProvider

            .state('main.resources', {
                url: '/healthissues',
                views: {
                    'main-content@main': {
                        templateUrl: 'resources/main.html',
                        controller: 'ResourcesCtrl'
                    }
                }
            })

            .state('main.resources.sub', {
                url: '/:sub',
                views: {
                    'main-content@main': {
                        templateUrl: function($stateParams) {
                            return 'resources/' + $stateParams.sub + '.html';
                        },
                        controller: 'ResourcesSubCtrl'
                    }
                }
            })

        ;
    }])


    .controller('ResourcesCtrl', ["$scope", "$rootScope", "$state", "System", function ($scope, $rootScope, $state, System) {
        activate();


        //////////////////////////
        function activate() {
            _init();

        }

        function _init() {
        }
    }])


    .controller('ResourcesSubCtrl', ["$scope", "$rootScope", "$state", "System", function ($scope, $rootScope, $state, System) {
        activate();


        //////////////////////////
        function activate() {
            _init();

        }

        function _init() {
        }
    }])

'use strict';

/*
* @Author: ims13
* @Date:   2015-02-24 14:16:00
* @Last Modified by:   ims13
* @Last Modified time: 2016-01-26 18:42:30
*/

angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  // setup dashboard tab
  .state('main.review', {
    url: '/review',
    views: {
      'dashboard-tab': {
        templateUrl: 'review/main.html',
        controller: 'ReviewCtrl'
      }
    }
  })

  .state('main.review-my-device', {
    cache: false,
    url: '/review/my-device',
    views: {
      'dashboard-tab': {
        templateUrl: 'review/main-mydevice.html',
        controller: 'ReviewMyDeviceCtrl'
      }
    }
  })

  .state('main.review-others', {
    url: '/review/others',
    views: {
      'dashboard-tab': {
        templateUrl: 'review/main-byothers.html',
        controller: 'ReviewOthersCtrl'
      }
    }
  })
  // .state('main.review.device', {
  //   url: '/device-list',
  //   views: {
  //     'review-content': {
  //       templateUrl: 'review_device.html',
  //       controller: 'ReviewSelectDeviceCtrl'
  //     }
  //   }
  // });

}])
    .controller('ResourcesCtrl', ["$scope", "Device", "AuthService", function($scope, Device, AuthService) {
        // console.log('ReviewCtrl');
        var authenticated = AuthService.isAuthenticated();

        $scope._listMenu = [
            { title: "My Reviews", url: "main.review-my-device",  allowed: authenticated },
            { title: "Review by Others", url: "main.review-others", allowed: true }
        ]

    }])

.controller('ReviewCtrl', ["$scope", "Device", "AuthService", function($scope, Device, AuthService) {
  // console.log('ReviewCtrl');
  var authenticated = AuthService.isAuthenticated();

  $scope._listMenu = [
    { title: "My Reviews", url: "main.review-my-device",  allowed: authenticated },
    { title: "Review by Others", url: "main.review-others", allowed: true }
  ]

}])

.controller('ReviewMyDeviceCtrl', ["$scope", "$rootScope", "$state", "$ionicModal", "$ionicLoading", "$ionicSlideBoxDelegate", "System", "ProfileService", "Device", "ReviewService", "LogisticService", function($scope, $rootScope, $state, $ionicModal, $ionicLoading,
                                           $ionicSlideBoxDelegate, System, ProfileService, Device,
                                           ReviewService, LogisticService) {

  $ionicLoading.show();

  $scope.profile = ProfileService.get();

  var getTotalReview = function(device) {
    // find number of review
    // ReviewService.getTotalReview(device.wcdevice_id, device.profile_id).then(
    //   function(data) {
    //     device.total_review = data.total;
    //   }, function() {
    //     device.total_review = 0;
    //   });
  }

  var preProcessDevice = function(device) {
    var miliperyear = 365.26 * 24 * 60 * 60 * 1000;
    var start_date = new Date(device.startDate);
    var end_date = new Date(device.endDate);

    device.startYear = start_date.getFullYear();
    device.endYear = end_date.getFullYear();
    if (end_date < start_date) {
      device.endYear = "Current";
      end_date = new Date();
    }

    var diff = end_date.getTime() - start_date.getTime();
    device.period = Math.ceil(diff / miliperyear);

    // find review
    var review = ReviewService.findByDevice(device);
    if(review) {
      device.review = review;
    } else {
      device.review = null;
    }
  }

  Device.query({
    pid: $scope.profile.id
  }, function(devices) {
    devices.forEach(function(device) {
      preProcessDevice(device);
      getTotalReview(device);
    });

    $scope.myDevices = devices;
    $scope.success = true;
    $ionicLoading.hide();
  }, function() {
    window.alert('Problem getting device list from server');
    $ionicLoading.hide();
  });

  $scope.addReview = function(device) {
    $scope.review = ReviewService.getModel(device.accountId, device.wcDeviceId);
    $scope.selectedDevice = device;
    $scope.reviewModal.show();
  }

  // Write A Review
  //-----------------------------------------------
  // review modal
  $ionicModal.fromTemplateUrl('review/modal_review-form.html', {
    scope: $scope,
    animation: 'slide-in-up'
  }).then(function(modal) {
    $scope.reviewModal = modal;
    $scope.current = 0;
  });

  $scope.Questions = LogisticService.getReviewQuestions();

  $scope.FMAItemsShort = LogisticService.getFMAItemsShort();

  $scope.QOptions = LogisticService.getQuestionOptions();

  $scope.OverallRate = LogisticService.getOverallRate();

  function _fmaName(index) { return 'fmaQ' + (index + 1); }

  $scope.fmaName = _fmaName;

  $scope.slideChanged = function(index) {
    var current = $scope.current;
    if (current < index && !($scope.review[_fmaName(current)])) {
      $ionicSlideBoxDelegate.slide($scope.current);
    } else {
      $scope.current = index;
    }
  }

  $scope.prev = function() {
    $ionicSlideBoxDelegate.previous();
  }

  $scope.next = function() {
    var current = $ionicSlideBoxDelegate.currentIndex();
    if ($scope.review[_fmaName(current)] != null) {
      $ionicSlideBoxDelegate.next();
    }
  }



  $scope.setScore = function(review, $index, score) {
    review[_fmaName($index)] = score;
  }

  $scope.getScore = function(review, $index) {
    return review[_fmaName($index)] ;
  }

  $scope.save = function(review) {
    $ionicLoading.show();
    ReviewService.save(review)
    .then(function() {
      $ionicLoading.hide();

      window.alert('Review saved').then(function() {
        $state.reload();
        $scope.reviewModal.hide();
      })
    }, function(reason) {
      window.alert(reason);
      $ionicLoading.hide();
    });
  }

  $scope.toggleReadMore = function(idx) {
    if ($scope.activeMore == idx)
      $scope.activeMore = null;
    else
      $scope.activeMore = idx;
  }

  $scope.editReview = function(review) {
    ReviewService.load(review.id).then(
      function() {
        $scope.review = ReviewService.get();
        $scope.selectedDevice = review.device;
        $scope.reviewModal.show();
      }, function(reason) {
        alert(reason.statusText);
      });
  }

  $scope.viewReviewDetail = function(device) {
    $scope.device = device;
    System.getModalPage("review/modal_review-detail.html", $scope)
    .then(function(page) {
      page.show();console.log(device)
    });
  }
}])

.controller('ReviewOthersCtrl', ["$scope", "$rootScope", "$ionicLoading", "$ionicSlideBoxDelegate", "ProfileService", "ReviewService", "Review", "Device", "WCDevice", "LogisticService", "$filter", "System", function($scope, $rootScope, $ionicLoading, $ionicSlideBoxDelegate, ProfileService, ReviewService, Review, Device, WCDevice, LogisticService, $filter, System) {

    $scope.filter = {
      //type: 'Power', make: 'Hoveround',
      state: 0
    };

    $scope.FMAItemsShort = LogisticService.getFMAItemsShort();
    $scope.FMARate = LogisticService.getFMARate();
    $scope.deviceTypeList =  LogisticService.getDeviceTypeList();
    $scope.modelList =  LogisticService.getModels();

    $scope.$watch('filter.type', function(value) {
      $scope.filter.make = null;
      $scope.filter.model = null;
      $scope.makeList = LogisticService.getMakeList(value);
    });

    $scope.$watch('filter.make', function(value) {
      if (value == undefined) return;

      $scope.filter.model = null;
      $scope.modelList = LogisticService.getModelList($scope.filter.type, $scope.filter.make);
    });

    $scope.find = function() {
      $ionicLoading.show();
      WCDevice.searchWithTotalReview( {
        devicetype: $scope.filter.type,
        make: $scope.filter.make,
        model: $scope.filter.model ? $scope.filter.model.model : null
      }, function(wcdevices) {
        $scope.foundDevices = wcdevices;
        $ionicLoading.hide();
      }, function(response) {
        window.alert('Problem getting review list: ' + response.statusText);
        $ionicLoading.hide();
      })
    }

  var preProcessDevice = function(device) {
    var miliperyear = 365.26 * 24 * 60 * 60 * 1000;
    var start_date = new Date(device.startDate);
    var end_date = new Date(device.endDate);

    device.startYear = start_date.getFullYear();
    device.endYear = end_date.getFullYear();
    if (end_date < start_date) {
      device.endYear = "Current";
      end_date = new Date();
    }

    var diff = end_date.getTime() - start_date.getTime();
    device.period = Math.ceil(diff / miliperyear);

    // find review
    //var review = ReviewService.findByDevice(device);
    //if(review) {
    //  device.review = review;
    //} else {
    //  device.review = null;
    //}
  }

  $scope.viewOthersReview = function(wcdevice) {
    $ionicLoading.show();
    Review.query({
      wcDeviceId: wcdevice.id
    }, function(reviews) {

      reviews.forEach(function(review) {
        var date = review.changedAt || review.createdAt;
        review.date = date;

        Device.get({
          accountId: review.accountId,
          wcDeviceId: review.wcDeviceId
        }, function(device) {
          preProcessDevice(device);
          review.awcDevice = device;
        })
      });

      $scope.selectedWCDevice = wcdevice;
      // $scope.filter.state = 1;
      $scope.custReviews = reviews;
      $ionicLoading.hide();

      System.getModalPage("review/modal_review-view.html", $scope)
      .then(function(page) {
        page.show();
      });


    }, function(reason) {
      window.alert('Problem getting review list: ' + reason.statusText);
      $ionicLoading.hide();
    });
  }

  $scope.back = function() {
    if ($scope.filter.state > 0) $scope.filter.state -= 1;
  }

  $scope.fmaName = function($index) {
    return 'fmaQ' + ($index + 1);
  }
}])

// .controller('ReviewMyDeviceCtrl', function($scope, $rootScope, $ionicLoading, $ionicSlideBoxDelegate, ProfileService, Device) {

//   $scope.profile = ProfileService.get();

//   $ionicLoading.show();
//   $scope.myDevices = Device.query({
//     pid: $scope.profile.id
//   }, function() {

//     $scope.success = true;
//     $ionicLoading.hide();
//   }, function() {
//     window.alert('Problem getting device list');
//     $ionicLoading.hide();
//   });

//   $scope.preProcessDevice = function(device) {
//     var miliperyear = 365.26 * 24 * 60 * 60 * 1000;
//     var start_date = new Date(device.start_date);
//     var end_date = new Date(device.end_date);

//     device.startYear = start_date.getFullYear();
//     device.endYear = end_date.getFullYear();
//     if (end_date < start_date) {
//       device.endYear = "Current";
//       end_date = new Date();
//     }

//     var diff = end_date.getTime() - start_date.getTime();
//     device.period = Math.ceil(diff / miliperyear);
//   }

//   // Write A Review
//   //-----------------------------------------------
//   if (!$rootScope.review) {
//     $rootScope.review = {};
//   }

//   $scope.FMAItems = [
//     "My current means of mobility allows me to carry out my daily routine as idependently, safely and  efficiently as possible: (e.g., task I want to do, need to do, am required to do, when and where needed)",

//     "My current means of mobility meets my comfort needs: (e.g., heat/moisture, sitting tolerance, pain, stability)",

//     "My current means of mobility meets my heat needs: (e.g., pressure sores, breathing, edema control, medical equipment)",

//     "My current means of mobility allows me to be as independent, sage and efficient as possible: (e.g., do what I want it to do when and where I want to do it)",

//     "My current means of mobility allows me to reach and carry as independently, safely and efficiently as possible: (e.g., table, counters, floors, shelves)",

//     "My current means of mobility allows me to transfer from one surface to another: (e.g., bed, toilet, chair)",

//     "My current means of mobility allows me to carry out personal care tasks:<br>(e.g., dressing, bowel/bladder care, eating, hygiene)",

//     "My current means of mobility allows me to get around indoors: (e.g., home, work, mall, restaurants, ramps, obstacles)",

//     "My current means of mobility allows me to get around outdoors: (e.g., uneven surfaces, dirt, grass, gravel, ramps, obstacles)",

//     "My current means of mobility allows me to use personal or public transformation as independently,safelt and efficiently as possible: (e.g., secure, stow, ride)"
//   ];

//   $scope.FMARate = [
//     "",
//     "Completely Disagree",
//     "Mostly Disagree",
//     "Slightly Disagree",
//     "Slightly Agree",
//     "Mostly Agree",
//     "Completely Agree"
//   ];

//   $scope.OverallRate = [
//     "",
//     "I hate it",
//     "I don't like it",
//     "It's Ok",
//     "I like it",
//     "I love it"
//   ];

//   $scope.current = 0;
//   $scope.slideChanged = function(index) {
//     if ($scope.current < index && !($rootScope.review.rate && $rootScope.review.rate[$scope.current])) {
//       $ionicSlideBoxDelegate.slide($scope.current);
//     } else {
//       $scope.current = index;
//     }

//     console.log($rootScope)
//   }

//   $scope.prev = function() {
//     $ionicSlideBoxDelegate.previous();
//   }

//   $scope.next = function() {
//     var current = $ionicSlideBoxDelegate.currentIndex();
//     if ($rootScope.review.rate[current] && $rootScope.review.rate[current] > 0) {
//       $ionicSlideBoxDelegate.next();
//     }
//   }

// })

// .controller('ReviewSelectDeviceCtrl', function($scope, $rootScope, $ionicLoading, Device, ProfileService) {
//   $scope.profile = ProfileService.get();

//   $ionicLoading.show();
//   $scope.myDevices = Device.query({
//     pid: $scope.profile.id
//   }, function() {

//     $scope.success = true;
//     $ionicLoading.hide();
//   }, function() {
//     window.alert('Problem getting device list');
//     $ionicLoading.hide();
//   });

// })
;

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("PopupServiceDeliveryModalController", Controller)
        .factory('PopupServiceDeliveryModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

        // $log = $log.getInstance('ScheduleModal');

        var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('serdelivery/popupmsg/message.html', 'PopupServiceDeliveryModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope', '$ionicSlideBoxDelegate'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope, $ionicSlideBoxDelegate) {
        var vm = this;

        vm.index = 0;
        parameters = parameters || {};
        vm.model = parameters.model;
        vm.slideBox = $ionicSlideBoxDelegate.$getByHandle("slider");

        activate();
        /////////////////////
        function activate() {
        }

        vm.next = function() {
            $ionicSlideBoxDelegate.next();
        }

        vm.onSlideChanged = function($index) {
            vm.index = $index;
        }
    }


})();

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  .state('main.serdelivery.qa', {
    url: '/qa',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/qa/main-qa.html',
        controller: 'SDQaCtrl'
      }
    }
  })

  .state('main.serdelivery.qa.detail', {
    url: '/detail',
    params: {
        qa: null
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/qa/main-qa-detail.html',
        controller: 'SDQaDetailCtrl'
      }
    }
  })
  ;
}])


.controller('SDQaCtrl', ["$scope", "$rootScope", "$state", "System", "ServiceDeliveryService", "lunr", function ($scope, $rootScope, $state, System, ServiceDeliveryService, lunr) {
    var index = null, filter = null;

    activate();

    $scope.search = { keyword: null};
    //////////////////////
    function activate() {
        _initializeIndex();
        _init();

    }

    function _init() {
        ServiceDeliveryService.getQAData().then(function(qa) {
            $scope.qaList = qa;
            $scope.fullInclude = _.pluck($scope.qaList, 'title');

            $scope.qaList.forEach(function(qa) {
              index.add(qa);
            })

            $scope.$watch('search.keyword', function(value) {
              console.log(value)
              _search(value ? value : "");
            })
        })
    }

    function _initializeIndex() {
      index = lunr(function() {
        this.field('title', { boost: 5 });
        this.field('q');
        this.field('a');
        this.ref('title');
      })
    }

    //TODO: Belum Optimal
    function _search(keyword) {
      if (keyword.length < 3) {
        $scope.include = $scope.fullInclude;
        return;
      }

      var result = index.search(keyword);
      if (result.length > 0) {
        $scope.include = _.pluck(result, 'ref');
      }
    }
}])

.controller('SDQaDetailCtrl', ["$scope", "$rootScope", "$stateParams", function ($scope, $rootScope, $stateParams) {

    activate();

    //////////////////////
    function activate() {
        _init()
    }

    function _init() {
        $scope.qa = $stateParams.qa;
    }
}])
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:SerdeliveryCtrl
 * @description
 * # SerdeliveryCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  .state('main.serdelivery', {
    url: '/serdelivery',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main.html',
        controller: 'SerdeliveryCtrl'
      }
    }
  })

  .state('main.serdelivery.self-assessment', {
    cache: false,
    url: '/self-assessment',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-self-assessment.html',
        controller: 'SelfAssessmentCtrl'
      }
    }
  })

  .state('main.serdelivery.physical-referral', {
    url: '/physical-referral',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-physical-referral.html',
        controller: 'ReferralCtrl'
      }
    }
  })

  .state('main.serdelivery.wheelchair-evaluation', {
    url: '/wheelchair-evaluation',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-wheelchair-evaluation.html',
        controller: 'WheelchairEvaluationCtrl'
      }
    }
  })

  .state('main.serdelivery.select-wheelchair', {
    url: '/select-wheelchair',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-select-wheelchair.html',
        controller: 'SelectWheelchairCtrl'
      }
    }
  })

  .state('main.serdelivery.funding-process', {
    url: '/funding-process',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-funding-process.html',
        controller: 'FundingCtrl'
      }
    }
  })

  .state('main.serdelivery.funding-process.private', {
    url: '/private',
    params: {
      source: "private"
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-funding-process.2step.html',
        controller: 'Funding2StepCtrl'
      }
    }
  })

  .state('main.serdelivery.funding-process.other', {
    url: '/other',
    params: {
      source: "other"
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-funding-process.2step.other.html',
        controller: 'Funding2StepPublicCtrl'
      }
    }
  })

  .state('main.serdelivery.receive-wheelchair', {
    url: '/receive-wheelchair',
    cache: 'false',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-receive-wheelchair.html',
        controller: 'ReceiveWheelchairCtrl'
      }
    }
  })

  .state('main.serdelivery.receive-wheelchair.new-checklist', {
    url: '/checklist',
    cache: 'false',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-receive-wheelchair.new-checklist.html',
        controller: 'ReceiveWheelchairChecklistCtrl'
      }
    }
  })

  .state('main.serdelivery.receive-wheelchair.new-checklist.manual-independent', {
    url: '/manual-independent',
    params: {
      type: "manual-independent"
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-receive-wheelchair.new-checklist.manual-independent.html',
        controller: 'ReceiveWheelchairChecklistTypeCtrl'
      }
    }
  })

  .state('main.serdelivery.receive-wheelchair.new-checklist.manual-assisted', {
    url: '/manual-assisted',
    params: {
      type: "manual-assisted"
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-receive-wheelchair.new-checklist.manual-assisted.html',
        controller: 'ReceiveWheelchairChecklistTypeCtrl'
      }
    }
  })

  .state('main.serdelivery.receive-wheelchair.new-checklist.power', {
    url: '/power',
    params: {
      type: "power"
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-receive-wheelchair.new-checklist.power.html',
        controller: 'ReceiveWheelchairChecklistTypeCtrl'
      }
    }
  })

  .state('main.serdelivery.glossary', {
    url: '/glossary',
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-glossary.html',
        controller: 'GlossaryCtrl'
      }
    }
  })

  .state('main.serdelivery.glossary.detail', {
    url: '/detail',
    params: {
      index: null
    },
    views: {
      'main-content@main': {
        templateUrl: 'servicedelivery/main-glossary.detail.html',
        controller: 'GlossaryDetailCtrl'
      }
    }
  })

  .state('main.serdelivery.maintain-and-repair', {
    url: '/maintenance',
    cache: 'false',
    views: {
      'main-content@main': {
          templateUrl: 'maintenance/contents/main.html',
          controller: 'MaintenanceCtrl'
      }
    }
  })
}])

.controller('SerdeliveryCtrl', ["$rootScope", "$scope", "$state", "System", "ChecklistService", "SettingsService", "PopupServiceDeliveryModal", function ($rootScope, $scope, $state, System, ChecklistService, SettingsService, PopupServiceDeliveryModal) {

  $scope.listItems = [
    { id: "self_assessment", title: "Self-Assessment",       url: "main.serdelivery.self-assessment"},
    { id: "physical_referral", title: "Physician Referral",     url: "main.serdelivery.physical-referral"},
    { id: "wheelchair_evaluation", title: "Wheelchair Evaluation", url: "main.serdelivery.wheelchair-evaluation"},
    { id: "select_wheelchair", title: "Wheelchair Selection",   url: "main.serdelivery.select-wheelchair"},
    { id: "funding_process", title: "Funding Process",       url: "main.serdelivery.funding-process"},
    { id: "receive_wheelchair", title: "Receive Wheelchair", url: "main.serdelivery.receive-wheelchair"},
    { id: "maintain_and_repair", title: "Maintenance & Repair", url: "main.serdelivery.maintain-and-repair"}
  ];

  // Popup before child page
  //
  $rootScope.servdevPopupBeforePage = _popupBeforePage;
  $rootScope.openWheelchairChecklistSummary = _openWheelchairChecklistSummary;
  $rootScope.openWheelchairChecklist = _openWheelchairChecklist;
  $rootScope.openWheelchairChecklistOrSummary = _openWheelchairChecklistOrSummary;


  activate();

  /////////////////
  function activate() {
    _popupServiceDelivery();
  }


  // this function for checklist page other than self_assessment
  function _openWheelchairChecklistOrSummary() {
    var done = ChecklistService.isWheelchairChecklistDone();

    if (done) {
      _openWheelchairChecklistSummary();
    } else {
      _openWheelchairChecklist();
    }
  }


  /**
   * ISSUE
   * For Wheelchair checklist, cannot use this controller scope, but have to
   * use $rootScope. Why? because this controller/view will be inactive/hidden
   * when move to next page, so this scope will be disconnected from the view.
   * Hence, wont be available in view
   * That's why $rootScope will save it.
   * https://github.com/driftyco/ionic/issues/2742
   */
  function _openWheelchairChecklist() {
    // $rootScope.navigateTo('main.serdelivery.self-assessment')
    ChecklistService.openWheelchairChecklist($rootScope.$new())
    .then(function() {});
  }

  function _popupBeforePage(pageId) {

    return;

    // if ( !ChecklistService.checkAnyCheckedItems(pageId)) {
    //   //show pop up
    //   confirm('Learn about this step before you start', null, ['OK', 'Skip'])
    //     .then(cbSuccess, null);
    // }

    //////////////
    function cbSuccess() {
        // show info
        $scope.getInfo(pageId);
    }
  }

  function _popupServiceDelivery() {
    if ( !SettingsService.isStopPopupServiceDelivery() ) {
      var model = {
        stopPopupServiceDelivery: SettingsService.isStopPopupServiceDelivery()
      }

      PopupServiceDeliveryModal.show({model: model}).then(function(result) {
        SettingsService.setStopPopupServiceDelivery(result.stopPopupServiceDelivery);
      });
    }
  }

  function _openWheelchairChecklistSummary() {
    ChecklistService.openWheelchairChecklistSummary($rootScope.$new());
  }


  $scope.openSubModule = function(event, url) {

    $state.go(url);

    event.stopPropagation();
  }

  $scope.actionMenu = function(event, item) {
    if (item.disabled) {
      event.stopPropagation();
    }
  }

  // $scope.openFacebookPage = function() {
  //   System.openFacebookPage();
  // }

}])

.controller('SelfAssessmentCtrl', ["$scope", "$state", "$timeout", "System", "ChecklistService", "$ionicSlideBoxDelegate", function ($scope, $state, $timeout, System, ChecklistService, $ionicSlideBoxDelegate) {

  $scope.servdevPopupBeforePage(ChecklistService.pages.SELF_ASSESSMENT);

  activate();
  //////////////////////////////
  ///
  function activate() {
    loadData();
  }

  // Prepare checklist
  function loadData() {
    $scope.data = ChecklistService.getPageData(ChecklistService.pages.SELF_ASSESSMENT);
    // used to prevent manual checking the wheelchair checklist
    $scope.temp = {
      wc: ChecklistService.isWheelchairChecklistDone()
    }
  }

  $scope.openChecklist = function() {
    ChecklistService.openWheelchairChecklist($scope)
    .then(function() {
      // console.log(ChecklistService.isWheelchairChecklistDone());
      // reload current state
      loadData();
    });
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(ChecklistService.pages.SELF_ASSESSMENT, data);
  }

  $scope.openInsurance = function() {
    System.getModalPage("modals/insurance.html")
    .then(function(page) {
      page.show();
    });
  }

  $scope.onChangeWheelchairChecklistCheck = function(checked) {
    if(!checked && ChecklistService.isWheelchairChecklistDone()) {
      confirm('Unchecked this item will erase the checklist you have completed. Proceed?')
      .then(function() {
          ChecklistService.resetWheelchairChecklist().then(function() {
            alert('Wheelchair Checklist Erased.');
            loadData();
          });
      }, function() {
        $scope.temp.wc = true;
      })
    } else {
      alert('This checkbox will be automatically checked after you complete the checklist.');
      $scope.temp.wc = false;
    }
  }

}])

.controller('ReferralCtrl', ["$scope", "$state", "$timeout", "System", "TodoService", "ChecklistService", "StringTemplate", function ($scope, $state, $timeout, System,
  TodoService, ChecklistService, StringTemplate) {

  // add popup before
  $scope.servdevPopupBeforePage(ChecklistService.pages.PHYSICIAN_REFERRAL);


  $scope.wheelchairChecklistDone = ChecklistService.isWheelchairChecklistDone();
  $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.PHYSICIAN_REFERRAL);

  activate();

  //////////////////
  function activate() {
    init($scope.checklist);
  }


  $scope.addAppointment = function(which) {

    var event = TodoService.new();

    if(which == 'schedule') {
      event.title = StringTemplate.PR_APPOINTMENT_TITLE_DEFAULT;
      event.description = StringTemplate.PR_APPOINTMENT_DESC_DEFAULT;
    } else {
      event.title = StringTemplate.PR_TRANSPORT_TITLE_DEFAULT;
    }

    TodoService.openForm($scope, event)
    .then(function(event) {

    })
  }

  function init(data) {
      $scope.temp = $scope.temp || {};
      $scope.temp.check03 = data.checkWheelchairChecklistReference &&
            data.checkPrescriptionForWheelchairEvaluation;
  }

  $scope.onCheck03 = function(temp) {
    $scope.checklist.checkWheelchairChecklistReference = temp.check03;
    $scope.checklist.checkPrescriptionForWheelchairEvaluation = temp.check03;
    $scope.updateData($scope.checklist);
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(
      ChecklistService.pages.PHYSICIAN_REFERRAL, data)
      .then(cbSuccess);

    //////////////
    function cbSuccess() {
      init(data);
    }
  }

}])

.controller('WheelchairEvaluationCtrl', ["$scope", "$state", "$timeout", "System", "TodoService", "ChecklistService", "StringTemplate", function ($scope, $state, $timeout,
  System, TodoService, ChecklistService, StringTemplate) {

  // add popup before
  $scope.servdevPopupBeforePage(ChecklistService.pages.WHEELCHAIR_EVALUATION);

  $scope.wheelchairChecklistDone = ChecklistService.isWheelchairChecklistDone();
  $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.WHEELCHAIR_EVALUATION);

  activate();

  ///////////////////
  function activate() {
    init($scope.checklist);
  }

  $scope.addAppointment = function(param) {

    var event = TodoService.new();

    if (param === "session") {
      event.title = StringTemplate.WE_APPOINTMENT_TITLE;
      event.description = StringTemplate.WE_APPOINTMENT_DESC;
    } else if (param === "transport") {
      event.title = StringTemplate.WE_TRANSPORT_TITLE;
      event.description = "";
    }

    TodoService.openForm($scope, event)
    .then(function(event) {

    })
  }

  function init(data) {
      $scope.temp = $scope.temp || {};
      $scope.temp.check03 = data.checkWheelchairChecklistReference &&
            data.checkShowCurrentMobilityDevice &&
            data.checkObtainReferralForWheelchairSuplier &&
            data.checkDiscussNeeds &&
            data.checkFunctionalAssessment;
  }

  $scope.onCheck03 = function(temp) {
    $scope.checklist.checkWheelchairChecklistReference = temp.check03;
    $scope.checklist.checkShowCurrentMobilityDevice = temp.check03;
    $scope.checklist.checkObtainReferralForWheelchairSuplier = temp.check03;
    $scope.checklist.checkDiscussNeeds = temp.check03;
    $scope.checklist.checkFunctionalAssessment = temp.check03;
    $scope.updateData($scope.checklist);
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(
      ChecklistService.pages.WHEELCHAIR_EVALUATION, data)
      .then(cbSuccess);

    //////////////
    function cbSuccess() {
      init(data);
    }
  }

}])

.controller('SelectWheelchairCtrl', ["$scope", "$state", "$timeout", "System", "TodoService", "ChecklistService", "StringTemplate", function ($scope, $state, $timeout, System,
  TodoService, ChecklistService, StringTemplate) {

  // add popup before
  $scope.servdevPopupBeforePage(ChecklistService.pages.SELECT_WHEELCHAIR);

  $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.SELECT_WHEELCHAIR);

  activate();

  ///////////////////
  function activate() {
    init($scope.checklist);
  }

  $scope.addAppointment = function(param) {

    var event = TodoService.new();

    if(param === 'trial') {
      event.title = StringTemplate.WS_APPOINTMENT_TITLE;
      event.description = StringTemplate.WS_APPOINTMENT_DESC;
    } else if (param === 'transport') {
      event.title = StringTemplate.WS_TRANSPORT_TITLE;
    } else if (param === 'home_eval') {
      event.title = StringTemplate.WS_HOME_EVAL_TITLE;
      event.description = StringTemplate.WS_HOME_EVAL_DESC;
    }

    TodoService.openForm($scope, event)
    .then(function(event) {

    })
  }

  function init(data) {
      $scope.temp = $scope.temp || {};
      $scope.temp.check03 = data.checkBody &&
            data.checkOptions &&
            data.checkTestDrive &&
            data.checkSelectWheelchair;
  }

  $scope.onCheck03 = function(temp) {
    $scope.checklist.checkBody = temp.check03;
    $scope.checklist.checkOptions = temp.check03;
    $scope.checklist.checkTestDrive = temp.check03;
    $scope.checklist.checkSelectWheelchair = temp.check03;
    $scope.updateData($scope.checklist);
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(
      ChecklistService.pages.SELECT_WHEELCHAIR, data)
      .then(cbSuccess);

    //////////////
    function cbSuccess() {
      init(data);
    }
  }

}])

.controller('FundingCtrl', ["$scope", "$state", "$timeout", "System", "TodoService", "ChecklistService", function ($scope, $state, $timeout,
  System, TodoService, ChecklistService) {

  // add popup before
  $scope.servdevPopupBeforePage(ChecklistService.pages.FUNDING_PROCESS);

  // $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.FUNDING_PROCESS);

  activate();

  ///////////////////
  function activate() {
    // init($scope.checklist);
    // console.log($scope.checklist);
  }

}])

.controller('Funding2StepCtrl', ["$scope", "$state", "$stateParams", "$timeout", "System", "TodoService", "ChecklistService", function ($scope, $state, $stateParams,
  $timeout, System, TodoService, ChecklistService) {



  activate();

  ///////////////////
  function activate() {
    // init($scope.checklist);
    // console.log($scope.checklist);

    $scope.source = $stateParams.source;
    // if ($scope.source == 'private') {
    //   $scope.title = "Private Health Insurance";
    // } else {
    //   $scope.title = "Other Funding Sources";
    // }
    $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.FUNDING_PROCESS);
  }

  // $scope.checkUncheck = function(event, checklist, key) {
  //   if (event.target.checked == true) {
  //     event.preventDefault();
  //   } else if (event.target.checked == false) {
  //     checklist[key] = null;
  //   }
  // }
  $scope.setInsuranceDecision = function(event, checklist, decision) {
    if (event.target.checked == false) {
      checklist.checkInsuranceDecision = null;
    } else {
      checklist.checkInsuranceDecision = decision;
    }
  }

  function init(data) {
      $scope.temp = $scope.temp || {};
      $scope.temp.check03 = data.checkFormFormat &&
            data.checkPersonSubmit &&
            data.checkDecision &&
            data.checkPersonReceive;
  }

  $scope.onCheck03 = function(temp) {
    $scope.checklist.checkFormFormat = temp.check03;
    $scope.checklist.checkPersonSubmit = temp.check03;
    $scope.checklist.checkDecision = temp.check03;
    $scope.checklist.checkPersonReceive = temp.check03;
    $scope.updateData($scope.checklist);
  }

  /**
   * No need to add ng-click event for every element, just watch
   * the checklist object and save it when it changed
   */
  $scope.$watch('checklist', function(newValue) {
     $scope.updateData(newValue);
  }, true); // <-- objectEquality

  $scope.addAppointment = function(param) {

    var event = TodoService.new();

    if(true) {
      event.title = StringTemplate.EMPTY;
      event.description = StringTemplate.EMPTY;
    }

    TodoService.openForm($scope, event)
    .then(function(event) {

    })
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(
      ChecklistService.pages.FUNDING_PROCESS, data)
      .then(cbSuccess);

    //////////////
    function cbSuccess() {
      init(data);
    }
  }

}])

.controller('Funding2StepPublicCtrl', ["$scope", "$state", "$stateParams", "$timeout", "System", "TodoService", "ChecklistService", function ($scope, $state, $stateParams,
  $timeout, System, TodoService, ChecklistService) {

  activate();

  ///////////////////
  function activate() {
    $scope.source = $stateParams.source;
    $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.FUNDING_PROCESS);
  }

  // $scope.checkUncheck = function(event, checklist, key) {
  //   if (event.target.checked == true) {
  //     event.preventDefault();
  //   } else if (event.target.checked == false) {
  //     checklist[key] = null;
  //   }
  // }
  $scope.setInsuranceDecision = function(event, checklist, decision) {
    if (event.target.checked == false) {
      checklist.checkPublicInsuranceDecision = null;
    } else {
      checklist.checkPublicInsuranceDecision = decision;
    }
  }

  function init(data) {
      $scope.temp = $scope.temp || {};
      $scope.temp.check03 = data.checkPublicFormFormat &&
            data.checkPublicPersonSubmit &&
            data.checkPublicDecision &&
            data.checkPublicPersonReceive;
  }

  $scope.onCheck03 = function(temp) {
    $scope.checklist.checkPublicFormFormat = temp.check03;
    $scope.checklist.checkPublicPersonSubmit = temp.check03;
    $scope.checklist.checkPublicDecision = temp.check03;
    $scope.checklist.checkPublicPersonReceive = temp.check03;
    $scope.updateData($scope.checklist);
  }

  /**
   * No need to add ng-click event for every element, just watch
   * the checklist object and save it when it changed
   */
  $scope.$watch('checklist', function(newValue) {
     $scope.updateData(newValue);
  }, true); // <-- objectEquality

  $scope.addAppointment = function(param) {

    var event = TodoService.new();

    if(true) {
      event.title = StringTemplate.EMPTY;
      event.description = StringTemplate.EMPTY;
    }

    TodoService.openForm($scope, event)
    .then(function(event) {

    })
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(
      ChecklistService.pages.FUNDING_PROCESS, data)
      .then(cbSuccess);

    //////////////
    function cbSuccess() {
      init(data);
    }
  }

}])

.controller('ReceiveWheelchairCtrl', ["$scope", "$state", "$timeout", "System", "TodoService", "ChecklistService", "StringTemplate", function ($scope, $state,
  $timeout, System, TodoService, ChecklistService, StringTemplate) {


  // add popup before
  $scope.servdevPopupBeforePage(ChecklistService.pages.RECEIVE_WHEELCHAIR);

  activate();

  ///////////////////
  function activate() {
    /**
     * No need to add ng-click event for every element, just watch
     * the checklist object and save it when it changed
     */
    $scope.$watch('checklist', function(newValue) {
       $scope.updateData(newValue);
    }, true); // <-- objectEquality

    loadData();
  }

  function loadData() {
    $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.RECEIVE_WHEELCHAIR);
    // used to prevent manual checking the wheelchair checklist
    $scope.temp = {
      ce: ChecklistService.isChecklistExaminationAvailable()
    }
  }

  $scope.onChangeChecklistExaminationCheck = function(checked) {
    if(!checked && ChecklistService.isChecklistExaminationAvailable()) {
      confirm('Unchecked this item will reset the checklist you have completed. Proceed?')
      .then(function() {
          ChecklistService.resetChecklistExamination().then(function() {
            alert('Checklist Examination Erased.');
            loadData();
          });
      }, function() {
        $scope.temp.ce = true;
      })
    } else {
      alert('This checkbox will be automatically checked after you complete the checklist.');
      $scope.temp.ce = false;
    }
  }

  $scope.addAppointment = function(which) {

    var event = TodoService.new();

    if(which == 'finalfit') {
      event.title = StringTemplate.RW_FINALFIT_TITLE;
      event.description = StringTemplate.EMPTY;
    } else if (which == 'delivery') {
      event.title = StringTemplate.RW_DELIVERY_TITLE;
      event.description = StringTemplate.EMPTY;
    } else if (which == 'followup') {
      event.title = StringTemplate.RW_FOLLOWUP_TITLE;
      event.description = StringTemplate.EMPTY;
    }


    TodoService.openForm($scope, event)
    .then(function(event) {

    })
  }

  $scope.updateData = function(data) {
    ChecklistService.setPageData(
      ChecklistService.pages.RECEIVE_WHEELCHAIR, data)
      .then(cbSuccess);

    //////////////
    function cbSuccess() {
      // init(data);
    }
  }

}])

.controller('ReceiveWheelchairChecklistCtrl', ["$scope", "ChecklistService", function ($scope, ChecklistService) {
  $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.RECEIVE_WHEELCHAIR);
}])

.controller('ReceiveWheelchairChecklistTypeCtrl', ["$scope", "$state", "$stateParams", "$timeout", "System", "TodoService", "ChecklistService", "StringTemplate", function ($scope, $state,
  $stateParams, $timeout, System, TodoService, ChecklistService, StringTemplate) {

  $scope.checklist = ChecklistService.getPageData(ChecklistService.pages.RECEIVE_WHEELCHAIR);

  activate();

  ///////////////////
  function activate() {
    /**
     * No need to add ng-click event for every element, just watch
     * the checklist object and save it when it changed
     */
    $scope.$watch('checklist.checkUseChecklistItems', function(newValue, oldValue) {

      if (newValue == null) return;

      if (_.isEqual(newValue, oldValue)) return;

      if ($stateParams.type == "manual-independent") {
        if ($scope.checklist.checkUseChecklist != $stateParams.type) {
          $scope.checklist.checkUseChecklist = "manual-independent";
          $scope.checklist.checkUseChecklistItems = null;

          $scope.updateData($scope.checklist).then(function() {

            _.keys(oldValue).forEach(function(key) {
              delete newValue[key];
            })

            $scope.checklist.checkUseChecklistItems = newValue;

            $scope.updateData($scope.checklist);
          });

          return;
        }
      } else if ($stateParams.type == "manual-assisted") {
        if ($scope.checklist.checkUseChecklist != $stateParams.type) {
          $scope.checklist.checkUseChecklist = "manual-assisted";
          $scope.checklist.checkUseChecklistItems = null;

          $scope.updateData($scope.checklist).then(function() {

            _.keys(oldValue).forEach(function(key) {
              delete newValue[key];
            })

            $scope.checklist.checkUseChecklistItems = newValue;

            $scope.updateData($scope.checklist);
          });

          return;
        }
      } else if ($stateParams.type == "power") {
        if ($scope.checklist.checkUseChecklist != $stateParams.type) {
          $scope.checklist.checkUseChecklist = "power";
          $scope.checklist.checkUseChecklistItems = null;

          $scope.updateData($scope.checklist).then(function() {

            _.keys(oldValue).forEach(function(key) {
              delete newValue[key];
            })

            $scope.checklist.checkUseChecklistItems = newValue;

            $scope.updateData($scope.checklist);
          });

          return
        }
      }

      $scope.checklist.checkUseChecklistItems = newValue;
      $scope.updateData($scope.checklist);

    }, true); // <-- objectEquality
  }

  $scope.updateData = function(data) {
    return ChecklistService.setPageData(
      ChecklistService.pages.RECEIVE_WHEELCHAIR, data);
  }
}])

.controller('GlossaryCtrl', ["$scope", "$state", "$stateParams", "$timeout", "ChecklistService", function ($scope, $state,
  $stateParams, $timeout, ChecklistService) {

  ChecklistService.getGlossary().then(function(data) {
    $scope.listItems = data;
  })
}])

.controller('GlossaryDetailCtrl', ["$scope", "$state", "$stateParams", "$timeout", "ChecklistService", function ($scope, $state,
  $stateParams, $timeout, ChecklistService) {

  ChecklistService.getGlossary().then(function(data) {
    $scope.gls = _.find(data, function(item) {
      return item.id == $stateParams.index;
    })
  })

}])

;

(function() {
    'use strict';

    angular
        .module('smartvcApp.services')
        .factory('ChecklistService', ChecklistService)
        .factory('ServiceDeliveryService', ChecklistService);

    ChecklistService.$inject = ['$q', '$timeout', 'StorageService', 'System',
      '$ionicSlideBoxDelegate', '$log', '$rootScope', '$http'];

    /* @ngInject */
    function ChecklistService($q, $timeout, StorageService, System,
      $ionicSlideBoxDelegate, $log, $rootScope, $http) {

      var service = {
          get: _get,
          set: _set,
          reset: _reset,
          checkAnyCheckedItems: _checkAnyCheckedItems,
          getPageData: _getPageData,
          setPageData: _setPageData,
          pages: _getPagesId(),
          openWheelchairChecklist: _openWheelchairChecklist,
          openWheelchairChecklistSummary: _openWheelchairChecklistSummary,
          isWheelchairChecklistDone: _isWheelchairChecklistDone,
          resetWheelchairChecklist: _resetWheelchairChecklist,

          isChecklistExaminationAvailable: _isChecklistExaminationAvailable,
          resetChecklistExamination: _resetChecklistExamination,

          getGlossary: _getGlossary,
          getQAData: _getQAData,

          getWheelchairChecklistData: _getWheelchairChecklistData

      };

      var _model = {};
      _model[_getPagesId().SELF_ASSESSMENT]       = _modelSelfAssessment;
      _model[_getPagesId().PHYSICIAN_REFERRAL]    = _modelPhysicianReferral;
      _model[_getPagesId().WHEELCHAIR_EVALUATION] = _modelWheelchairEvaluation;
      _model[_getPagesId().SELECT_WHEELCHAIR]     = _modelSelectWheelchair;
      _model[_getPagesId().FUNDING_PROCESS]       = _modelFundingProcess;
      _model[_getPagesId().RECEIVE_WHEELCHAIR]    = _modelReceiveWheelchair;

      return service;

      ////////////////

      function _get() {
        var db = StorageService.get();
        if (!db.checklist) {
          db.checklist = {};
          StorageService.set(db);
        }

        return db.checklist;
      }

      function _set(checklist) {
        var db = StorageService.get();
        db.checklist = angular.copy(checklist);
        StorageService.set(db);
      }

      function _reset() {
        _set({});
      }

      function _getPagesId() {
        return {
          SELF_ASSESSMENT: 'self_assessment',
          PHYSICIAN_REFERRAL: "physical_referral",
          WHEELCHAIR_EVALUATION: "wheelchair_evaluation",
          SELECT_WHEELCHAIR: "select_wheelchair",
          FUNDING_PROCESS: "funding_process",
          RECEIVE_WHEELCHAIR: "receive_wheelchair"
        };
      }

      function _isWheelchairChecklistDone() {
        var selfAssessment = _getPageData(_getPagesId().SELF_ASSESSMENT);

        return selfAssessment.wheelchairChecklist &&
               selfAssessment.wheelchairChecklist.doneAt ? true : false;
      }

      function _isChecklistExaminationAvailable() {
        var checklist = _getPageData(_getPagesId().RECEIVE_WHEELCHAIR);

        return checklist.checkUseChecklist ? true : false;
      }

      function _resetChecklistExamination() {

        var data = _getPageData(_getPagesId().RECEIVE_WHEELCHAIR);
        data.checkUseChecklist = null;
        data.checkUseChecklistItems = null;

        return _setPageData(_getPagesId().RECEIVE_WHEELCHAIR, data);
      }

      function _checkAnyCheckedItems(pageId) {
        var data = _getPageData(pageId);

        if (pageId === _getPagesId().SELF_ASSESSMENT) {
          return (data.wheelchairChecklist && data.wheelchairChecklist.doneAt) || data.insurance;
        } else {
          for (var property in data) {
            if (data.hasOwnProperty(property)) {
              if (data[property]) {
                return true;
              }
            }
          }
        }

        return false;
      }

      function _resetWheelchairChecklist() {

        var data = _getPageData(_getPagesId().SELF_ASSESSMENT);
        data.wheelchairChecklist = _modelWheelchairChecklist();

        return _setPageData(_getPagesId().SELF_ASSESSMENT, data);
      }

      function _getPageData(pageId) {
        var checklist = _get();
        var node = _.camelCase(pageId);
        var model = _model[pageId]();

        if (!checklist[node]) {

          if (model == null) {
            $log.error("Object not found with pageId '" + pageId + "'");
            return null;
          }

          checklist[node] = model;
          _set(checklist);
        }

        if (pageId === _getPagesId().SELF_ASSESSMENT) {
          if (checklist[node].wheelchairChecklist == null) {
            checklist[node].wheelchairChecklist = _modelWheelchairChecklist();
          }
        }

        return _.merge({}, model, checklist[node]);
      }


      function _setPageData(pageId, data) {
        var defer = $q.defer();
        var checklist = _get();
        var node = _.camelCase(pageId);

        $timeout(function() {
          if (!checklist[node]) {
            $log.error("Object not found with pageId '" + pageId + "'");
            defer.reject();
            return;
          }

          _.merge(checklist[node], data);
          _set(checklist);
          defer.resolve();
        }, 1);

        return defer.promise;
      }

      function _getWheelchairChecklistData() {
        var data = _getPageData(_getPagesId().SELF_ASSESSMENT);
        return data.wheelchairChecklist;
      }

      function _openWheelchairChecklistSummary($scope) {
        var defer = $q.defer();

        var data = _getPageData(_getPagesId().SELF_ASSESSMENT);
        $scope.checklist = data.wheelchairChecklist;

        System.getModalPage("servicedelivery/wc_checklist_summary.html", $scope)
        .then(function(page) {

          if(data.wheelchairChecklist.doneAt == null) {
            defer.reject();
          } else {
            page.show();
            defer.resolve();
          }

        });


        return defer.promise;
      }

      function _openWheelchairChecklist($scope) {
        // var self = this;
        var defer = $q.defer();
        var outerSlideBox = null;

        var data = _getPageData(_getPagesId().SELF_ASSESSMENT);
        $scope.data = data;
        $scope.checklist = data.wheelchairChecklist;

        System.getModalPage("servicedelivery/wheelchair_checklist.html", $scope)
        .then(function(page) {


            // Below solution for ionicModal using rootScope
            // refer to this https://github.com/driftyco/ionic/issues/2754
            // change with decorator
            // ---------------------------
            // var name = 'outerSlideBox';
            // var instances = $ionicSlideBoxDelegate.$getByHandle(name)._instances;
            // outerSlideBox = _.where(instances, { '$$delegateHandle': name })[0];
            // ---------------------------
            outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
            $scope.updateSlidebox();
            page.show();

          $timeout(function(){

            // // always start from the first page
            // outerSlideBox.slide(0);

            /**
             * below code not stable. Change by calling scope.updateSlidebox
             */
            // $scope.checklistTotal = outerSlideBox.slidesCount();
            // $scope.checklistCurrentIndex = outerSlideBox.currentIndex();

            // disable the slide event for ion-slidebox
            outerSlideBox.enableSlide(false);
          },100);
        });

        $scope.updateSlidebox = function(makeDouble) {

            outerSlideBox.update();

            $timeout( function() {
              $scope.checklistTotal = outerSlideBox.slidesCount();
              $scope.checklistCurrentIndex = outerSlideBox.currentIndex();
            }, 0);

        }

        $scope.bindCheckboxValue = function(list, selectedValue) {
            var _list = list;
            var model = selectedValue;

            _list = _list.map(function(item) {
              model = model || "";

              return {
                title: item.title,
                checked: model.indexOf(item.title) != -1
              }
            })
            return _list;
        }

        $scope.bindCheckboxValueNew = function(list, selectedValue) {
            var _list = list;
            var model = selectedValue;

            _list = _list.map(function(item) {
              model = model || "";

              return {
                title: item.title,
                value: item.value
              }
            })
            return _list;
        }

        $scope.getCheckedItems = function(list) {
            console.log("Checked list");
            var _list = [];

            for(var i=0; i<list.length; i++) {
                if(list[i]["checked"]) {
                    console.log(list[i]["title"]);
                    _list.push(list[i]);
                }
            }

            return _list;
        }

        $scope.checkboxItems = [
            [], // 0
            [
             {title: "Unable to Walk", value: false},
             {title: "Feet/legs swell", value: false},
             {title:  "Tire easily", value: false},
             {title: "Trouble breathing at rest", value: false},
             {title: "Balance is poor", value: false},
             {title: "Have fallen before", value: false},
             {title: "Arm/shoulder pain", value: false},
             {title: "General Pain", value: false},
             {title: "Pressure injuries", value: false},

             {title: "Muscle spasms", value: false},
             {title: "Seizure", value: false},
             {title: "Dizziness", value: false},
             {title: "Poor Vision", value: false},
             {title:  "Stiff or locked joints", value: false},
             {title: "Curved Spine", value: false},
             {title: "Wear leg/body brace", value: false},
             {title: "Wear artificial limbs", value: false},
             {title: "Spinal Cord Injury", value: false},

             {title: "Multiple Sclerosis", value: false},
             {title: "Amputee", value: false},
             {title: "Amyotrophic Lateral Sclerosis", value: false},
             {title: "Brown-Sequard Syndrome", value: false},
             {title: "Cauda Equina", value: false},
             {title: "Cerebral Palsy", value: false},
             {title: "Fibromyalgia", value: false},
             {title: "Guillain-Barre Syndrome", value: false},
             {title: "Lupus", value: false},

             {title: "Polio", value: false},
             {title: "Spina Bifida", value: false},
             {title: "Spinal Muscular Atrophy", value: false},
             {title: "Spinal Stenosis", value: false},
             {title: "Stroke", value: false},
             {title: "Syringomyelia", value: false},
             {title: "Tethered Spinal Cord Syndrome", value: false},
             {title: "Transverse Myelitis", value: false},
             {title: "Other", value: false},

             {title: "other_field", value: null}
            ],   // 1. medicalConcernList
            [], // 2
            [], // 3,
            [   // 4. mobilityDeviceList
              { title: "Scooter" },
              { title: "Manual Wheelchair" },
              { title: "Power Wheelchair" },
              { title: "I don't know" }
            ],
            [
                {title: "Get around my home", value: false},
                {title: "Transfer to bed", value: false},
                {title: "Get under table/desk", value: false},
                {title: "Use bathroom", value: false},
                {title: "Use shower", value: false},
                {title: "Fix meals", value: false},
                {title: "Go shopping", value: false},
                {title: "Go outside", value: false},
                {title: "Attend community activities", value: false},

                {title: "Visit family/friends", value: false},
                {title: "Ride in car or van", value: false},
                {title: "Use public transportation", value: false},
                {title: "Exercise", value: false},
                {title: "School", value: false},
                {title: "Work", value: false},
                {title: "Entertainment/sports events", value: false},
                {title: "Other", value: false},

                {title: "other_value", value: null}
            ], // 5
            [
                {title: "Sedan", value: false, type: "Personal Vehicle Type"},
                {title: "SUV", value: false, type: "Personal Vehicle Type"},
                {title: "Van", value: false, type: "Personal Vehicle Type"},
                {title: "Truck", value: false, type: "Personal Vehicle Type"},

                {title: "By myself", value: false, type:"Load/Unload"},
                {title: "Help from others (e.g., caregivers)", value: false, type:"Load/Unload"},

                {title: "Taxi", value: false, type:"Public Transportation Type"},
                {title: "Bus", value: false, type:"Public Transportation Type"},
                {title: "Train", value: false, type:"Public Transportation Type"},
                {title: "Airplane", value: false, type:"Public Transportation Type"},

                {title: "By myself", value: false, type:"Get On/Off"},
                {title: "Help from others (e.g., drivers)", value: false, type:"Get On/Off"}
            ],   // 6. howToTransport,
            [   // 7. wheelchair features
              { title: "Comfort" },
              { title: "Speed" },
              { title: "Posture adjustment" },
              { title: "Sitting stability" },
              { title: "Carry things" },
              { title: "Support standing" },
              { title: "Prevent pressure injury" },
              { title: "Reach or use controls (e.g., joystick)" },
              { title: "Reach floor/shelves" },
              { title: "Go over rough terrain" },
              { title: "Work with communication device" },
              { title: "Work with breathing device" },
              { title: "My caregiver can control my chair" },
              { title: "Maneuverability" },
              { title: "Negotiate higher-level surfaces (e.g., ramps and curb cuts)" }
            ],
            [],[], [], // 8, 9, 10
            [ // 11. time in wheelchair
              { title: "Less than 4 hours" },
              { title: "4 to 8 hours" },
              { title: "8 to 12 hours" },
              { title: "Over 12 hours" }
            ],
            [ // 12(3a)
                { title: "One step" },
                { title: "More than one step" }
            ]
          ];

        $scope.nextChecklistPage = function() {
          $timeout(function() {
            outerSlideBox.next();
            $scope.checklistCurrentIndex = outerSlideBox.currentIndex();
          }, 100);
        }

        $scope.prevChecklistPage = function() {
          $timeout(function() {
            outerSlideBox.previous();
            $scope.checklistCurrentIndex = outerSlideBox.currentIndex();
          }, 100);
        }

        $scope.finish = function(data) {
          confirm('This action will save your checklist. Continue?')
          .then(function() {
            data.wheelchairChecklist.setDone();
            _setPageData(_getPagesId().SELF_ASSESSMENT, data).then(cbSuccess);
            //////////////////////
            function cbSuccess() {
              $scope.page.close();

              //push-data
              $scope.$emit('event:wheelchair-checklist-data-updated');

              defer.resolve(data.wheelchairChecklist);
            }

          }, function() {
            defer.reject();
          })

        }

        return defer.promise;
      }

      function _modelSelfAssessment() {
        var self = this;

        var model = {
          wheelchairChecklist: _modelWheelchairChecklist(),
          insurance: null
        }

        return model;
      }

      function _modelWheelchairChecklist() {
        var model = {
          q01: [
            {title: "Unable to Walk", value: false},
            {title: "Feet/legs swell", value: false},
            {title:  "Tire easily", value: false},
            {title: "Trouble breathing at rest", value: false},
            {title: "Balance is poor", value: false},
            {title: "Have fallen before", value: false},
            {title: "Arm/shoulder pain", value: false},
            {title: "General Pain", value: false},
            {title: "Pressure injuries", value: false},

            {title: "Muscle spasms", value: false},
            {title: "Seizure", value: false},
            {title: "Dizziness", value: false},
            {title: "Poor Vision", value: false},
            {title:  "Stiff or locked joints", value: false},
            {title: "Curved Spine", value: false},
            {title: "Wear leg/body brace", value: false},
            {title: "Wear artificial limbs", value: false},
            {title: "Spinal Cord Injury", value: false},

            {title: "Multiple Sclerosis", value: false},
            {title: "Amputee", value: false},
            {title: "Amyotrophic Lateral Sclerosis", value: false},
            {title: "Brown-Sequard Syndrome", value: false},
            {title: "Cauda Equina", value: false},
            {title: "Cerebral Palsy", value: false},
            {title: "Fibromyalgia", value: false},
            {title: "Guillain-Barre Syndrome", value: false},
            {title: "Lupus", value: false},

            {title: "Polio", value: false},
            {title: "Spina Bifida", value: false},
            {title: "Spinal Muscular Atrophy", value: false},
            {title: "Spinal Stenosis", value: false},
            {title: "Stroke", value: false},
            {title: "Syringomyelia", value: false},
            {title: "Tethered Spinal Cord Syndrome", value: false},
            {title: "Transverse Myelitis", value: false},
            {title: "Other", value: false},

            {title: "other_field", value: null}
          ], //multivalue
          q02: null,
          q02Unit: 'in',
          q03: null,
          q04: null, //multivalue
          q05: [
            {title: "Get around my home", value: false},
            {title: "Transfer to bed", value: false},
            {title: "Get under table/desk", value: false},
            {title: "Use bathroom", value: false},
            {title: "Use shower", value: false},
            {title: "Fix meals", value: false},
            {title: "Go shopping", value: false},
            {title: "Go outside", value: false},
            {title: "Attend community activities", value: false},

            {title: "Visit family/friends", value: false},
            {title: "Ride in car or van", value: false},
            {title: "Use public transportation", value: false},
            {title: "Exercise", value: false},
            {title: "School", value: false},
            {title: "Work", value: false},
            {title: "Entertainment/sports events", value: false},
            {title: "Other", value: false},

            {title: "other_value", value: null}
          ],
          q06: [
            {title: "Sedan", value: false, type: "Personal Vehicle Type"},
            {title: "SUV", value: false, type: "Personal Vehicle Type"},
            {title: "Van", value: false, type: "Personal Vehicle Type"},
            {title: "Truck", value: false, type: "Personal Vehicle Type"},

            {title: "By myself", value: false, type:"Load/Unload"},
            {title: "Help from others (e.g., caregivers)", value: false, type:"Load/Unload"},

            {title: "Taxi", value: false, type:"Public Transportation Type"},
            {title: "Bus", value: false, type:"Public Transportation Type"},
            {title: "Train", value: false, type:"Public Transportation Type"},
            {title: "Airplane", value: false, type:"Public Transportation Type"},

            {title: "By myself", value: false, type:"Get On/Off"},
            {title: "Help from others (e.g., drivers)", value: false, type:"Get On/Off"}
          ],
          q07: null, //multivalue
          q08: null,
          q09: {
            Make: null,
            Model: null
          },
          q10: null,
          q11: null,
          q12: null,
          doneAt: null,

          _multiValue: function(variable, value, checked) {
            var temp = variable || "";
            if (temp.trim() == "")
              temp = [];
            else
              temp = temp.split(' , ');

            if (checked) {
              temp.push(value);
            } else {
              var index = temp.indexOf(value);
              if (index > -1) {
                temp.splice(index, 1);
              }
            }

            return temp.join(', ');
          },

          setQ01: function(value, checked) {
            this.q01 = this._multiValue(this.q01, value, checked);
          },

          setQ04: function(value, checked) {
            this.q04 = this._multiValue(this.q04, value, checked);
          },

          setQ05: function(value, checked) {
            this.q05 = this._multiValue(this.q05, value, checked);
          },

          setQ06: function(value, checked) {
            this.q06 = this._multiValue(this.q06, value, checked);
          },

          setQ07: function(value, checked) {
            this.q07 = this._multiValue(this.q07, value, checked);
          },

          setDone: function() {
            this.doneAt = new Date();
          }

        };

        return model;
      }

      function _modelPhysicianReferral() {
        var model = {
          checkScheduleAppointment: null,
          checkArrangeTransportation: null,
          checkWheelchairChecklistReference: null,
          checkPrescriptionForWheelchairEvaluation: null
        };

        return model;
      }

      function _modelWheelchairEvaluation() {
        var model = {
          checkScheduleWheelchairEvaluationSession: null,
          checkArrangeTransportation: null,
          checkWheelchairChecklistReference: null,
          checkShowCurrentMobilityDevice: null,
          checkObtainReferralForWheelchairSuplier: null
        }

        return model;
      }

      function _modelSelectWheelchair() {
        var model = {
          checkScheduleWheelchairTrialSession: null,
          checkArrangeTransportation: null,
          checkBody: null,
          checkOptions: null,
          checkTestDrive: null,
          checkSelectWheelchair: null,
          checkScheduleHomeEvaluation: null
        }

        return model;
      }

      function _modelFundingProcess() {
        var model = {
          checkSupplier: null,
          checkInsurance: null,
          checkInsuranceDecision: null,

          // checkSupplierFinalAssess: null,
          // checkTherapistFinalAssess: null,
          checkInformTherapist: null,
          checkEstimatedTime: null,

          checkContactTherapist: null,
          checkCallInsurance: null,
          checkConsultSuplierTherapist: null,
          checkPrepareAppeal: null,
          checkFileAppeal: null,

          checkPublicFormFormat: null,
          checkPublicPersonSubmit: null,
          checkPublicDecision: null,
          checkPublicPersonReceive: null,

          checkPublicInsuranceDecision: null,
          checkPublicInformTherapist: null,
          checkPublicEstimatedTime: null,

          checkPublicContactTherapist: null,
          checkPublicCallInsurance: null,
          checkPublicConsultSuplierTherapist: null,
          checkPublicPrepareAppeal: null,
          checkPublicFileAppeal: null,
        }

        return model;
      }

      function _modelReceiveWheelchair() {
        var model = {
          checkFollowUpSupplier: null,
          checkScheduleFinalAssessment: null,
          checkReviewUseWheelchair: null,
          checkRequestTraining: null,
          checkUseChecklist: null,
          checkScheduleDelivery: null
        }

        return model;
      }

    function _getGlossary() {
      var d = $q.defer();

      $http.get('json/glossary.json').then(function(response) {
        d.resolve(response.data);
      }, function(reason) {
        d.reject(reason);
      })

      return d.promise;
    }

    function _getQAData() {
        var d = $q.defer();

        $http.get('json/qa-serdel.json').then(function(response) {
          d.resolve(response.data);
        }, function(reason) {
          d.reject(reason);
        })

        return d.promise;
    }
  }


})();

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:SettingsCtrl
 * @description
 * # SettingsCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(['$stateProvider',
  function($stateProvider) {
    $stateProvider

    .state('main.settings', {
      url: '/settings',
      views: {
        'main-content@main': {
          templateUrl: 'settings.html',
          controller: 'SettingsCtrl'
        }
      }
    })

    .state('main.settings.device-type', {
      url: '/device-type',
      views: {
        'main-content@main': {
          templateUrl: 'settings-devicetype.html',
          controller: 'SettingsDeviceCtrl'
        }
      }
    })

    // .state('main.settings-change-email', {
    //   url: '/settings/email/change',
    //   views: {
    //     'settings-tab': {
    //       templateUrl: 'change-email.html',
    //       controller: 'SettingsEmailCtrl'
    //     }
    //   }
    // })

    // .state('main.settings-change-password', {
    //   url: '/settings/password/change',
    //   views: {
    //     'settings-tab': {
    //       templateUrl: 'change-password.html',
    //       controller: 'SettingsChPasswordCtrl'
    //     }
    //   }
    // })

  }
])

.controller('SettingsCtrl', ["$scope", "System", "SettingsService", "AuthService", "AssessmentPusherService", "$ionicLoading", function($scope, System, SettingsService, AuthService, AssessmentPusherService, $ionicLoading) {

    $scope.$on( "$ionicView.beforeEnter", function( scopes, states ) {
      $scope.settings = SettingsService.get();
    });

  // $scope.logInOutLabel = "Login";
  // $scope.authenticated = AuthService.isAuthenticated();

  $scope.staySignIn = function() {
    SettingsService.setStaySignIn($scope.settings.staySignIn);
  }

  $scope.serviceDeliveryMessage = function() {
    SettingsService.setStopPopupServiceDelivery($scope.settings.stopPopupServiceDelivery);
  }

  $scope.stopPopupSetupHow = function() {
    SettingsService.setStopPopupSetupHow($scope.settings.stopPopupSetupHow);
  }

  $scope.archiveData = function() {
    confirm("This process will archive all data collected on this app to the server. Study staff will protect your personal information closely so no one will be able to connect your responses and any other information that identifies you. Do you want to continue?", "SMART").then(cbContinue);

    function cbContinue() {
      $ionicLoading.show();

      AssessmentPusherService.sendDumpData().then(function() {
        $ionicLoading.hide();
        alert("Archived success. Thank you");
      }, function(error) {
        $ionicLoading.hide();
        console.error(error);
        alert(error.message);
      })
    }
  }
}])

.controller('SettingsDeviceCtrl', ["$scope", "$injector", "$ionicNavBarDelegate", "SettingsService", function($scope, $injector, $ionicNavBarDelegate, SettingsService) {
  $scope.deviceTypeList = SettingsService.getDeviceTypeList();
  $scope.settings = SettingsService.get();

  $scope.save = function() {
    // var form = $scope.settingsForm;
    // if (form.$dirty && form.$valid) {
      SettingsService.setDeviceType($scope.settings.deviceType);
    // }

    // go back
    navigateTo("^", {}, { reload: true });
    // $ionicNavBarDelegate.back();
  }

}])

.controller('SettingsEmailCtrl', ["$scope", "$ionicNavBarDelegate", function($scope, $ionicNavBarDelegate) {

  // $scope.settings = UserHandler.getFromLocal();

  $scope.save = function() {
    // console.log($scope.settingsForm);
    var form = $scope.settingsForm;
    if (form.$dirty && form.$valid) {
      UserHandler.saveToLocal($scope.settings);
    }

    // go back
    $ionicNavBarDelegate.back();

  }

  // $scope.$watch('settings.email', function(value) {
  //   if (value.trim() !== "") {
  //     UserHandler.saveToLocal($scope.settings);
  //   }
  // })


}])

.controller('SettingsChPasswordCtrl', ["$scope", "$ionicLoading", "$ionicNavBarDelegate", "$timeout", "AuthService", function($scope, $ionicLoading, $ionicNavBarDelegate, $timeout, AuthService) {

  // $scope.settings = UserHandler.getFromLocal();

  $scope.save = function() {

    $ionicLoading.show({
      template: 'Changing...'
    });

    var form = $scope.settingsForm;
    if (form.$dirty && form.$valid) {
      var change = AuthService.changePassword($scope.settings);
      change.then(function(data) {

        $ionicLoading.show({
          template: 'success'
        });
      }, function() {
        $ionicLoading.show({
          template: 'failed'
        });
      })

      $timeout(function() {
        $ionicLoading.hide();
        $ionicNavBarDelegate.back();
      }, 1500);

    }
  }

  // $scope.$watch('settings.email', function(value) {
  //   if (value.trim() !== "") {
  //     UserHandler.saveToLocal($scope.settings);
  //   }
  // })


}])
'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:CalendarCtrl
 * @description
 * # CalendarCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(['$stateProvider',
  function($stateProvider) {
    $stateProvider

    // setup calendar
    .state('main.todo', {
      url: '/todo',
      views: {
        'main-content@main': {
          templateUrl: 'todo/main.html',
          controller: 'TodoCtrl'
        }
      }
    })

    .state('main.todo-detail', {
      url: '/todo/:id',
      views: {
        'main-content@main': {
          templateUrl: 'todo/main-detail.html',
          controller: 'TodoDetailCtrl'
        }
      }
    })

    .state('main.todo-form', {
      url: '/todo/form/:id',
      views: {
        'main-content@main': {
          templateUrl: 'todo/event-form.html',
          controller: 'TodoEventCtrl'
        }
      }
    })

    .state('main.todo-form.optreminder', {
      url: '/optreminder',
      views: {
        'main-content@main': {
          templateUrl: 'todo/reminder-select.html',
          controller: 'TodoEventCtrl'
        }
      }
    })

  }
])

.controller('TodoCtrl', ["$scope", "$state", "$ionicActionSheet", "TodoService", function($scope, $state, $ionicActionSheet, TodoService) {

  // at first time, event handler is not available yet, hence need this step
  $scope.todos = TodoService.findAll();

  $scope.$on('tabs:todo-selected', function() {
    $scope.todos = TodoService.findAll();
  })

  $scope.moreThan14 = function(remaining) { return remaining > 14 }
  $scope.moreThan3  = function(remaining) { return remaining >  3 || remaining <= 14}
  $scope.lessThan3  = function(remaining) { return remaining <= 3 }
  $scope.threeDigit = function(remaining) { return (remaining <= 100) || (remaining >= 100) }
  $scope.twoDigit   = function(remaining) { return remaining > 100 && remaining < 100 }


  $scope.addNewEvent = function() {
    TodoService.openForm($scope)
    .then(function(event) {
      $scope.todos = TodoService.findAll();
    });
    // $state.go('main.todo-form', {id: 0});
  }

  $scope.setDone = function($e, task) {
        if (task.isDone) {
            confirm("This action will move your \"To Do\" task from the \"Completed Tasks\" tab to the \"To-Do\" tab.\n Do you want to continue ?", "SMART",
            ["Yes", "No"]).then(function() {
                TodoService.setUnDone(task);
            });

        } else {
            confirm("This action will mark your \"To Do\" task as done, and will hide it from your list. You will be able to access your completed tasks by clicking the check mark in the top left corner of this page. \nDo you want to continue ?", "SMART",
            ["Yes", "No"]).then(function() {
                TodoService.setDone(task);
            });
        }
  }

  $scope.askAction = function($e, event) {
    var sheet = $ionicActionSheet.show({
      buttons: [{
        text: 'View Detail'
      }, {
        text: 'Edit Event'
      }, {
        text: 'Delete Event'
      }],
      cancelText: 'Cancel',
      cancel: function() {
        // add cancel code..
      },
      buttonClicked: function(index) {

        switch (index) {
          case 0:
            $state.go('main.todo-detail', {
              id: event.id
            });
            break;
          case 1:
            event = TodoService.findById(event.id);
            TodoService.openForm($scope, event)
            .then(function(event) {
              $scope.todos = TodoService.findAll();
            });
            break;
          case 2:
            confirm("Are you sure you want to delete this event '" + event.title + "'?")
            .then(function() {
              TodoService.delete(event.id);
              $scope.todos = TodoService.findAll();
            })
            break;
        }

        return true;
      }
    });

  }
}])

.controller('TodoDetailCtrl', ["$scope", "TodoService", "$filter", "$stateParams", function($scope, TodoService, $filter, $stateParams) {

  // var todoList = TodoService.findAll(),
  //   id = $stateParams.id,
  //   todos = $filter('filter')(todoList, {
  //     id: id
  //   });

  $scope.todo = TodoService.findById($stateParams.id);
  // if (todos.length > 0) {
  //   $scope.todo = todos[0];
  //   // $scope.todo.note = $scope.todo.note.replace("\n", "<br>");
  // }
}])

.controller('TodoEventCtrl', ["$scope", "$state", "$stateParams", "TodoService", function($scope, $state, $stateParams, TodoService) {
  // NOT USED anymore, since only using modal window

  // var event = null;

  // if($stateParams.id == 0) {
  //   $scope.event = TodoService.new();
  //   $scope.verb = "New";
  // } else {
  //   $scope.event = TodoService.findById($stateParams.id);
  //   $scope.verb = "Edit";
  // }

  // $scope.toggleAllDay = function(event) {
  //   if(event.isAllDay) {
  //     event.dtTo = new Date(event.dtFrom);
  //     event.dtFrom.setHours(0,0,0,1);
  //     event.dtTo.setHours(24,0,0,0);
  //   }
  // }

  // $scope.save = function(event) {
  //   TodoService.add(event);
  //   $state.go('main.todo');
  // }

}])

;

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.Auth
 * @description
 * # Auth
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('UseNavData', function() {

    var service = {};
    service.navComponents = {
        pages: [{
            title: "Bases",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "bases-front"}, title: "Front" },
                { state: "main.usewheelchair.components.component.page", params: {name: "bases-mid"}, title: "Mid"},
                { state: "main.usewheelchair.components.component.page", params: {name: "bases-rear"}, title: "Rear"},
                { state: "main.usewheelchair.components.component.page", params: {name: "bases-summary"}, title: "Summary", hidden: true}
            ]
        },
        {
            title: "Seat",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "psf-tilt"}, title: "Tilt" },
                { state: "main.usewheelchair.components.component.page", params: {name: "psf-recline"}, title: "Recline" },
                { state: "main.usewheelchair.components.component.page", params: {name: "psf-elevation"}, title: "Elevation" },
                { state: "main.usewheelchair.components.component.page", params: {name: "psf-standing"}, title: "Standing" }
            ]
        },
        {
            title: "Tire",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "tire-pneumatic"}, title: "Pneumatic" },
                { state: "main.usewheelchair.components.component.page", params: {name: "tire-solid"}, title: "Solid" }
            ]
        },
        {
            title: "Backrest",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "backrest-soft"}, title: "Soft" },
                { state: "main.usewheelchair.components.component.page", params: {name: "backrest-rigid"}, title: "Rigid" }
            ]
        },
        {
            title: "Armrest",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "armrest-up"}, title: "Cantilever/Flip-back" },
                { state: "main.usewheelchair.components.component.page", params: {name: "armrest-removable"}, title: "2 Point Flip-back" }
            ]
        },
        {
            title: "Footrest",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "footrest-elevating"}, title: "Elevating" },
                { state: "main.usewheelchair.components.component.page", params: {name: "footrest-center"}, title: "Center" },
                { state: "main.usewheelchair.components.component.page", params: {name: "footrest-away"}, title: "Away" }
            ]
        },
        {
            title: "Cushion",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "cushion-contoured"}, title: "Foam" },
                { state: "main.usewheelchair.components.component.page", params: {name: "cushion-air"}, title: "Air" },
                { state: "main.usewheelchair.components.component.page", params: {name: "cushion-gel"}, title: "Gel" },
                { state: "main.usewheelchair.components.component.page", params: {name: "cushion-capsules"}, title: "Custom" }
            ]
        },
        {
            title: "Controller",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "controller-types"}, title: "Types"},
                { state: "main.usewheelchair.components.component.page", params: {name: "controller-joystick"}, title: "Joystick" },
                { state: "main.usewheelchair.components.component.page", params: {name: "controller-alternatives"}, title: "Alternatives" }
            ]
        },
        {
            title: "Accessories",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "accessories-headrest"}, title: "Headrest" },
                { state: "main.usewheelchair.components.component.page", params: {name: "accessories-trunk"}, title: "Trunk" },
                { state: "main.usewheelchair.components.component.page", params: {name: "accessories-hip"}, title: "Hip" },
                { state: "main.usewheelchair.components.component.page", params: {name: "accessories-lap"}, title: "Legs" }

            ]
        },
        {
            title: "Securements",
            children: [
                { state: "main.usewheelchair.components.component.page", params: {name: "securements-docking"}, title: "Docking" },
                { state: "main.usewheelchair.components.component.page", params: {name: "securements-four"}, title: "Tie-down" }
            ]
        }],
        states: "main.usewheelchair.components.component.**"
    };

    return service;
})

;

        // pages: [{ group: "Bases", state: "main.usewheelchair.components.component.page", params: { name: "bases-front" }, title: "Front" },
        //     { group: "Bases", state: "main.usewheelchair.components.component.page", params: { name: "bases-mid" }, title: "Mid" },
        //     { group: "Bases", state: "main.usewheelchair.components.component.page", params: { name: "bases-rear" }, title: "Rear" },
        //     { group: "Powered Seat Functions", state: "main.usewheelchair.components.component.page", params: { name: "psf-tilt" }, title: "Tilt" },
        //     { group: "Powered Seat Functions", state: "main.usewheelchair.components.component.page", params: { name: "psf-recline" }, title: "Recline" },
        //     { group: "Powered Seat Functions", state: "main.usewheelchair.components.component.page", params: { name: "psf-elevation" }, title: "Elevation" },
        //     { group: "Powered Seat Functions", state: "main.usewheelchair.components.component.page", params: { name: "psf-standing" }, title: "Standing" }
        // ],

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular
	.module('smartvcApp.controllers')
	.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
		$stateProvider
			.state('main.usewheelchair.components', {
				url: '/components',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/element/contents/main.html',
						controller: 'UWComponentsCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.components.assessment', {
				url: '/assessment',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/element/contents/assessment.html',
						controller: 'UWComponentsAssessmentCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.components.summary', {
				url: '/summary',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/element/contents/assessment-summary.html',
						controller: 'UWComponentsAssessmentSummaryCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.components.component', {
				url: '/component',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/element/contents/components-host.html',
						controller: 'UWComponentsItemCtrl as vm'
					}
				},
				resolve: {
					PreviousState: [
						'$state',
						function($state) {
							var currentStateData = {
								Name: $state.current.name,
								Params: $state.params,
								URL: $state.href($state.current.name, $state.params)
							};
							return currentStateData;
						}
					]
				}
			})
			.state('main.usewheelchair.components.component.page', {
				url: '/:name',
				views: {
					'@main.usewheelchair.components.component': {
						templateUrl: function($stateParams) {
							return 'usewchair/element/contents/components-' + $stateParams.name + '.html';
						},

						controller: 'UWComponentsItemCtrl2 as vm'
					}
				}
			});
	}])
	.controller('UWComponentsCtrl', ["$rootScope", "$scope", "$state", "System", "UseNavData", "UseWheelchairService", "$ionicHistory", "$timeout", function(
		$rootScope,
		$scope,
		$state,
		System,
		UseNavData,
		UseWheelchairService,
		$ionicHistory,
		$timeout
	) {
		var vm = this;
		vm.navData = UseNavData.navComponents.pages;
		vm.selected = vm.navData[0];

		_init();
		////////////////////////////////////
		function _init() {
			vm.isComponentQFilled = UseWheelchairService.isComponentQFilled();
		}

		vm.selectGroup = function(selected) {
			vm.selected = selected;
		};

		vm.openGroup = function(data) {
			// $timeout(function() {
			navigateTo('.component.page', data.params);
			// }, 1000)
		};

		vm.openComponentQuestionnaire = function() {
			UseWheelchairService.openComponentQuestionnaire($rootScope.$new()).then(function() {
				_init();
			});
		};

		// vm.openSetupQSummary = function($event) {
		//     UseWheelchairService.openSetupQSummary($rootScope.$new());
		//     $event.stopPropagation();
		// }
	}])
	.controller('UWComponentsAssessmentCtrl', ["$rootScope", "$scope", "$state", "System", "UseNavData", "UseWheelchairService", "$ionicHistory", "$timeout", "$ionicSlideBoxDelegate", "Utils", function(
		$rootScope,
		$scope,
		$state,
		System,
		UseNavData,
		UseWheelchairService,
		$ionicHistory,
		$timeout,
		$ionicSlideBoxDelegate,
		Utils
	) {
		var vm = this,
			outerSlideBox = null,
			localData = UseWheelchairService.get();

		//setup local storage for setup questionnaire
		if (!localData.componentQAnswer) {
			localData.componentQAnswer = {};
			UseWheelchairService.set(localData);
		}

		var oriComponentQAnswer = angular.copy(localData.componentQAnswer);

		// setup logistic
		var _pages = [],
			_page = null;

		var _serializeMultiValueFn = function(variable, value, checked) {
			var temp = typeof variable === 'string' ? variable : '';
			if (temp.trim() == '') temp = [];
			else temp = temp.split(', ');

			if (checked) {
				if (temp.length == 1 && temp[0].indexOf('None') != -1) {
					temp = [];
				}

				if (value.indexOf('None') != -1) {
					temp = [value];
				} else {
					temp.push(value);
				}
			} else {
				var index = temp.indexOf(value);
				if (index > -1) {
					temp.splice(index, 1);
				}
			}

			return temp.join(', ');
		};

		var _deserializeMultiValueFn = function(list, selectedValue) {
			var _list = list || [];
			var model = typeof selectedValue === 'string' ? selectedValue : '';

			_list = _list.map(function(item) {
				model = model || '';

				return {
					text: item.text,
					checked: model.indexOf(item.text) != -1
				};
			});
			return _list;
		};

		var sequences = [[1, 2], [3, 4, 5], [6, 7], [8], [9], [10, 11, 12, 13]];
		sequences.forEach(function(pageIdxs) {
			_page = [];
			pageIdxs.forEach(function(idx) {
				var itm = _.find(UseWheelchairService.componentQuestions, { id: idx });
				if (itm) {
					itm.show = true; //localData.setupQAnswer[itm.id] ? false : true;
					itm.serializeMultiValueFn = _serializeMultiValueFn;
					itm.deserializeMultiValueFn = _deserializeMultiValueFn;
					_page.push(itm);
				}
			});
			_pages.push(_page);
		});
		// UseWheelchairService.componentQuestions.forEach(function(itm, idx) {
		//     itm.show = true; //localData.setupQAnswer[itm.id] ? false : true;
		//     itm.serializeMultiValueFn = _serializeMultiValueFn;
		//     itm.deserializeMultiValueFn = _deserializeMultiValueFn;

		//     if (_page == null) _page = [];
		//     if (itm.show) _page.push(itm);
		//     if (_page.length == 2 || (idx == UseWheelchairService.componentQuestions.length - 1 && _page.length > 0)) {
		//         _pages.push(angular.copy(_page));
		//         _page = null;
		//     }
		// });

		vm.questions = UseWheelchairService.componentQuestions;
		vm.componentQAnswer = localData.componentQAnswer;
		vm.pages = _pages;

		$scope.$on('$ionicView.beforeEnter', function() {
			// Below solution for ionicModal using rootScope
			// refer to this https://github.com/driftyco/ionic/issues/2754
			// change with decorator
			// ---------------------------
			outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
			vm.updateSlidebox();
			$timeout(function() {
				// disable the slide event for ion-slidebox
				outerSlideBox.enableSlide(false);
			}, 100);
		});

		// $scope.$on('$ionicView.beforeLeave', function(event, view){
		//     if (view.direction == 'back') {
		//         event.stopPropagation();
		//         _submit();
		//     }
		// });

		vm.onChangeCheckbox = function(question, item) {
			vm.componentQAnswer[question.id] = question.serializeMultiValueFn(
				vm.componentQAnswer[question.id],
				item.text,
				item.checked
			);
			question.list = question.deserializeMultiValueFn(question.checks, vm.componentQAnswer[question.id]);
		};

		vm.updateSlidebox = function(makeDouble) {
			outerSlideBox.update();

			$timeout(function() {
				vm.questionsTotal = outerSlideBox.slidesCount();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 0);
		};

		vm.nextPage = function() {
			$timeout(function() {
				outerSlideBox.next();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 100);
		};

		vm.prevPage = function() {
			$timeout(function() {
				outerSlideBox.previous();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 100);
		};

		vm.finish = function() {
			var diff = Utils.findDiffObject(oriComponentQAnswer, vm.componentQAnswer);
			if (!_.isEmpty(diff)) {
				confirm('This action will save your assessment. Continue?').then(function() {
					UseWheelchairService.set(localData);
					alert('Filled item saved').then(function() {
						//broadcast event
						$scope.$emit('event:component-assessment-updated');
						navigateTo('.^');
					});
				});
			} else {
				navigateTo('.^');
			}
		};

		vm.getIndexOf = function(question) {
			return UseWheelchairService.componentQuestions.indexOf(question);
		};
	}])
	.controller('UWComponentsAssessmentSummaryCtrl', ["$rootScope", "$scope", "$state", "System", "UseNavData", "UseWheelchairService", "$ionicHistory", "$timeout", "$ionicSlideBoxDelegate", "Utils", "$filter", "ElementRecommendModal", "ElementSummaryModal", function(
		$rootScope,
		$scope,
		$state,
		System,
		UseNavData,
		UseWheelchairService,
		$ionicHistory,
		$timeout,
		$ionicSlideBoxDelegate,
        Utils,
		$filter,
		ElementRecommendModal,
		ElementSummaryModal
	) {
		var vm = this,
			localData = UseWheelchairService.get();

		//setup local storage for setup questionnaire
		if (!localData.componentQAnswer) {
			localData.componentQAnswer = {};
			UseWheelchairService.set(localData);
		}

		vm.questions = UseWheelchairService.componentQuestions;
		vm.componentQAnswer = localData.componentQAnswer;

		$scope.$on('$ionicView.beforeEnter', function() {});

		vm.getAnswer = function(question) {
			if (question.checks != null) {
				return vm.componentQAnswer[question.id] || '-';
			}

			var value = vm.componentQAnswer[question.id];
			var idx = _.findIndex(question.options, function(itm) {
				return itm.value == value;
			});

			if (idx > -1) return question.options[idx].text;
			return '-';
		};

		vm.needToShowRecommendation = function() {
			return vm.componentQAnswer[1] == 3 || vm.componentQAnswer[2] == 1 || vm.componentQAnswer[7] == 1 || vm.componentQAnswer[7] == 2 ||
			vm.componentQAnswer[5] != null || vm.componentQAnswer[8] != null && vm.componentQAnswer[8] != 8 ||
			vm.componentQAnswer[8] != null && vm.componentQAnswer[8] == 8 || vm.componentQAnswer[8] == 1;
		}

		vm.openRecommendation = function(section) {
			ElementRecommendModal.show({ section: section, componentQAnswer: vm.componentQAnswer })
		}

		vm.openSummary = function() {
			ElementSummaryModal.show({ questions: vm.questions, componentQAnswer: vm.componentQAnswer })
		}

		vm.forwardViaEmail = function _forwardEmail() {

			if (!Utils.checkPlugin('email')) return;

            // check if device has email account set
            // need to set cordova.plugins.email.permission.GET_ACCOUNTS for android
            cordova.plugins.email.hasAccount(function(isAvailable) {
                if (!isAvailable) {
                    alert("Email is not available. Please check your email under phone's setting");
                    return;
                }

				confirm("This Element's Summary will be forwarded via email. Do you want to continue?").then(cbSend);
			});

			function cbSend() {
				var subject = "My Wheelchair Guide: Element Summary (" + $filter('date')(new Date(), 'yyyy-MM-dd HH:mm') + ")";
				var text = null,
					medias = null;

                var summary = document.querySelector('#manualElementSummary');
                if (summary) text = summary.innerHTML;

				var emailProps = {
					// to:      'smart.drrp@gmail.com',
					// bcc:     ['hsl16@pitt.edu', 'dad5@pitt.edu'],
					subject: subject,
					isHtml: true
				};

				var body = 'Hi,<br><br>\
                  Following is the Manual Wheelchair Element Summary.';

				if (text != null) body += '<br><br>' + text;

				if (medias != null) {
					body += '<br><br>Please find out more in the attachment.';
					emailProps.attachments = medias;
				}

				emailProps.body = body;

				cordova.plugins.email.open(emailProps);
			}
		}
	}])
	.controller('UWComponentsItemCtrl', ["$rootScope", "$scope", "$state", "$stateParams", "System", "UseNavData", "UseWheelchairService", "$ionicHistory", "PreviousState", "navService", function(
		$rootScope,
		$scope,
		$state,
		$stateParams,
		System,
		UseNavData,
		UseWheelchairService,
		$ionicHistory,
		PreviousState,
		navService
	) {
		var vm = this;
		vm.navComponents = UseNavData.navComponents;

		navService.setBackView();

		vm.goBack = function() {
			navService.goBack();

			// if (vm.achorView == null) vm.achorView = $ionicHistory.backView();

			// $ionicHistory.goBack(
			// 	vm.achorView.index + 1 - $ionicHistory.viewHistory().histories[vm.achorView.historyId].stack.length
			// );
		};

		$scope.currentPage = 1;

		$scope.onSlideChanged = function($index) {
			$scope.currentPage = $index + 1;
		};

		$scope.$on('$destroy', function() {
			vm.achorView = null;
		});

		$scope.prevPage = function() {
			vm.prevPage = $scope.$parent.prevPage;
		};

		$scope.nextPage = function() {
			vm.nextPage = $scope.$parent.nextPage;
		};

		$scope.openWheelchairChecklistOrSummary = function() {
			alert('aaa');
		};

		$scope.openPopup = function(id, defaultValue) {
			UseWheelchairService.openComponentPopup(id, defaultValue);
		};
	}])
	.controller('UWComponentsItemCtrl2', ["$scope", "$rootScope", "$state", "System", "UseNavData", "$ionicHistory", function($scope, $rootScope, $state, System, UseNavData, $ionicHistory) {
		var vm = this;
		// console.log($ionicHistory.viewHistory())
	}]);

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("ElementRecommendModalController", Controller)
        .factory('ElementRecommendModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('usewchair/element/modal/recommend.modal.html', 'ElementRecommendModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;

        activate();
        /////////////////////
        function activate() {
            vm.section = parameters.section;
            vm.componentQAnswer = parameters.componentQAnswer;
        }
    }


})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("ElementSummaryModalController", Controller)
        .factory('ElementSummaryModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('usewchair/element/modal/summary.modal.html', 'ElementSummaryModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;

        activate();
        /////////////////////
        function activate() {
            vm.questions = parameters.questions;
            vm.componentQAnswer = parameters.componentQAnswer;
        }

		vm.getAnswer = function(question) {
			if (question.checks != null) {
				return vm.componentQAnswer[question.id] || '-';
			}

			var value = vm.componentQAnswer[question.id];
			var idx = _.findIndex(question.options, function(itm) {
				return itm.value == value;
			});

			if (idx > -1) return question.options[idx].text;
			return '-';
		};
    }


})();

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular
	.module('smartvcApp.controllers')
	.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
		$stateProvider
			.state('main.usewheelchair.fit', {
				url: '/fit',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/fit/contents/main.html',
						controller: 'UWFitCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.fit.assessment', {
				url: '/assessment',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/fit/contents/assessment.html',
						controller: 'UWFitAssessmentCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.fit.summary', {
				url: '/summary',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/fit/contents/assessment-summary.html',
						controller: 'UWFitAssessmentSummaryCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.fit.controller', {
				url: '/controller',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/fit/contents/features-mounting-location.html',
						controller: 'UWFitAssessmentSummaryCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.fit.features', {
				url: '/features',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/fit/contents/features-host.html',
						controller: 'UWFitItemsCtrl as vm'
					}
				},
				resolve: {
					PreviousState: [
						'$state',
						function($state) {
							var currentStateData = {
								Name: $state.current.name,
								Params: $state.params,
								URL: $state.href($state.current.name, $state.params)
							};
							return currentStateData;
						}
					]
				}
			})
			.state('main.usewheelchair.fit.features.page', {
				url: '/:name',
				views: {
					'@main.usewheelchair.fit.features': {
						templateUrl: function($stateParams) {
							return 'usewchair/fit/contents/features-' + $stateParams.name + '.html';
							// return 'power/views/use/empty.html'
						},

						// templateUrl: 'power/views/use/components/main.html',
						controller: 'UWFitItemCtrl as vm'
					}
				}
			});
	}])
	.controller('UWFitCtrl', ["$rootScope", "$scope", "$state", "System", "ManualFitNavData", "UseWheelchairService", "$ionicHistory", "$timeout", function(
		$rootScope,
		$scope,
		$state,
		System,
		ManualFitNavData,
		UseWheelchairService,
		$ionicHistory,
		$timeout
	) {
		var vm = this;
		vm.navData = ManualFitNavData.nav.pages;
		vm.selected = vm.navData[0];

		_init();
		////////////////////////////////////
		function _init() {
			vm.isComponentQFilled = UseWheelchairService.isComponentQFilled();
		}

		vm.selectGroup = function(selected) {
			vm.selected = selected;
		};

		vm.openGroup = function(data) {
			navigateTo('.features.page', data.params);
		};

		vm.openComponentQuestionnaire = function() {
			UseWheelchairService.openComponentQuestionnaire($rootScope.$new()).then(function() {
				_init();
			});
		};
	}])

	.controller('UWFitAssessmentCtrl', ["$rootScope", "$scope", "$state", "System", "UseNavData", "UseWheelchairService", "$ionicHistory", "$timeout", "$ionicSlideBoxDelegate", "Utils", function(
		$rootScope,
		$scope,
		$state,
		System,
		UseNavData,
		UseWheelchairService,
		$ionicHistory,
		$timeout,
		$ionicSlideBoxDelegate,
		Utils
	) {
		var vm = this,
			outerSlideBox = null,
			localFitQAnswer = UseWheelchairService.getSetupQAnswer();

		var oriQAnswer = angular.copy(localFitQAnswer);

		// setup logistic
		var _pages = [],
			_page = null;

		var _serializeMultiValueFn = function(variable, value, checked) {
			var temp = typeof variable === 'string' ? variable : '';
			if (temp.trim() == '') temp = [];
			else temp = temp.split(', ');

			if (checked) {
				if (temp.length == 1 && temp[0].indexOf('None') != -1) {
					temp = [];
				}

				if (value.indexOf('None') != -1) {
					temp = [value];
				} else {
					temp.push(value);
				}
			} else {
				var index = temp.indexOf(value);
				if (index > -1) {
					temp.splice(index, 1);
				}
			}

			return temp.join(', ');
		};

		var _deserializeMultiValueFn = function(list, selectedValue) {
			var _list = list || [];
			var model = typeof selectedValue === 'string' ? selectedValue : '';

			_list = _list.map(function(item) {
				model = model || '';

				return {
					text: item.text,
					checked: model.indexOf(item.text) != -1
				};
			});
			return _list;
		};

		var sequences = [[1, 2, 3], [4, 5, 6], [7, 8]];
		var questions = UseWheelchairService.getFitQuestions();
		sequences.forEach(function(pageIdxs) {
			_page = [];
			pageIdxs.forEach(function(idx) {
				var itm = _.find(questions, { id: idx });
				if (itm) {
					itm.show = true;
					itm.serializeMultiValueFn = _serializeMultiValueFn;
					itm.deserializeMultiValueFn = _deserializeMultiValueFn;
					_page.push(itm);
				}
			});
			_pages.push(_page);
		});

		vm.questions = questions;
		vm.answers = localFitQAnswer;
		vm.pages = _pages;

		$scope.$on('$ionicView.beforeEnter', function() {
			// Below solution for ionicModal using rootScope
			// refer to this https://github.com/driftyco/ionic/issues/2754
			// change with decorator
			// ---------------------------
			outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
			vm.updateSlidebox();
			$timeout(function() {
				// disable the slide event for ion-slidebox
				outerSlideBox.enableSlide(false);
			}, 100);
		});

		// $scope.$on('$ionicView.beforeLeave', function(event, view){
		//     if (view.direction == 'back') {
		//         event.stopPropagation();
		//         _submit();
		//     }
		// });

		vm.onChangeCheckbox = function(question, item) {
			vm.answers[question.id] = question.serializeMultiValueFn(
				vm.answers[question.id],
				item.text,
				item.checked
			);
			question.list = question.deserializeMultiValueFn(question.checks, vm.answers[question.id]);
		};

		vm.updateSlidebox = function(makeDouble) {
			outerSlideBox.update();

			$timeout(function() {
				vm.questionsTotal = outerSlideBox.slidesCount();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 0);
		};

		vm.nextPage = function() {
			$timeout(function() {
				outerSlideBox.next();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 100);
		};

		vm.prevPage = function() {
			$timeout(function() {
				outerSlideBox.previous();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 100);
		};

		vm.finish = function(data) {
			var diff = Utils.findDiffObject(oriQAnswer, vm.answers);
			if (!_.isEmpty(diff)) {
				confirm('This action will save your assessment. Continue?').then(function() {
					UseWheelchairService.setFitQAnswer(data);
					alert('Filled item saved').then(function() {
						//broadcast event
						$scope.$emit('event:fit-assessment-updated');
						navigateTo('.^');
					});
				});
			} else {
				navigateTo('.^');
			}
		};

		vm.getIndexOf = function(question) {
			return questions.indexOf(question);
		};
	}])

	.controller('UWFitAssessmentSummaryCtrl', ["$rootScope", "$scope", "$state", "System", "UseNavData", "UseWheelchairService", "$ionicHistory", "$timeout", "$ionicSlideBoxDelegate", "Utils", "$filter", "FitRecommendModal", "FitSummaryModal", function(
		$rootScope,
		$scope,
		$state,
		System,
		UseNavData,
		UseWheelchairService,
		$ionicHistory,
		$timeout,
		$ionicSlideBoxDelegate,
        Utils,
		$filter,
		FitRecommendModal,
		FitSummaryModal
	) {
		var vm = this,
			localQAnswers = UseWheelchairService.getFitQAnswer();

		vm.questions = UseWheelchairService.getFitQuestions();
		vm.keyedQuestions = _.groupBy(vm.questions, 'id');
		vm.answers = localQAnswers;

		$scope.$on('$ionicView.beforeEnter', function() {});

		vm.getAnswer = function(question) {
			if (question.checks != null) {
				return vm.answers[question.id] || '-';
			}

			var value = vm.answers[question.id];
			var idx = _.findIndex(question.options, function(itm) {
				return itm.value == value;
			});

			if (idx > -1) return question.options[idx].text;
			return '-';
		};

		vm.needToShowRecommendation = function() {
			return vm.answers[1] == 3 || vm.answers[2] == 3 || vm.answers[3] == 1 || vm.answers[3] == 3 ||
			vm.answers[5] == 1 || vm.answers[5] == 3 || vm.answers[6] == 1 || vm.answers[7] == 2 || vm.answers[7] == 3 ||
			vm.answers[8] == 2 || vm.answers[8] == 3 || vm.answers[9] == 2 || vm.answers[10] == 2 || vm.answers[10] == 3 ||
			vm.answers[11] == 2 || vm.answers[11] == 3;
		}

		vm.forwardViaEmail = function _forwardEmail() {
			// console.log(document.querySelector('#manualFitSummary').innerHTML);
			if (!Utils.checkPlugin('email')) return;

            // check if device has email account set
            // need to set cordova.plugins.email.permission.GET_ACCOUNTS for android
            cordova.plugins.email.hasAccount(function(isAvailable) {
                if (!isAvailable) {
                    alert("Email is not available. Please check your email under phone's setting");
                    return;
                }

				confirm("This Element's Summary will be forwarded via email. Do you want to continue?").then(cbSend);
			});

			function cbSend() {
				var subject = "My Wheelchair Guide: Fit Summary (" + $filter('date')(new Date(), 'yyyy-MM-dd HH:mm') + ")";
				var text = null,
					medias = null;

                var summary = document.querySelector('#manualFitSummary');
                if (summary) text = summary.innerHTML;

				var emailProps = {
					// to:      'smart.drrp@gmail.com',
					// bcc:     ['hsl16@pitt.edu', 'dad5@pitt.edu'],
					subject: subject,
					isHtml: true
				};

				var body = 'Hi,<br><br>\
                  Following is the Manual Wheelchair Fit Summary.';

				if (text != null) body += '<br><br>' + text;

				if (medias != null) {
					body += '<br><br>Please find out more in the attachment.';
					emailProps.attachments = medias;
				}

				emailProps.body = body;

				cordova.plugins.email.open(emailProps);
			}
		}

		vm.openRecommendation = function(section) {
			FitRecommendModal.show({ section: section, answers: vm.answers })
		}

		vm.openSummary = function() {
			FitSummaryModal.show({ questions: vm.questions, answers: vm.answers })
		}
	}])


	.controller('UWFitItemsCtrl', ["$rootScope", "$scope", "$state", "$stateParams", "System", "ManualFitNavData", "UseWheelchairService", "$ionicHistory", "PreviousState", function(
		$rootScope,
		$scope,
		$state,
		$stateParams,
		System,
		ManualFitNavData,
		UseWheelchairService,
		$ionicHistory,
		PreviousState
	) {
		var vm = this;
		vm.navComponents = ManualFitNavData.nav;

		// console.log(PreviousState, $ionicHistory.backView(), $ionicHistory.viewHistory())

		if (vm.achorView == null) vm.achorView = $ionicHistory.backView();

		vm.goBack = function() {
			// navigateTo(PreviousState.Name);
			// $ionicHistory.goBack(-1);
			$ionicHistory.goBack(
				vm.achorView.index + 1 - $ionicHistory.viewHistory().histories[vm.achorView.historyId].stack.length
			);
		};

		$scope.currentPage = 1;

		$scope.onSlideChanged = function($index) {
			$scope.currentPage = $index + 1;
		};

		$scope.$on('$destroy', function() {
			// console.log("DESTROY", arguments);
			vm.achorView = null;
		});

		$scope.prevPage = function() {
			vm.prevPage = $scope.$parent.prevPage;
		};

		$scope.nextPage = function() {
			vm.nextPage = $scope.$parent.nextPage;
		};

		$scope.openWheelchairChecklistOrSummary = function() {
			alert('aaa');
		};

		$scope.openPopup = function(id, defaultValue) {
			UseWheelchairService.openFitPopup(id, defaultValue);
		};
	}])
	.controller('UWFitItemCtrl', ["$scope", "$rootScope", "$state", "System", "UseNavData", "$ionicHistory", function($scope, $rootScope, $state, System, UseNavData, $ionicHistory) {
		var vm = this;
		// console.log($ionicHistory.viewHistory())
	}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.Auth
 * @description
 * # Auth
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('ManualFitNavData', function() {

    var service = {};
    service.nav = {
        pages: [
            {
                title: "Seat",
                children: [
                    { state: "main.usewheelchair.fit.features.page", params: {name: "seat-depth"}, title: "Depth" },
                    // { state: "main.usewheelchair.fit.features.page", params: {name: "seat-angle"}, title: "Angle" },
                    { state: "main.usewheelchair.fit.features.page", params: {name: "seat-width"}, title: "Width" },
                    // { state: "main.usewheelchair.fit.features.page", params: {name: "seat-height"}, title: "Height" },
                ]
            },
            {
                title: "Cushion",
                children: [
                    { state: "main.usewheelchair.fit.features.page", params: {name: "cushion"}, title: "Cushion" }
                ]
            },
            {
                title: "Armrest",
                children: [
                    { state: "main.usewheelchair.fit.features.page", params: {name: "armrest"}, title: "Armrest" }
                ]
            },
            {
                title: "Footrest",
                children: [
                    { state: "main.usewheelchair.fit.features.page", params: {name: "footrest-angle"}, title: "Angle" },
                    { state: "main.usewheelchair.fit.features.page", params: {name: "footrest-length"}, title: "Length" }
                ]
            },
            {
                title: "Headrest",
                children: [
                    { state: "main.usewheelchair.fit.features.page", params: {name: "headrest"}, title: "Headrest" },
                    // { state: "main.usewheelchair.fit.features.page", params: {name: "camber"}, title: "Camber"}
                ]
            },
            {
                title: "Controller",
                children: [
                    { state: "main.usewheelchair.fit.features.page", params: {name: "mounting-location"}, title: "Mounting location" },
                    { state: "main.usewheelchair.fit.features.page", params: {name: "programming"}, title: "Programming" }
                ]
            },
            
            ],
        states: "main.usewheelchair.fit.features.**"
    };

    return service;
})
;

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("FitRecommendModalController", Controller)
        .factory('FitRecommendModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('usewchair/fit/modal/recommend.modal.html', 'FitRecommendModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;

        activate();
        /////////////////////
        function activate() {
            vm.section = parameters.section;
            vm.answers = parameters.answers;
        }
    }


})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("FitSummaryModalController", Controller)
        .factory('FitSummaryModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

       var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('usewchair/fit/modal/summary.modal.html', 'FitSummaryModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;

        activate();
        /////////////////////
        function activate() {
            vm.questions = parameters.questions;
            vm.answers = parameters.answers;
        }

		vm.getAnswer = function(question) {
			if (question.checks != null) {
				return vm.answers[question.id] || '-';
			}

			var value = vm.answers[question.id];
			var idx = _.findIndex(question.options, function(itm) {
				return itm.value == value;
			});

			if (idx > -1) return question.options[idx].text;
			return '-';
		};
    }


})();

(function() {
    'use strict';

    angular
        .module('smartvcApp.controllers')
        .controller("PopupSetupHowModalController", Controller)
        .factory('PopupSetupHowModal', Service);

    Service.$inject = ['$q', '$log', 'AppModalService'];

    /* @ngInject */
    function Service($q, $log, AppModalService) {

        // $log = $log.getInstance('ScheduleModal');

        var service = {};
        service.show = _openModal;
        return service;

        ////////////////
        function _openModal(params) {
            return AppModalService.show('usewchair/popupsetuphow/message.html', 'PopupSetupHowModalController as vm', params);
        }
    }

    Controller.$inject = ['$scope', 'parameters', '$rootScope'];
    /* @ngInject */
    function Controller($scope, parameters, $rootScope) {
        var vm = this;

        parameters = parameters || {};
        vm.model = parameters.model;

        activate();
        /////////////////////
        function activate() {
        }
    }


})();

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')
.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
    $stateProvider
    .state('main.usewheelchair.qa', {
        url: '/qa',
        views: {
          'main-content@main': {
            templateUrl: 'usewchair/qa/main.html'
          }
        }
      })
      .state('main.usewheelchair.qa.sub', {
        url: '/:group',
        params: {
            group: null
        },
        views: {
          'main-content@main': {
            templateUrl: 'usewchair/qa/main-qa.html',
            controller: 'UWQaCtrl'
          }
        }
      })

      .state('main.usewheelchair.qa.sub.detail', {
        url: '/detail',
        params: {
            qa: null
        },
        views: {
          'main-content@main': {
            templateUrl: 'usewchair/qa/main-qa-detail.html',
            controller: 'UWQaDetailCtrl'
          }
        }
      })
}])

.controller('UWQaCtrl', ["$scope", "$rootScope", "$state", "System", "UseWheelchairService", "lunr", "$stateParams", function ($scope, $rootScope, $state, System, UseWheelchairService, lunr, $stateParams) {
    var index = null, filter = null;

    activate();

    $scope.search = { keyword: null};
    //////////////////////
    function activate() {
        _initializeIndex();
        _init();
    }

    function _init() {
        UseWheelchairService.getQASkill().then(function(qa) {

            //filter qa
            var group = $stateParams.group;
            var filtered = qa.filter(function(q) {
              return q.group.indexOf(group) > -1;
            })

            qa = filtered;
            $scope.qaList = qa;
            $scope.fullInclude = _.pluck($scope.qaList, 'title');

            $scope.qaList.forEach(function(qa) {
              index.add(qa);
            })


            $scope.$watch('search.keyword', function(value) {
              console.log(value)
              _search(value ? value : "");
            })
        })
    }

    function _initializeIndex() {
      index = lunr(function() {
        this.field('title', { boost: 5 });
        this.field('q');
        this.field('a');
        this.ref('title');
      })
    }

    //TODO: Belum Optimal
    function _search(keyword) {
      if (keyword.length < 3) {
        $scope.include = $scope.fullInclude;
        return;
      }

      var result = index.search(keyword); console.log(result)
      if (result.length > 0) {
        $scope.include = _.pluck(result, 'ref');
      }
    }
}])

.controller('UWQaDetailCtrl', ["$scope", "$rootScope", "$stateParams", function ($scope, $rootScope, $stateParams) {

    activate();

    //////////////////////
    function activate() {
        _init()
    }

    function _init() {
        $scope.qa = $stateParams.qa;
        console.log($scope.qa);
    }
}])

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular
	.module('smartvcApp.controllers')
	.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
		$stateProvider
			.state('main.usewheelchair.skills', {
				url: '/skills',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/skills/contents/main.html',
						controller: 'UWSkillCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.skills.assessment', {
				url: '/assessment',
				params: {
					filter: null
				},
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/skills/contents/assessment.html',
						controller: 'UWSkillAssessmentCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.skills.summary', {
				url: '/summary',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/skills/contents/assessment-summary.html',
						controller: 'UWSkillAssessmentSummaryCtrl as vm'
					}
				}
			})
			.state('main.usewheelchair.skills.skill', {
				url: '/skill',
				views: {
					'main-content@main': {
						templateUrl: 'usewchair/skills/contents/skill-host.html',
						controller: 'UWSkillItemsCtrl as vm'
					}
				},
				resolve: {
					PreviousState: [
						'$state',
						function($state) {
							var currentStateData = {
								Name: $state.current.name,
								Params: $state.params,
								URL: $state.href($state.current.name, $state.params)
							};
							return currentStateData;
						}
					]
				}
			})
			.state('main.usewheelchair.skills.skill.page', {
				url: '/:name',
				views: {
					'@main.usewheelchair.skills.skill': {
						templateUrl: function($stateParams) {
							return 'usewchair/skills/contents/skill-' + $stateParams.name + '.html';
						},

						controller: 'UWSkillItemCtrl as vm'
					}
				}
			});
	}])
	.controller('UWSkillCtrl', ["$rootScope", "$scope", "$state", "System", "ManualSkillNavData", "SkillService", "$ionicHistory", "$timeout", function(
		$rootScope,
		$scope,
		$state,
		System,
		ManualSkillNavData,
		SkillService,
		$ionicHistory,
		$timeout
	) {
		var vm = this;
		vm.navData = ManualSkillNavData.nav.pages;
		vm.selected = vm.navData[0];

		_init();
		////////////////////////////////////
		function _init() {
			// vm.isComponentQFilled = UseWheelchairService.isComponentQFilled();

			if (!SkillService.isCautionSkillAdvancedPopedUp()) {
				SkillService.openCautionSkillAdvanced();
				SkillService.setCautionSkillAdvancedPopeUp(true);
			}
		}

		vm.selectGroup = function(selected) {
			vm.selected = selected;
			vm.openGroup(vm.selected.children[0]);
		};

		vm.openGroup = function(data) {
			navigateTo('.skill.page', data.params);
		};

		// vm.openComponentQuestionnaire = function() {
		// 	UseWheelchairService.openComponentQuestionnaire($rootScope.$new()).then(function() {
		// 		_init();
		// 	});
		// };

	}])

	.controller('UWSkillAssessmentCtrl', ["$rootScope", "$scope", "$state", "$stateParams", "System", "UseNavData", "SkillService", "$ionicHistory", "$timeout", "$ionicSlideBoxDelegate", "Utils", function(
		$rootScope,
		$scope,
		$state,
		$stateParams,
		System,
		UseNavData,
		SkillService,
		$ionicHistory,
		$timeout,
		$ionicSlideBoxDelegate,
		Utils
	) {
		var vm = this,
			outerSlideBox = null,
			localQAnswer = null,
			oriQAnswer = null;

		// setup logistic
		var _pages = [],
			_page = null;

		var _serializeMultiValueFn = function(variable, value, checked) {
			var temp = typeof variable === 'string' ? variable : '';
			if (temp.trim() == '') temp = [];
			else temp = temp.split(', ');

			if (checked) {
				if (temp.length == 1 && temp[0].indexOf('None') != -1) {
					temp = [];
				}

				if (value.indexOf('None') != -1) {
					temp = [value];
				} else {
					temp.push(value);
				}
			} else {
				var index = temp.indexOf(value);
				if (index > -1) {
					temp.splice(index, 1);
				}
			}

			return temp.join(', ');
		};

		var _deserializeMultiValueFn = function(list, selectedValue) {
			var _list = list || [];
			var model = typeof selectedValue === 'string' ? selectedValue : '';

			_list = _list.map(function(item) {
				model = model || '';

				return {
					text: item.text,
					checked: model.indexOf(item.text) != -1
				};
			});
			return _list;
		};



		function init() {
			localQAnswer = SkillService.getSQAnswer(),
			oriQAnswer = angular.copy(localQAnswer);


			var questions = SkillService.getSkillQuestions();
			var sequences = [], stmp = [];

			var _pages = [], _page = null;
			questions.forEach(function(itm, idx) {

                if (localQAnswer[itm.id] == undefined) localQAnswer[itm.id] = -1;

				if ($stateParams.filter == undefined) itm.show = true;
				if ($stateParams.filter == 'ASSESS') itm.show = localQAnswer[itm.id] == undefined || localQAnswer[itm.id] == -1;
				if ($stateParams.filter == 'ACQUIRE') itm.show = localQAnswer[itm.id] == 0 || localQAnswer[itm.id] == 1;

				itm.options = SkillService.getSkillOptions();
				itm.serializeMultiValueFn = _serializeMultiValueFn;
				itm.deserializeMultiValueFn = _deserializeMultiValueFn;

				if (_page == null) _page = [];
				if (itm.show) _page.push(itm);

				if (_page.length == 2 || (idx == questions.length - 1 && _page.length > 0)) {
					_pages.push(angular.copy(_page));
					_page = null;
				}
			})

			vm.questions = questions;
			vm.answers = localQAnswer;
			vm.pages = _pages;

		}



		$scope.$on('$ionicView.beforeEnter', function() {

			init();

			// Below solution for ionicModal using rootScope
			// refer to this https://github.com/driftyco/ionic/issues/2754
			// change with decorator
			// ---------------------------
			outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
			vm.updateSlidebox();
			$timeout(function() {
				// disable the slide event for ion-slidebox
				outerSlideBox.enableSlide(false);
			}, 100);
		});

		// $scope.$on('$ionicView.beforeLeave', function() {
		// 	vm.finish(vm.answers);
		// });

		vm.onChangeCheckbox = function(question, item) {
			vm.answers[question.id] = question.serializeMultiValueFn(
				vm.answers[question.id],
				item.text,
				item.checked
			);
			question.list = question.deserializeMultiValueFn(question.checks, vm.answers[question.id]);
		};

		vm.updateSlidebox = function(makeDouble) {
			outerSlideBox.update();

			$timeout(function() {
				vm.questionsTotal = outerSlideBox.slidesCount();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 0);
		};

		vm.nextPage = function() {
			$timeout(function() {
				outerSlideBox.next();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 100);
		};

		vm.prevPage = function() {
			$timeout(function() {
				outerSlideBox.previous();
				vm.currentIndex = outerSlideBox.currentIndex();
			}, 100);
		};

		$scope.$on("$ionicView.beforeLeave", function() {
			storeAnswers(vm.answers);
		})

		vm.finish = function(data) {
			storeAnswers(data);
			navigateTo('.^');
		};


		vm.getIndexOf = function(question) {
			return questions.indexOf(question);
		};

		function storeAnswers(data) {
			var diff = Utils.findDiffObject(oriQAnswer, vm.answers);
			if (!_.isEmpty(diff)) {
				SkillService.setSQAnswer(data);
				$scope.$emit('event:skill-assessment-updated');
				return true;
			}
			return false;
		}
	}])

	.controller('UWSkillAssessmentSummaryCtrl', ["$rootScope", "$scope", "$state", "System", "UseNavData", "SkillService", "$ionicHistory", "$timeout", "$ionicSlideBoxDelegate", "Utils", "$filter", function(
		$rootScope,
		$scope,
		$state,
		System,
		UseNavData,
		SkillService,
		$ionicHistory,
		$timeout,
		$ionicSlideBoxDelegate,
        Utils,
        $filter
	) {
		var vm = this,
			localQAnswers = null;
		var questions = null;

		$scope.$on('$ionicView.afterEnter', function() {

			localQAnswers = SkillService.getSQAnswer();
			questions = SkillService.getSkillQuestions();
			questions.forEach(function(itm) {
				itm.options = SkillService.getSkillOptions();
			})

			vm.questions = questions;
			vm.keyedQuestions = _.groupBy(vm.questions, 'id');
			vm.answers = localQAnswers;
			vm.progress = {};

			_init();
		});



		////////////////////////////////////////////////////////
		vm.openSkillQuestionnaire = function(filter) {
			navigateTo("^.assessment", {filter: filter});
		}

		vm.getAnswer = function(question) {
			if (question.checks != null) {
				return vm.answers[question.id] || '-';
			}

			var value = vm.answers[question.id];
			var idx = _.findIndex(question.options, function(itm) {
				return itm.value == value;
			});

			if (idx > -1) return question.options[idx].text;
			return '-';
		};

		function _init() {
            var progress = { z: 0, y: 0, n: 0,
                    yg: { b: 0, i: 0, a: 0 }, // yes group
                    ng: { b: 0, i: 0, a: 0 }  // no group
                },
                totalQ = vm.questions.length;

			var groups = {
				basic: {
					ref: [1, 2, 4, 5, 6, 7, 8 ,9 ,10, 11, 12, 13, 14, 15, 16],
					val: 0
				},
				intermediate: {
					ref: [3, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29],
					val: 0
				},
				advanced: {
					ref: [22, 23],
					val: 0
				}
			}

			vm.questions.forEach(function(itm) {
				if (vm.answers[itm.id] == undefined || vm.answers[itm.id] == -1) {
					itm.group = 'Z';
                    progress.z++;
				} else if (vm.answers[itm.id] == 2) {
					itm.group = 'Y';
                    progress.y++;
                    progress.yg.b += groups.basic.ref.indexOf(itm.id) > -1 ? 1 : 0;
                    progress.yg.i += groups.intermediate.ref.indexOf(itm.id) > -1 ? 1 : 0;
                    progress.yg.a += groups.advanced.ref.indexOf(itm.id) > -1 ? 1 : 0;
				} else {
					itm.group = 'N';
                    progress.n++;
                    progress.yg.b += groups.basic.ref.indexOf(itm.id) > -1 ? 1 : 0;
                    progress.yg.i += groups.intermediate.ref.indexOf(itm.id) > -1 ? 1 : 0;
                    progress.yg.a += groups.advanced.ref.indexOf(itm.id) > -1 ? 1 : 0;
				}

				if (groups.basic.ref.indexOf(itm.id) > -1 && vm.answers[itm.id] == 2) {
					groups.basic.val++;
				}
				else if (groups.intermediate.ref.indexOf(itm.id) > -1 && vm.answers[itm.id] == 2) {
					groups.intermediate.val++;
				}
				else if (groups.advanced.ref.indexOf(itm.id) > -1 && vm.answers[itm.id] == 2) {
					groups.advanced.val++;
				}
			});

			groups.basic.percent 		= groups.basic.val 			/ groups.basic.ref.length		 * 100;
			groups.intermediate.percent = groups.intermediate.val 	/ groups.intermediate.ref.length * 100;
			groups.advanced.percent 	= groups.advanced.val 		/ groups.advanced.ref.length	 * 100;
			vm.groups = groups;


			vm.totalQ = totalQ;

			progress.zp = Math.round(progress.z / totalQ * 100); //need to assess / not applicable
			progress.yp = Math.round(progress.y / totalQ * 100); //achieved
			progress.np = Math.round(progress.n / totalQ * 100); //need to acquire

			vm.progress = progress; //self.getSQProgress();

			// $scope.showRecommendation = progress.z <= 0 && progress.n > 0;
			vm.showRecommendation = progress.y > 0;
		}

		// vm.forwardViaEmail = function _forwardEmail() {

		// 	if (!Utils.checkPlugin('email')) return;

		// 	cordova.plugins.email.isAvailable(function(isAvailable) {
		// 		if (!isAvailable) {
		// 			alert("Email is not available. Please check your email under phone's setting");
		// 			return;
		// 		}

		// 		confirm("This Element's Summary will be forwarded via email. Do you want to continue?").then(cbSend);
		// 	});

		// 	function cbSend() {
		// 		var subject = "My Wheelchair Guide: Fit Summary (" + $filter('date')(new Date(), 'yyyy-MM-dd HH:mm') + ")";
		// 		var text = null,
		// 			medias = null;

        //         var summary = document.querySelector('#manualFitSummary');
        //         if (summary) text = summary.innerHTML;

		// 		var emailProps = {
		// 			// to:      'smart.drrp@gmail.com',
		// 			// bcc:     ['hsl16@pitt.edu', 'dad5@pitt.edu'],
		// 			subject: subject,
		// 			isHtml: true
		// 		};

		// 		var body = 'Hi,<br><br>\
        //           Following is the Manual Wheelchair Fit Summary.';

		// 		if (text != null) body += '<br><br>' + text;

		// 		if (medias != null) {
		// 			body += '<br><br>Please find out more in the attachment.';
		// 			emailProps.attachments = medias;
		// 		}

		// 		emailProps.body = body;

		// 		cordova.plugins.email.open(emailProps);
		// 	}
		// }
	}])

	.controller('UWSkillItemsCtrl', ["$rootScope", "$scope", "$state", "$stateParams", "System", "ManualSkillNavData", "UseWheelchairService", "$ionicHistory", "PreviousState", function(
		$rootScope,
		$scope,
		$state,
		$stateParams,
		System,
		ManualSkillNavData,
		UseWheelchairService,
		$ionicHistory,
		PreviousState
	) {
		var vm = this;
		var _ytPlayers = [];

		vm.navComponents = ManualSkillNavData.nav;

		// console.log(PreviousState, $ionicHistory.backView(), $ionicHistory.viewHistory())

		if (vm.achorView == null) vm.achorView = $ionicHistory.backView();

		vm.goBack = function() {
			// navigateTo(PreviousState.Name);
			// $ionicHistory.goBack(-1);
			$ionicHistory.goBack(
				vm.achorView.index + 1 - $ionicHistory.viewHistory().histories[vm.achorView.historyId].stack.length
			);
		};

		$scope.$on('youtube.player.ready', function($event, player) {
			console.debug('youtube.player.ready', player);
			_ytPlayers.push(player);
		})

		$scope.$on('youtube.player.playing', function($event, player) {
			console.debug('youtube.player.playing')
		})

		$scope.$on("navContentBar:onChangePage", function(event, page) {
			_ytPlayers.forEach(function(player) {
				if(player.getPlayerState() === YT.PlayerState.PLAYING) {
				  player.pauseVideo();
				}
			})
		})

		$scope.$on('$destroy', function() {
			vm.achorView = null;
		});

		$scope.prevPage = function() {
			vm.prevPage = $scope.$parent.prevPage;
		};

		$scope.nextPage = function() {
			vm.nextPage = $scope.$parent.nextPage;
		};

		$scope.openWheelchairChecklistOrSummary = function() {
			alert('aaa');
		};

		$scope.openPopup = function(id, defaultValue) {
			UseWheelchairService.openFitPopup(id, defaultValue);
		};
	}])
	.controller('UWSkillItemCtrl', ["$scope", "$rootScope", "$state", "System", "UseNavData", "$ionicHistory", function($scope, $rootScope, $state, System, UseNavData, $ionicHistory) {
		var vm = this;
		// console.log($ionicHistory.viewHistory())
	}]);

'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.Auth
 * @description
 * # Auth
 * Factory in the smartvcApp.
 */
angular.module('smartvcApp.services')

.factory('ManualSkillNavData', function() {

    var service = {};
    service.nav = {
        pages: [{
                title: "Flat",
                children: [
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "flat_feature"}, title: "Feature" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "flat_psf"}, title: "PSF"},
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "flat_straight"}, title: "Straight"}
                ]
            },
            // {
            //     title: "Slope",
            //     children: [
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "ra_asc"}, title: "Ascending" },
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "ra_desc"}, title: "Descending" },
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "ra_slope"}, title: "Side slope" }
            //     ]
            // },
            {
                title: "Maneuver",
                children: [
                    // { state: "main.usewheelchair.skills.skill.page", params: {name: "na_turncorner"}, title: "Corner" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "mn_turn"}, title: "Turn" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "mn_door"}, title: "Door" }
                ]
            },
            {
                title: "Routines",
                children: [
                    // { state: "main.usewheelchair.skills.skill.page", params: {name: "ct_disassemble"}, title: "Fold" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "da_weight"}, title: "Weight shift" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "da_transfer"}, title: "Transfer" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "da_reaching"}, title: "Reach" }
                ]
            },
            {
                title: "Obstacles",
                children: [
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "ob_ramp"}, title: "Ramp" },
                    { state: "main.usewheelchair.skills.skill.page", params: {name: "ob_terrain"}, title: "Terrain" },
                    // { state: "main.usewheelchair.skills.skill.page", params: {name: "ob_surface"}, title: "Soft surface" }
                ]
            },
            // {
            //     title: "Steep Ramps",
            //     children: [
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "sr_asc"}, title: "Ascend" },
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "sr_desc"}, title: "Descend" }
            //     ]
            // },
            // {
            //     title: "Height",
            //     children: [
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "dh_curbs"}, title: "Curb" },
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "dh_descend"}, title: "Step" },
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "dh_ground"}, title: "Floor-to-chair" }
            //     ]
            // },
            // {
            //     title: "Wheelie",
            //     children: [
            //         { state: "main.usewheelchair.skills.skill.page", params: {name: "wh_wheelie"}, title: "Wheelie" }
            //     ]
            // },

            ],
        states: "main.usewheelchair.skills.**"
    };

    return service;
})
;

'use strict';


angular.module('smartvcApp.services')

.constant("SkillQuestions", [
    { id: 1, text: 'Can you move controller away and back? (e.g., in preparation for a transfer)' },
    { id: 2, text: 'Can you turn power on and off?' },
    { id: 3, text: 'Can you select drive modes/profiles and speeds?' },
    { id: 4, text: 'Can you operate power seating functions? (e.g., from upright to tilt and recline)' },
    { id: 5, text: 'Can you disengage and engage motors? (e.g., to allow your power wheelchair to be manually pushed if stranded)' },
    { id: 6, text: 'Can you operate the battery charger?' },
    { id: 7, text: 'Can you drive the wheelchair straight forward for a short distance? (e.g., along a short hallway)' },
    { id: 8, text: 'Can you drive the wheelchair straight backwards for a short distance? (e.g., backing away from a table)' },
    { id: 9, text: 'Can you turn wheelchair in place? (e.g., turning on the spot)' },
    { id: 10, text: 'Can you turn the wheelchair around a corner while moving forward?' },
    { id: 11, text: 'Can you turn the wheelchair around a corner while moving backward?' },
    {
        id: 12,
        text: 'Can you drive the wheelchair sideways like parallel parking in a small space? (e.g., get closer to  a kitchen counter from the side)'
    },
    {
        id: 13,
        text: 'Can you reach for something over your head (e.g., a high elevator button) while in the wheelchair?'
    },
    {
        id: 14,
        text: 'Can you pick up a small object (e.g., a book) off the floor while in the wheelchair?'
    },
    { id: 15, text: 'Can you lift your buttocks off the wheelchair, either one at a time or both together?' },
    { id: 16, text: 'Can you transfer from the wheelchair to a bench that is about the same height as a wheelchair, and then move back?' },
    { id: 17, text: 'Can you open a hinged door, move the wheelchair through it, and then close the door behind you?' },
    { id: 18, text: 'Can you drive the wheelchair over a long distance? (e.g., a smooth surface about the length of a sports field)' },
    { id: 19, text: 'Can you avoid moving people who do not notice you while driving your wheelchair?' },
    { id: 20, text: 'Can you drive the wheelchair up a slight incline? (e.g., a typical ramp)' },
    { id: 21, text: 'Can you drive the wheelchair down a slight incline?' },
    {
        id: 22,
        text: 'Can you drive the wheelchair up a steep incline?'
    },
    { id: 23, text: 'Can you drive the wheelchair down a steep incline?' },
    { id: 24, text: 'Can you drive a wheelchair across a slight side-slope? (e.g., crossing a driveway)' },
    { id: 25, text: 'Can you drive the wheelchair a short distance across a soft surface (e.g., gravel)?' },
    { id: 26, text: 'Can you drive the wheelchair over an obstacle that sticks up above the surface (e.g., a door threshold)?' },
    { id: 27, text: 'Can you drive the wheelchair over a gap (e.g., a rut in the road)?' },
    {
        id: 28,
        text: 'Can you get the wheelchair up a low curb? (e.g., when entering a building)'
    },
    { id: 29, text: 'Can you get the wheelchair down from a low curb?' },
])

.constant("SkillOptions", [
    { text: 'Yes', value: 2 },
    { text: 'Yes with Difficulty', value: 1 },
    { text: 'No', value: 0 },
    { text: 'Not Applicable', value: -1 }
])

.factory('SkillService', ["$q", "$rootScope", "StorageService", "SkillQuestions", "SkillOptions", "System", "$ionicSlideBoxDelegate", function($q, $rootScope, StorageService, SkillQuestions, SkillOptions,
    System, $ionicSlideBoxDelegate) {

    var service = {};

    // service.setData = _setData;
    // service.getData = _getData;
    // service.resetData = _resetData;
    service.openSkillQuestionnaire = _openSkillQuestionnaire;
    service.openSQSummary = _openSQSummary;
    service.setSQAnswer = _setSQAnswer;
    service.getSQAnswer = _getSQAnswer;
    service.isSQFilled = _isSQFilled;
    service.getSQProgress = _getSQProgress;
    service.isCautionPopedUp = _isCautionPopedUp;
    service.setCautionPopUp = _setCautionPopUp;
    service.resetCautionPopUp = _resetCautionPopUp;
    service.isCautionSkillAdvancedPopedUp = _isCautionSkillAdvancedPopedUp;
    service.setCautionSkillAdvancedPopeUp = _setCautionSkillAdvancedPopeUp;
    service.openCautionSkillAdvanced = _openCautionSkillAdvanced;
    service.getSkillQuestions = _getSkillQuestions;
    service.getSkillOptions = _getSkillOptions;

    _initialize();

    return service;

    ///////////////////////////////////////////////
    function _initialize() {
        $rootScope.$on('auth:authenticated', function() {
            service.resetCautionPopUp();
            service.setCautionSkillAdvancedPopeUp(false);
        });
    }

    function _setData() {

    }

    function _getData() {
        var db = StorageService.get();
        if (!db.useWheelchair) {
            db.useWheelchair = {};
            StorageService.set(db);
        }

        return db.useWheelchair;
    }

    function _setData(data) {
        var db = StorageService.get();
        db.useWheelchair = angular.copy(data);
        StorageService.set(db);
    }

    function _resetData() {
        _set({});
    }

    function _getSkillQuestions() {
        return SkillQuestions;
    }

    function _getSkillOptions() {
        return SkillOptions;
    }

    function _openCautionSkillAdvanced() {
        var msg = 'DO NOT attempt to perform advanced skills if you have not received appropriate training. \
        These skills should not be practiced without a spotter. Description about how to perform these skills \
        is not provided. Consult your therapist for assessment and training.';

        alert(msg);
    }

    function _setCautionSkillAdvancedPopeUp(status) {
        var localData = _getData();
        localData.cautionSkillAdvancedPoped = status;
        _setData(localData);
    }

    function _isCautionSkillAdvancedPopedUp() {
        var localData = _getData();
        if (localData.cautionSkillAdvancedPoped == undefined) {
            localData.cautionSkillAdvancedPoped = false;
            _setData(localData);
        }
        return localData.cautionSkillAdvancedPoped;
    }

    function _isCautionPopedUp() {
        var localData = _getData();
        if (localData.cautionPoped == undefined) {
            localData.cautionPoped = false;
            _setData(localData);
        }
        return localData.cautionPoped;
    }

    function _setCautionPopUp() {
        var localData = _getData();
        localData.cautionPoped = true;
        _setData(localData);
    }

    function _resetCautionPopUp() {
        var localData = _getData();
        localData.cautionPoped = false;
        _setData(localData);
    }

    function _getSQProgress(progress) {}

    function _isSQFilled() {
        var localData = _getData();
        return !_.isEmpty(localData.sQAnswer);
    }

    function _getSQAnswer() {
        var localData = _getData();
        if (localData.sQAnswer == null) {
            localData.sQAnswer = {};
            _setData(localData);
        }

        return localData.sQAnswer;
    }

    function _setSQAnswer(data) {
        var localData = _getData();
        localData.sQAnswer = data;
        _setData(localData);
    }

    function _openSQSummary($scope) {
        var self = this,
            defer = $q.defer(),
            sQAnswer = this.getSQAnswer();
        $scope.progress = 0;

        $scope.options = _.indexBy(SkillOptions, 'value');

        _init();

        $scope.translateAnswer = function(value) {
            value = value == null ? 0 : value;
            return $scope.options[value].title;
        };
        $scope.openSkillQuestionnaire = function(filter) {
            self.openSkillQuestionnaire($scope.$new(), filter).then(function() {
                _init();
            });
        };

        $scope.getIndexOf = function(question) {
            return SkillQuestions.indexOf(question);
        };

        System.getModalPage('views/usewheelchair/skills/skill-questionnaire-summary.html', $scope).then(function(
            page
        ) {
            if (self.isSQFilled()) {
                page.show();
                defer.resolve();
            } else {
                defer.reject();
            }
        });

        function _init() {
            sQAnswer = self.getSQAnswer();
            var progress = { z: 0, y: 0, n: 0 },
                totalQ = SkillQuestions.length;

            SkillQuestions.forEach(function(itm) {
                if (sQAnswer[itm.id] == undefined) {
                    itm.group = 'Z';
                    progress.z++;
                } else if (sQAnswer[itm.id] == 2) {
                    itm.group = 'Y';
                    progress.y++;
                } else {
                    itm.group = 'N';
                    progress.n++;
                }
            });

            $scope.sQAnswer = sQAnswer;
            $scope.questions = SkillQuestions;
            $scope.totalQ = totalQ;

            progress.zp = Math.round(progress.z / totalQ * 100); //need to assess
            progress.yp = Math.round(progress.y / totalQ * 100); //achieved
            progress.np = Math.round(progress.n / totalQ * 100); //need to acquire

            $scope.progress = progress; //self.getSQProgress();

            // $scope.showRecommendation = progress.z <= 0 && progress.n > 0;
            $scope.showRecommendation = progress.y > 0;
        }

        return defer.promise;
    }

    function _openSkillQuestionnaire($scope, filter) {
        var self = this,
            defer = $q.defer(),
            outerSlideBox = null,
            localData = this.get();

        //setup local storage for skill questionnaire
        if (!localData.sQAnswer) {
            localData.sQAnswer = {};
            _setData(localData);
        }

        var oriSQAnswer = angular.copy(localData.sQAnswer);

        // setup logistic
        var _pages = [],
            _page = null;
        SkillQuestions.forEach(function(itm, idx) {
            if (filter == undefined) itm.show = true;
            if (filter == 'ASSESS') itm.show = localData.sQAnswer[itm.id] == undefined;
            if (filter == 'ACQUIRE') itm.show = localData.sQAnswer[itm.id] == 0 || localData.sQAnswer[itm.id] == 1;

            if (_page == null) _page = [];
            if (itm.show) _page.push(itm);
            if (_page.length == 2 || (idx == SkillQuestions.length - 1 && _page.length > 0)) {
                _pages.push(angular.copy(_page));
                _page = null;
            }
        });

        $scope.questions = SkillQuestions;
        $scope.options = _.indexBy(SkillOptions, 'value');
        $scope.sQAnswer = localData.sQAnswer;
        $scope.pages = _pages;

        System.getModalPage('views/usewheelchair/skills/skill-questionnaire2perpage.html', $scope).then(function(
            page
        ) {
            // Below solution for ionicModal using rootScope
            // refer to this https://github.com/driftyco/ionic/issues/2754
            // change with decorator
            // ---------------------------
            outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
            $scope.updateSlidebox();
            page.show();

            $timeout(function() {
                // disable the slide event for ion-slidebox
                outerSlideBox.enableSlide(false);
            }, 100);
        });

        $scope.updateSlidebox = function(makeDouble) {
            outerSlideBox.update();

            $timeout(function() {
                $scope.questionsTotal = outerSlideBox.slidesCount();
                $scope.currentIndex = outerSlideBox.currentIndex();
            }, 0);
        };

        $scope.nextPage = function() {
            $timeout(function() {
                outerSlideBox.next();
                $scope.currentIndex = outerSlideBox.currentIndex();
            }, 100);
        };

        $scope.prevPage = function() {
            $timeout(function() {
                outerSlideBox.previous();
                $scope.currentIndex = outerSlideBox.currentIndex();
            }, 100);
        };

        $scope.close = function() {
            var diff = Utils.findDiffObject(oriSQAnswer, $scope.sQAnswer);
            if (!_.isEmpty(diff)) {
                confirm('This action will save your assessment. Continue?').then(
                    function() {
                        self.set(localData);
                        alert('Filled item saved').then(function() {
                            $scope.page.close();

                            //push-data
                            $scope.$emit('event:skill-assessment-updated');

                            defer.resolve();
                        });
                    },
                    function() {
                        $scope.page.close();
                        defer.reject();
                    }
                );
            } else {
                $scope.page.close();
                defer.reject();
            }
        };

        $scope.getIndexOf = function(question) {
            return SkillQuestions.indexOf(question);
        };

        return defer.promise;
    }
}]);

'use strict';

/**
 * @ngdoc function
 * @name smartvcApp.controller:UsewheelchairCtrl
 * @description
 * # UsewheelchairCtrl
 * Controller of the smartvcApp
 */
angular.module('smartvcApp.controllers')

.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

  $stateProvider

  .state('main.usewheelchair', {
    url: '/usewheelchair',
    views: {
      'main-content@main': {
        templateUrl: 'usewchair/main.html',
        controller: 'UseWheelchairCtrl'
      }
    }
  })

}])


.controller('UseWheelchairCtrl', ["$scope", "$rootScope", "$state", "System", "UseWheelchairService", function ($scope, $rootScope, $state, System, UseWheelchairService) {
    activate();


    //////////////////////////
    function activate() {
        _init();

        if (!UseWheelchairService.isCautionPopedUp()) {
            System.openCaution();
            UseWheelchairService.setCautionPopUp();
        }
    }

    function _init() {
    }
}])




'use strict';

/**
 * @ngdoc service
 * @name smartvcApp.UseWheelchairService
 * @description
 * # UseWheelchairService
 * Factory in the smartvcApp.
 */
angular
	.module('smartvcApp.services')
	.service('UseWheelchairService', ["$rootScope", "$q", "$http", "StorageService", "$ionicPopup", "$ionicSlideBoxDelegate", "$timeout", "System", "Utils", function(
		$rootScope,
		$q,
		$http,
		StorageService,
		$ionicPopup,
		$ionicSlideBoxDelegate,
		$timeout,
		System,
		Utils
	) {
		var featuresData = {
			feature01: {
				title: 'My wheel position is',
				list: ['In front of my shoulders', 'In line with my shoulders', 'Behind my shoulders']
			},

			feature02: {
				title: 'Wheel camber',
				list: ['Can be a plus for my wheelchair usage', 'Interferes with wheelchair usage']
			},

			feature03: {
				title: 'My seat angle is',
				list: ['Too large (too much seat dump)', 'Too small']
			},

			feature04: {
				title: 'My seat depth is',
				list: ['Too long', 'Too short']
			},

			feature05: {
				title: 'My seat cushion is',
				list: ['Too thin', 'Too thik', 'Not comfortable']
			},

			feature06: {
				title: 'My backrest height is',
				list: ['Too low', 'Too high']
			},

			feature07: {
				title: 'My backrest angle is',
				list: ['Too small', 'Too large']
			},

			feature08: {
				title: 'My back support is',
				list: ['Too stiff', 'Too soft']
			},

			feature09: {
				title: 'My armrests are',
				list: ['interfering with my arm movement']
			},

			feature10: {
				title: 'My footrests are',
				list: ['Too high', 'Too low']
			},

			feature11: {
				title: 'My leg to seat angle is',
				list: ['Bending my knees too much', 'Extending my knees too much']
			},

			feature12: {
				title: 'My position accessories are',
				list: ['Not comfortable', 'Interfering with my movement', 'Not enough']
			}
		};

		var problemsData = {
			prob01: { title: 'Unable to reach most of handrim' },
			prob02: { title: 'Need to reach far back for handrims' },
			prob03: { title: 'Tip backwards too easily' },
			prob04: { title: 'Unable to pop a wheelie to get over curb' },
			prob05: { title: 'Seat or back is too wide' },
			prob06: { title: 'Seat or back is too tight' },
			prob07: { title: 'Have shoulder pain' },
			prob08: { title: 'Feel pressure somewhere' },
			prob09: { title: 'Wheelchair is too heavy to push' },
			prob10: { title: 'Sliding forward in seat' },
			prob11: { title: 'Body leans to one side' },
			prob12: { title: 'Do not feel stable' },
			prob13: { title: 'Difficult to make turns' },
			prob14: { title: 'Feet fall out of the footrests' },
			prob15: { title: 'Knees tend to flare apart' }
		};

		var dataScheme = {
			summary: {
				features: [],
				problems: []
			}
		};

        // THIS is for FIT sub section
		var _setupQuestions = [
			{
				id: 1,
				text: 'My <a>seat depth</a> is:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "seat-depth"},
				summary: "Seat Depth ",
				options: [
					{ value: 1, text: 'Too long' },
					{ value: 2, text: 'Appropriate' },
					{ value: 3, text: 'Too short' }
				]
            },
            {
				id: 2,
				text: 'My <a>seat width</a> is:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "seat-width"},
				summary: "Seat Width ",
				options: [
					{ value: 1, text: 'Too wide' },
					{ value: 2, text: 'Appropriate' },
					{ value: 3, text: 'Too narrow' }
				]
            },
            {
				id: 3,
				text: 'My <a>seat cushion</a> is:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "cushion"},
				summary: "Seat Cushion ",
				options: [
					{ value: 1, text: 'Selected via pressure mapping assessment' },
					{ value: 2, text: 'Not selected via pressure mapping assessment' },
				]
            },
            {
				id: 4,
				text: 'My <a>footrest</a>:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "footrest-angle"},
				summary: "Footrest Angle ",
				options: [
					{ value: 1, text: 'Bend my knees too much' },
                    { value: 2, text: 'Extend my knees too much' },
                    { value: 3, text: 'Are set-up appropriately' },
				]
            },
            {
				id: 5,
				text: 'My <a>footrest length</a> is:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "footrest-length"},
				summary: "Footrest Length ",
				options: [
					{ value: 1, text: 'Too long' },
					{ value: 2, text: 'Appropriate' },
					{ value: 3, text: 'Too short' }
				]
            },
            {
				id: 6,
				text: 'My <a>headrest</a> is:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "headrest"},
				summary: "Headrest ",
				options: [
					{ value: 1, text: 'Too far forward' },
					{ value: 2, text: 'Appropriate' },
					{ value: 3, text: 'Too far backward' }
				]
            },
			{
				id: 7,
				text: 'My <a>controller position</a> is:',
				state: 'main.usewheelchair.fit.features.page',
				params: {name: "mounting-location"},
				summary: "Mounting location ",
				options: [
					{ value: 1, text: 'Too close to me' },
					{ value: 2, text: 'Too far to reach' },
					{ value: 3, text: 'Appropriate' }
				]
            },
            {
				id: 8,
				text: 'My wheelchair is:',
				state: '',
				params: {},
				summary: "",
				options: [
					{ value: 1, text: 'Very jumpy' },
					{ value: 2, text: 'Responsive and easy to drive' },
					{ value: 3, text: 'Not responsive' }
				]
            },
		];

        // THIS IS NOT_USED. FIND AT LOCAL SKILLS Module
		var _skillQuestions = [];

        // THIS IS NOT_USED. FIND AT LOCAL SKILLS Module
		var _skillOptions = [];

		var _componentQuestions = [
			{
				id: 1,
				text: 'My powered <a>wheelchair base</a> is:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "bases-front"},
				summary: "Frame ",
				options: [
					{ value: 1, text: 'Front wheel drive' },
					{ value: 2, text: 'Mid wheel drive' },
					{ value: 3, text: 'Rear wheel drive' }
				]
			},
			{
				id: 2,
				text: 'My <a>powered wheelchair</a> has (select all that apply):',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "psf-tilt"},
				summary: "Backrests ",
				checks: [
                    { value: 1, text: 'Posterior tilt function'} ,
                    { value: 2, text: 'Anterior tilt function'} ,
                    { value: 3, text: 'Backrest recline function'} ,
                    { value: 4, text: 'Legrest elevation function'} ,
                    { value: 5, text: 'Seat elevation function'} ,
                    { value: 6, text: 'Power standing function'} ,
                    { value: 7, text: 'No powered seating function'} ,
				]
			},
			{
				id: 3,
				text: 'The <a>tires of the driving wheels</a> are:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "tire-pneumatic"},
				summary: "Wheels ",
				options: [
					{ value: 1, text: 'Pneumatic' },
					{ value: 2, text: 'Solid' }
				]
			},
			{
				id: 4,
				text: 'My <a>backrest</a> is:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "backrest-soft"},
				summary: "Backrest ",
				options: [
					{ value: 1, text: 'Soft: Sling' },
					{ value: 2, text: 'Soft: Adjustable tension ' },
					{ value: 3, text: 'Rigid' },
				]
            },
			{
				id: 5,
                text: 'My <a>armrest</a> are:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "armrest-up"},
				summary: "Backrest ",
				options: [
					{ value: 1, text: 'Flip-up' },
					{ value: 2, text: 'Removable' },
					{ value: 3, text: 'Fixed' },
				]
            },
			{
				id: 6,
				text: 'My <a>footrest</a> are:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "footrest-center"},
				summary: "Footrest ",
				options: [
					{ value: 1, text: 'Centered' },
					{ value: 2, text: 'Swing-away' },
				]
			},
			{
				id: 7,
				text: 'My <a>footrest</a> angle:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "footrest-center"},
				summary: "Footrest ",
				options: [
                    { value: 1, text:'Is fixed' },
                    { value: 2, text:'Can be adjusted using the power elevating feature' },
                    { value: 3, text:'Can be adjusted manually by myself' },
                    { value: 4, text:'Is adjustable, but need to use tools' },
				]
			},
			{
				id: 8,
				text: 'My <a>pressure relief cushion</a> is:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "cushion-contoured"},
				summary: "Cushion ",
				options: [
					{ value: 1, text: 'Standard foam cushion' },
					{ value: 2, text: 'Contoured foam cushion' },
					{ value: 3, text: 'Gel-foam cushion' },
					{ value: 4, text: 'Gel cushion' },
					{ value: 5, text: 'Air-foam cushion' },
					{ value: 6, text: 'Air capsule cushion' },
					{ value: 7, text: 'Custom molded' },
					{ value: 8, text: 'I am not using any cushion' }
				]
            },
			{
				id: 9,
				text: 'I am using these <a>positioning accessories</a> (select all that apply):',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "accessories-headrest"},
				summary: "Accessories ",
				checks: [
					{ value: 1, text: 'Headrest' },
					{ value: 2, text: 'Lateral support' },
					{ value: 3, text: 'Chest strap' },
					{ value: 4, text: 'Harness' },
					{ value: 5, text: 'Hip Guide' },
					{ value: 6, text: 'Lap Straps' },
					{ value: 7, text: 'Leg Straps' },
					{ value: 8, text: 'Ankle Loop' },
                    { value: 9, text: 'None of the above' }
				]
			},
			{
				id: 10,
				text: 'The <a>controller</a> that I am using to control my powered wheelchair:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "controller-joystick"},
				summary: "Controller ",
				options: [
					{ value: 1, text: 'Joystick controller' },
					{ value: 2, text: 'Alternative controller' }
				]
            },
			{
				id: 11,
				text: 'My <a>controller mount</a> is:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "controller-joystick"},
				summary: "Controller ",
				options: [
					{ value: 1, text: 'Fixed' },
                    { value: 2, text: 'Swing-away' },
                    { value: 3, text: 'Retractable' }
				]
            },

            {
				id: 12,
				text: 'What kind of <a>alternative controller</a> do you use?',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "controller-alternatives"},
				summary: "Controller ",
				options: [
					{ value: 1, text: 'Single switch scanning' },
					{ value: 2, text: 'Sip and puff' },
					{ value: 3, text: 'Mini joystick' },
					{ value: 4, text: 'Foot control' },
					{ value: 5, text: 'Head array control' },
					{ value: 6, text: 'Others.' }
				]
            },
			{
				id: 13,
				text: 'The system I use to <a>secure my wheelchair</a> in the vehicle:',
				state: 'main.usewheelchair.components.component.page',
				params: {name: "controller-alternatives"},
				summary: "Secure Wheelchair ",
				options: [
					{ value: 1, text: 'Teidown System' },
                    { value: 2, text: 'Docking System' },
                    { value: 3, text: 'Others.' },
                    { value: 4, text: 'None' }
				]
            },
		];

		var service = {
			get: function() {
				var db = StorageService.get();
				if (!db.useWheelchair) {
					db.useWheelchair = dataScheme;
					StorageService.set(db);
				}

				return db.useWheelchair;
			},

			set: function(useWheelchair) {
				var db = StorageService.get();
				db.useWheelchair = angular.copy(useWheelchair);
				StorageService.set(db);
			},

			reset: function() {
				this.set(dataScheme);
			},

			/* Features */
			addWheelchairFeatureToSummary: function(feature) {
				var localData = this.get();

				//add to local, but first check if already exist or not
				var idx = _.findIndex(localData.summary.features, function(item) {
					return item.key == feature.key;
				});

				if (idx >= 0) {
					localData.summary.features.splice(idx, 1);
				}

				localData.summary.features.push(feature);
				this.set(localData);
			},

			removeWheelchairFeatureFromSummary: function(feature) {
				var localData = this.get();

				if (!localData.summary) return;

				if (_.isArray(localData.summary.features) && localData.summary.features.length > 0) {
					var idx = _.findIndex(localData.summary.features, function(item) {
						return item.key == feature.key;
					});

					if (idx >= 0) {
						localData.summary.features.splice(idx, 1);
						this.set(localData);
					}
				}
			},

			openFeaturePopup: function(id, defaultValue, $scope) {
				var self = this,
					defer = $q.defer(),
					popupTitle = null;

				if (!$scope) {
					$scope = $rootScope.$new();
				}

				$scope.bundle = {};

				// find feature
				var question = null;
				var idx = _.findIndex(_setupQuestions, function(itm) {
					return itm.id == id;
				});

				if (idx > -1) {
					question = _setupQuestions[idx];
					popupTitle = question.text;
					$scope.options = question.options;

					var setupQAnswer = this.getSetupQAnswer();
					if (setupQAnswer && setupQAnswer[id]) {
						var idx2 = _.findIndex($scope.options, function(itm) {
							return itm.value == setupQAnswer[id];
						});
						if (idx2 > -1) {
							defaultValue = $scope.options[idx2];
						}
					}
				}

				$scope.data = {
					selected: defaultValue
				};

				var popup = $ionicPopup.show({
					templateUrl: 'modals/modal-feature-popup.html',
					title: popupTitle,
					scope: $scope,
					buttons: [
						{
							text: 'Cancel',
							onTap: function(e) {
								return 'CANCEL';
							}
						},
						{
							text: '<b>Save</b>',
							onTap: function(e) {
								if ($scope.data.selected == null) {
									e.preventDefault();
								} else {
									return $scope.data;
								}
							}
						}
					]
				});

				popup.then(function(data) {
					if (data == 'CANCEL') {
						defer.reject();
					} else {
						//add to local storage
						if (data && data.selected) {
							// concat with title
							var localData = self.get();
							localData.setupQAnswer[question.id] = data.selected.value;
							self.set(localData);
							// data.selected.value = _.capitalize((popupTitle + ' ' + data.selected.value).toLowerCase());
							// self.addWheelchairFeatureToSummary(data.selected);
						}

						defer.resolve(data);
						popup.close();
					}
				});

				return defer.promise;
			},

			/* Troubleshoot */
			getProblemList: function() {
				var keys = _.keys(problemsData);
				var result = keys.map(function(item) {
					return { key: item, value: problemsData[item] };
				});

				return result;
			},

			addWheelchairProblemToSummary: function(problem) {
				var localData = this.get();
				var summary = localData.summary;

				//add to local, but first check if already exist or not
				var idx = _.findIndex(summary.problems, function(item) {
					return item.key == problem.key;
				});

				if (idx >= 0) {
					summary.problems.splice(idx, 1);
				}

				summary.problems.push(problem);
				this.set(localData);
			},

			removeWheelchairProblemFromSummary: function(problem) {
				var localData = this.get();
				var summary = localData.summary;

				if (_.isArray(summary.problems) && summary.problems.length > 0) {
					var idx = _.findIndex(localData.summary.problems, function(item) {
						return item.key == problem.key;
					});

					if (idx >= 0) {
						summary.problems.splice(idx, 1);
						this.set(localData);
					}
				}
			},

			openProblemPopup: function(id, defaultValue, $scope) {
				var self = this,
					defer = $q.defer(),
					popupTitle;

				if (!$scope) {
					$scope = $rootScope.$new();
				}

				$scope.bundle = {};

				if (problemsData[id]) {
					popupTitle = 'I Have This Problem';
					$scope.list = [
						{
							key: id,
							value: problemsData[id].title
						}
					];
				}

				$scope.data = {
					selected: defaultValue
				};

				var popup = $ionicPopup.show({
					templateUrl: 'modals/modal-problem-popup.html',
					title: popupTitle,
					scope: $scope,
					buttons: [
						{
							text: 'Cancel',
							onTap: function(e) {
								return 'CANCEL';
							}
						},
						{
							text: '<b>Yes</b>',
							onTap: function(e) {
								if ($scope.data.selected == null) {
									e.preventDefault();
								} else {
									return $scope.data;
								}
							}
						}
					]
				});

				popup.then(function(data) {
					if (data == 'CANCEL') {
						defer.reject();
					} else {
						//add to local storage
						if (data && data.selected) {
							self.addWheelchairProblemToSummary(data.selected);
						}

						defer.resolve(data);
						popup.close();
					}
				});

				return defer.promise;
			},

			openSkillQuestionnaire: _openSkillQuestionnaire,
			openSQSummary: _openSQSummary,
			getSQAnswer: _getSQAnswer,
			isSQFilled: _isSQFilled,
			getSQProgress: _getSQProgress,
			isCautionPopedUp: _isCautionPopedUp,
			setCautionPopUp: _setCautionPopUp,
			resetCautionPopUp: _resetCautionPopUp,
			isCautionSkillAdvancedPopedUp: _isCautionSkillAdvancedPopedUp,
			setCautionSkillAdvancedPopeUp: _setCautionSkillAdvancedPopeUp,
			openCautionSkillAdvanced: _openCautionSkillAdvanced,
			getQASSetup: _getQASetup,
			getQASkill: _getQASkill,

			/** Fit */
			getFitQuestions: _getFitQuestions,
			openSetupQuestionnaire: _openSetupQuestionnaire,
			openSetupQSummary: _openSetupQSummary,
			getSetupQAnswer: _getSetupQAnswer,
			isSetupQFilled: _isSetupQFilled,
			getSetupQProgress: _getSetupQProgress,
			setFitQAnswer: _setFitQAnswer,
			getFitQAnswer: _getSetupQAnswer,
			openFitPopup: _openFitPopup,

			componentQuestions: _componentQuestions,
			openComponentQuestionnaire: _openComponentQuestionnaire,
			getComponentQAnswer: _getComponentQAnswer,
			isComponentQFilled: _isComponentQFilled,
			openComponentPopup: _openComponentPopup
		};

		$rootScope.$on('auth:authenticated', function() {
			service.resetCautionPopUp();
			service.setCautionSkillAdvancedPopeUp(false);
		});

		return service;
		///////////

		{

		}

		function _getQASetup() {
			var d = $q.defer();

			$http.get('json/qa-setup.json').then(
				function(response) {
					d.resolve(response.data);
				},
				function(reason) {
					d.reject(reason);
				}
			);

			return d.promise;
		}

		function _getQASkill() {
			var d = $q.defer();

			$http.get('json/qa-skill.json').then(
				function(response) {
					d.resolve(response.data);
				},
				function(reason) {
					d.reject(reason);
				}
			);

			return d.promise;
		}

		function _openCautionSkillAdvanced() {
			var msg =
				'DO NOT attempt to perform advanced skills if you have not received appropriate training. These skills should not be practiced without a spotter. Description about how to perform these skills is not provided. Consult your therapist for assessment and training.';

			alert(msg);
		}

		function _setCautionSkillAdvancedPopeUp(status) {
			var localData = this.get();
			localData.cautionSkillAdvancedPoped = status;
			this.set(localData);
		}

		function _isCautionSkillAdvancedPopedUp() {
			var localData = this.get();
			if (localData.cautionSkillAdvancedPoped == undefined) {
				localData.cautionSkillAdvancedPoped = false;
				this.set(localData);
			}
			return localData.cautionSkillAdvancedPoped;
		}

		function _isCautionPopedUp() {
			var localData = this.get();
			if (localData.cautionPoped == undefined) {
				localData.cautionPoped = false;
				this.set(localData);
			}
			return localData.cautionPoped;
		}

		function _setCautionPopUp() {
			var localData = this.get();
			localData.cautionPoped = true;
			this.set(localData);
		}

		function _resetCautionPopUp() {
			var localData = this.get();
			localData.cautionPoped = false;
			this.set(localData);
		}

		function _getSQProgress(progress) {
			// var localData = this.get();
			// var totalQ = _skillQuestions.length;
			// var totalYes = 0;
			// _.keys(localData.sQAnswer).forEach(function(key) {
			//     if (localData.sQAnswer[key] == 2) totalYes++;
			// })
			// return totalYes/totalQ * 100;
		}

		function _isSQFilled() {
			var localData = this.get();
			return !_.isEmpty(localData.sQAnswer);
		}

		function _getSQAnswer() {
			var localData = this.get();
			return localData.sQAnswer;
		}

		function _openSQSummary($scope) {
			var self = this,
				defer = $q.defer(),
				sQAnswer = this.getSQAnswer();
			$scope.progress = 0;

			$scope.options = _.indexBy(_skillOptions, 'value');

			_init();

			$scope.translateAnswer = function(value) {
				value = value == null ? 0 : value;
				return $scope.options[value].title;
			};
			$scope.openSkillQuestionnaire = function(filter) {
				self.openSkillQuestionnaire($scope.$new(), filter).then(function() {
					_init();
				});
			};

			$scope.getIndexOf = function(question) {
				return _skillQuestions.indexOf(question);
			};

			System.getModalPage('views/usewheelchair/skills/skill-questionnaire-summary.html', $scope).then(function(
				page
			) {
				if (self.isSQFilled()) {
					page.show();
					defer.resolve();
				} else {
					defer.reject();
				}
			});

			function _init() {
				sQAnswer = self.getSQAnswer();
				var progress = { z: 0, y: 0, n: 0 },
					totalQ = _skillQuestions.length;

				_skillQuestions.forEach(function(itm) {
					if (sQAnswer[itm.id] == undefined) {
						itm.group = 'Z';
						progress.z++;
					} else if (sQAnswer[itm.id] == 2) {
						itm.group = 'Y';
						progress.y++;
					} else {
						itm.group = 'N';
						progress.n++;
					}
				});

				$scope.sQAnswer = sQAnswer;
				$scope.questions = _skillQuestions;
				$scope.totalQ = totalQ;

				progress.zp = Math.round(progress.z / totalQ * 100); //need to assess
				progress.yp = Math.round(progress.y / totalQ * 100); //achieved
				progress.np = Math.round(progress.n / totalQ * 100); //need to acquire

				$scope.progress = progress; //self.getSQProgress();

				// $scope.showRecommendation = progress.z <= 0 && progress.n > 0;
				$scope.showRecommendation = progress.y > 0;
			}

			return defer.promise;
		}

		function _openSkillQuestionnaire($scope, filter) {
			var self = this,
				defer = $q.defer(),
				outerSlideBox = null,
				localData = this.get();

			//setup local storage for skill questionnaire
			if (!localData.sQAnswer) {
				localData.sQAnswer = {};
				this.set(localData);
			}

			var oriSQAnswer = angular.copy(localData.sQAnswer);

			// setup logistic
			var _pages = [],
				_page = null;
			_skillQuestions.forEach(function(itm, idx) {
				if (filter == undefined) itm.show = true;
				if (filter == 'ASSESS') itm.show = localData.sQAnswer[itm.id] == undefined;
				if (filter == 'ACQUIRE') itm.show = localData.sQAnswer[itm.id] == 0 || localData.sQAnswer[itm.id] == 1;

				if (_page == null) _page = [];
				if (itm.show) _page.push(itm);
				if (_page.length == 2 || (idx == _skillQuestions.length - 1 && _page.length > 0)) {
					_pages.push(angular.copy(_page));
					_page = null;
				}
			});

			$scope.questions = _skillQuestions;
			$scope.options = _.indexBy(_skillOptions, 'value');
			$scope.sQAnswer = localData.sQAnswer;
			$scope.pages = _pages;

			System.getModalPage('views/usewheelchair/skills/skill-questionnaire2perpage.html', $scope).then(function(
				page
			) {
				// Below solution for ionicModal using rootScope
				// refer to this https://github.com/driftyco/ionic/issues/2754
				// change with decorator
				// ---------------------------
				outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
				$scope.updateSlidebox();
				page.show();

				$timeout(function() {
					// disable the slide event for ion-slidebox
					outerSlideBox.enableSlide(false);
				}, 100);
			});

			$scope.updateSlidebox = function(makeDouble) {
				outerSlideBox.update();

				$timeout(function() {
					$scope.questionsTotal = outerSlideBox.slidesCount();
					$scope.currentIndex = outerSlideBox.currentIndex();
				}, 0);
			};

			$scope.nextPage = function() {
				$timeout(function() {
					outerSlideBox.next();
					$scope.currentIndex = outerSlideBox.currentIndex();
				}, 100);
			};

			$scope.prevPage = function() {
				$timeout(function() {
					outerSlideBox.previous();
					$scope.currentIndex = outerSlideBox.currentIndex();
				}, 100);
			};

			$scope.close = function() {
				var diff = Utils.findDiffObject(oriSQAnswer, $scope.sQAnswer);
				if (!_.isEmpty(diff)) {
					confirm('This action will save your assessment. Continue?').then(
						function() {
							self.set(localData);
							alert('Filled item saved').then(function() {
								$scope.page.close();

								//push-data
								$scope.$emit('event:skill-assessment-updated');

								defer.resolve();
							});
						},
						function() {
							$scope.page.close();
							defer.reject();
						}
					);
				} else {
					$scope.page.close();
					defer.reject();
				}
			};

			$scope.getIndexOf = function(question) {
				return _skillQuestions.indexOf(question);
			};

			// $scope.finish = function(data) {
			//   confirm('This action will save your checklist. Continue?')
			//   .then(function() {
			//     data.wheelchairChecklist.setDone();
			//     _setPageData(_getPagesId().SELF_ASSESSMENT, data).then(cbSuccess);
			//     //////////////////////
			//     function cbSuccess() {
			//       $scope.page.close();
			//       defer.resolve(data.wheelchairChecklist);
			//     }

			//   }, function() {
			//     defer.reject();
			//   })

			// }

			return defer.promise;
		}

		/////////////////////////////////////////////////
		// FIT & SETUP
		/////////////////////////////////////////////////
		function _getFitQuestions() {
			return _setupQuestions;
		}

		function _getSetupQProgress() {
			var localData = this.get();
			var totalQ = _setupQuestions.length;
			var total = 0;
			var progress = 0;

			_.keys(localData.setupQAnswer).forEach(function(key) {
				if (localData.setupQAnswer[key]) total++;
			});

			progress = total / totalQ * 100;
			if (!progress) progress = 0;
			if (progress > 100) progress = 100;

			return progress;
		}

		function _isSetupQFilled() {
			var localData = this.get();
			return !_.isEmpty(localData.setupQAnswer);
		}

		function _getSetupQAnswer() {
			var localData = this.get();
			if (!localData.setupQAnswer) {
				localData.setupQAnswer = {};
				this.set(localData);
			}
			return localData.setupQAnswer;
		}

		function _setFitQAnswer(data) {
			var localData = this.get();
			localData.setupQAnswer = angular.extend({}, localData.setupQAnswer, data);
			this.set(localData);
		}

		function _openSetupQSummary($scope) {
			var self = this,
				defer = $q.defer(),
				setupQAnswer = this.getSetupQAnswer();

			$scope.progress = 0;

			if (!_.isEmpty(setupQAnswer)) _init();

			$scope.translateAnswer = function(question, value) {
				var options = _.indexBy(question.options, 'value');
				if (value) return options[value].text;
				return '';
			};

			// $scope.openSetupQuestionnaire = function() {
			//     self.openSetupQuestionnaire($scope.$new()).then(function() {
			//         _init();
			//     });
			// }

			$scope.getIndexOf = function(question) {
				return _setupQuestions.indexOf(question);
			};

			System.getModalPage('views/usewheelchair/setup/setup-questionnaire-summary.html', $scope).then(function(
				page
			) {
				// if(self.isSetupQFilled()) {
				page.show();
				defer.resolve();
				// } else {
				//     defer.reject();
				// }
			});

			function _init() {
				setupQAnswer = self.getSetupQAnswer();

				_setupQuestions.forEach(function(itm) {
					itm.group = setupQAnswer[itm.id] ? 'Y' : 'N';
				});

				var unexpectedList = _setupQuestions.filter(function(itm) {
					return (
						(itm.id == 3 && setupQAnswer[itm.id] != 2) || //appropriate
						(itm.id == 5 && setupQAnswer[itm.id] != 2) || //appropriate
						(itm.id == 7 && setupQAnswer[itm.id] != 1) || //comfortably snug
						(itm.id == 8 && setupQAnswer[itm.id] != 1) || //appropriate (my fingertip is at wheel axle)
						(itm.id == 9 && setupQAnswer[itm.id] != 1) || //selected via pressure mapping assessment
						(itm.id == 10 && setupQAnswer[itm.id] != 1) || //appropriate
						(itm.id == 11 && setupQAnswer[itm.id] != 1) //appropriate
					);
				});

				$scope.setupQAnswer = setupQAnswer;
				$scope.questions = _setupQuestions;
				$scope.progress = self.getSetupQProgress();
				$scope.unexpectedAnswer = unexpectedList;
			}

			return defer.promise;
		}

		function _openSetupQuestionnaire($scope) {
			var self = this,
				defer = $q.defer(),
				outerSlideBox = null,
				localData = this.get();

			//setup local storage for setup questionnaire
			if (!localData.setupQAnswer) {
				localData.setupQAnswer = {};
				this.set(localData);
			}

			var oriSetupQAnswer = angular.copy(localData.setupQAnswer);

			// setup logistic
			var _pages = [],
				_page = null;
			_setupQuestions.forEach(function(itm, idx) {
				itm.show = true; //localData.setupQAnswer[itm.id] ? false : true;

				if (_page == null) _page = [];
				if (itm.show) _page.push(itm);
				if (_page.length == 2 || (idx == _setupQuestions.length - 1 && _page.length > 0)) {
					_pages.push(angular.copy(_page));
					_page = null;
				}
			});

			$scope.questions = _setupQuestions;
			$scope.setupQAnswer = localData.setupQAnswer;
			$scope.pages = _pages;

			System.getModalPage('views/usewheelchair/setup/setup-questionnaire2perpage.html', $scope).then(function(
				page
			) {
				// Below solution for ionicModal using rootScope
				// refer to this https://github.com/driftyco/ionic/issues/2754
				// change with decorator
				// ---------------------------
				outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
				$scope.updateSlidebox();
				page.show();

				$timeout(function() {
					// disable the slide event for ion-slidebox
					outerSlideBox.enableSlide(false);
				}, 100);
			});

			$scope.updateSlidebox = function(makeDouble) {
				outerSlideBox.update();

				$timeout(function() {
					$scope.questionsTotal = outerSlideBox.slidesCount();
					$scope.currentIndex = outerSlideBox.currentIndex();
				}, 0);
			};

			$scope.nextPage = function() {
				$timeout(function() {
					outerSlideBox.next();
					$scope.currentIndex = outerSlideBox.currentIndex();
				}, 100);
			};

			$scope.prevPage = function() {
				$timeout(function() {
					outerSlideBox.previous();
					$scope.currentIndex = outerSlideBox.currentIndex();
				}, 100);
			};

			$scope.close = function() {
				var diff = Utils.findDiffObject(oriSetupQAnswer, $scope.setupQAnswer);
				if (!_.isEmpty(diff)) {
					confirm('This action will save your assessment. Continue?').then(
						function() {
							self.set(localData);
							alert('Filled item saved').then(function() {
								$scope.page.close();

								//broadcast event
								$scope.$emit('event:setup-assessment-updated');

								defer.resolve();
							});
						},
						function() {
							$scope.page.close();
							defer.reject();
						}
					);
				} else {
					$scope.page.close();
					defer.reject();
				}
			};

			$scope.getIndexOf = function(question) {
				return _setupQuestions.indexOf(question);
			};

			return defer.promise;
		}

		function _isComponentQFilled() {
			var localData = this.get();
			return !_.isEmpty(localData.componentQAnswer);
		}

		function _getComponentQAnswer() {
			var localData = this.get();
			return localData.componentQAnswer || [];
		}

		function _openComponentPopup(id, defaultValue, $scope) {
			var self = this,
				defer = $q.defer(),
				popupTitle = null;

			if (!$scope) {
				$scope = $rootScope.$new();
			}

			$scope.bundle = {};
			$scope.data = {};
			// find feature
			var idx = _.findIndex(_componentQuestions, function(itm) {
				return itm.id == id;
			});

			if (idx > -1) {
				$scope.data.question = _componentQuestions[idx];
				$scope.data.answer = this.getComponentQAnswer()[id] || null;
				$scope.data.question.serializeMultiValueFn = _serializeMultiValueFn;
				$scope.data.question.deserializeMultiValueFn = _deserializeMultiValueFn;
				$scope.data.question.list = $scope.data.question.deserializeMultiValueFn($scope.data.question.checks, $scope.data.answer);
			}

			$scope.onChangeCheckbox = function(question, item) {
				$scope.data.answer = question.serializeMultiValueFn($scope.data.answer, item.text, item.checked);
				question.list = question.deserializeMultiValueFn(question.checks, $scope.data.answer);
			}

			function _serializeMultiValueFn(variable, value, checked) {
				var temp = typeof variable === "string" ? variable : '';
				if (temp.trim() == '') temp = [];
				else temp = temp.split(', ');

				if (checked) {
					if (temp.length == 1 && temp[0].indexOf("None") != -1) {
						temp = [];
					}

					if (value.indexOf("None") != -1) {
						temp = [value];
					} else {
						temp.push(value);
					}
				} else {
					var index = temp.indexOf(value);
					if (index > -1) {
						temp.splice(index, 1);
					}
				}


				return temp.join(', ');
			};

			function _deserializeMultiValueFn(list, selectedValue) {
				var _list = list || [];
				var model = typeof selectedValue === "string" ? selectedValue : "";

				_list = _list.map(function(item) {
					model = model || '';

					return {
						text: item.text,
						checked: model.indexOf(item.text) != -1
					};
				});
				return _list;
			};

			var popup = $ionicPopup.show({
				templateUrl: 'modals/modal-component-assessment-popup.html',
				title: $scope.data.question.text,
				scope: $scope,
				buttons: [
					{
						text: 'Cancel',
						onTap: function(e) {
							return 'CANCEL';
						}
					},
					{
						text: '<b>Save</b>',
						onTap: function(e) {
							// if ($scope.data.selected == null) {
							// 	e.preventDefault();
							// } else {
								return $scope.data.answer;
							// }
						}
					}
				]
			});

			popup.then(function(answer) {
				if (answer == 'CANCEL') {
					defer.reject();
				} else {
					var localData = self.get();
					localData.componentQAnswer[$scope.data.question.id] = answer;
					self.set(localData);

					defer.resolve(answer);
					popup.close();
				}
			});

			return defer.promise;
		}

		function _openFitPopup(id, defaultValue, $scope) {
			var self = this,
				defer = $q.defer(),
				popupTitle = null;

			if (!$scope) {
				$scope = $rootScope.$new();
			}

			$scope.bundle = {};
			$scope.data = {};
			// find feature
			var idx = _.findIndex(_setupQuestions, function(itm) {
				return itm.id == id;
			});

			if (idx > -1) {
				$scope.data.question = _setupQuestions[idx];
				$scope.data.answer = this.getFitQAnswer()[id] || null;
				$scope.data.question.serializeMultiValueFn = _serializeMultiValueFn;
				$scope.data.question.deserializeMultiValueFn = _deserializeMultiValueFn;
				$scope.data.question.list = $scope.data.question.deserializeMultiValueFn($scope.data.question.checks, $scope.data.answer);
			}

			$scope.onChangeCheckbox = function(question, item) {
				$scope.data.answer = question.serializeMultiValueFn($scope.data.answer, item.text, item.checked);
				question.list = question.deserializeMultiValueFn(question.checks, $scope.data.answer);
			}

			function _serializeMultiValueFn(variable, value, checked) {
				var temp = typeof variable === "string" ? variable : '';
				if (temp.trim() == '') temp = [];
				else temp = temp.split(', ');

				if (checked) {
					if (temp.length == 1 && temp[0].indexOf("None") != -1) {
						temp = [];
					}

					if (value.indexOf("None") != -1) {
						temp = [value];
					} else {
						temp.push(value);
					}
				} else {
					var index = temp.indexOf(value);
					if (index > -1) {
						temp.splice(index, 1);
					}
				}


				return temp.join(', ');
			};

			function _deserializeMultiValueFn(list, selectedValue) {
				var _list = list || [];
				var model = typeof selectedValue === "string" ? selectedValue : "";

				_list = _list.map(function(item) {
					model = model || '';

					return {
						text: item.text,
						checked: model.indexOf(item.text) != -1
					};
				});
				return _list;
			};

			var popup = $ionicPopup.show({
				templateUrl: 'modals/modal-assessment-popup.html',
				title: $scope.data.question.text,
				scope: $scope,
				buttons: [
					{
						text: 'Cancel',
						onTap: function(e) {
							return 'CANCEL';
						}
					},
					{
						text: '<b>Save</b>',
						onTap: function(e) {
							// if ($scope.data.selected == null) {
							// 	e.preventDefault();
							// } else {
								return $scope.data.answer;
							// }
						}
					}
				]
			});

			popup.then(function(answer) {
				if (answer == 'CANCEL') {
					defer.reject();
				} else {
					var localAnswers = self.getFitQAnswer();
					localAnswers[$scope.data.question.id] = answer;
					self.setFitQAnswer(localAnswers);

					defer.resolve(answer);
					popup.close();
				}
			});

			return defer.promise;
		}

		function _openComponentQuestionnaire($scope) {
		// 	var self = this,
		// 		defer = $q.defer(),
		// 		outerSlideBox = null,
		// 		localData = this.get();

		// 	//setup local storage for setup questionnaire
		// 	if (!localData.componentQAnswer) {
		// 		localData.componentQAnswer = {};
		// 		this.set(localData);
		// 	}

		// 	var oriComponentQAnswer = angular.copy(localData.componentQAnswer);

		// 	// setup logistic
		// 	var _pages = [],
		// 		_page = null;

		// 	var _serializeMultiValueFn = function(variable, value, checked) {
		// 		var temp = variable || '';
		// 		if (temp.trim() == '') temp = [];
		// 		else temp = temp.split(', ');

		// 		if (checked) {
		// 			temp.push(value);
		// 		} else {
		// 			var index = temp.indexOf(value);
		// 			if (index > -1) {
		// 				temp.splice(index, 1);
		// 			}
		// 		}


		// 		return temp.join(', ');
		// 	};

		// 	var _deserializeMultiValueFn = function(list, selectedValue) {
		// 		var _list = list || [];
		// 		var model = selectedValue;

		// 		_list = _list.map(function(item) {
		// 			model = model || '';

		// 			return {
		// 				text: item.text,
		// 				checked: model.indexOf(item.text) != -1
		// 			};
		// 		});
		// 		return _list;
		// 	};

		// 	_componentQuestions.forEach(function(itm, idx) {
		// 		itm.show = true; //localData.setupQAnswer[itm.id] ? false : true;
        //         itm.serializeMultiValueFn = _serializeMultiValueFn;
        //         itm.deserializeMultiValueFn = _deserializeMultiValueFn;

		// 		if (_page == null) _page = [];
		// 		if (itm.show) _page.push(itm);
		// 		if (_page.length == 2 || (idx == _componentQuestions.length - 1 && _page.length > 0)) {
		// 			_pages.push(angular.copy(_page));
		// 			_page = null;
		// 		}
		// 	});

		// 	$scope.questions = _componentQuestions;
		// 	$scope.componentQAnswer = localData.componentQAnswer;
		// 	$scope.pages = _pages;

		// 	System.getModalPage('views/usewheelchair/components/questionnaire2perpage.html', $scope).then(function(
		// 		page
		// 	) {
		// 		// Below solution for ionicModal using rootScope
		// 		// refer to this https://github.com/driftyco/ionic/issues/2754
		// 		// change with decorator
		// 		// ---------------------------
		// 		outerSlideBox = $ionicSlideBoxDelegate.$getByHandle('outerSlideBox');
		// 		$scope.updateSlidebox();
		// 		page.show();

		// 		$timeout(function() {
		// 			// disable the slide event for ion-slidebox
		// 			outerSlideBox.enableSlide(false);
		// 		}, 100);
		// 	});

		// 	$scope.updateSlidebox = function(makeDouble) {
		// 		outerSlideBox.update();

		// 		$timeout(function() {
		// 			$scope.questionsTotal = outerSlideBox.slidesCount();
		// 			$scope.currentIndex = outerSlideBox.currentIndex();
		// 		}, 0);
		// 	};

		// 	$scope.nextPage = function() {
		// 		$timeout(function() {
		// 			outerSlideBox.next();
		// 			$scope.currentIndex = outerSlideBox.currentIndex();
		// 		}, 100);
		// 	};

		// 	$scope.prevPage = function() {
		// 		$timeout(function() {
		// 			outerSlideBox.previous();
		// 			$scope.currentIndex = outerSlideBox.currentIndex();
		// 		}, 100);
		// 	};

		// 	$scope.close = function() {
		// 		var diff = Utils.findDiffObject(oriComponentQAnswer, $scope.componentQAnswer);
		// 		if (!_.isEmpty(diff)) {
		// 			confirm('This action will save your assessment. Continue?').then(
		// 				function() {
		// 					self.set(localData);
		// 					alert('Filled item saved').then(function() {
		// 						$scope.page.close();

		// 						//broadcast event
		// 						$scope.$emit('event:component-assessment-updated');

		// 						defer.resolve();
		// 					});
		// 				},
		// 				function() {
		// 					$scope.page.close();
		// 					defer.reject();
		// 				}
		// 			);
		// 		} else {
		// 			$scope.page.close();
		// 			defer.reject();
		// 		}
		// 	};

		// 	$scope.getIndexOf = function(question) {
		// 		return _componentQuestions.indexOf(question);
		// 	};

		// 	return defer.promise;
		}
	}]);

angular.module('smartvcApp').run(['$templateCache', function($templateCache) {$templateCache.put('usewchair/main.html','<ion-view class=usewchair title=\'<i class="icon my-icon-mwg_01_use"></i> Use\'><ion-content><ul class=menu-grid><li class="menu-item theme-one" ng-click="navigateTo(\'main.usewheelchair.components\', {reload: true})"><i class="icon my-icon-mwg_09_elements"></i><h2>Elements</h2></li><li class="menu-item theme-two" ng-click="navigateTo(\'main.usewheelchair.fit\', {reload: true})"><i class="icon my-icon-mwg_02_fit"></i><h2>Fit</h2></li><li class="menu-item theme-three" ng-click="navigateTo(\'main.usewheelchair.skills\', {reload: true})"><i class="icon my-icon-mwg_10_skills"></i><h2>Skills</h2></li><li class="menu-item theme-one" ng-click="navigateTo(\'main.usewheelchair.qa\', {}, {reload: true})"><i class="icon my-icon-mwg_11_qa"></i></li></ul></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu01.html','<ion-view title=Weekly class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Tire Pressure</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/tirepressure-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tirePressure.check01 ng-click=updateData(data)></label> <span class=title>Press the tire. The tire should not sink more than <a ng-click="getStaticModalPage(\'maintenance/contents/modal/tirepressure-thickness.html\')">0.2 inches</a>.</span></div><div class="item item-divider btn-action right"><span>Cushion Cover and Insert</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/cushion-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.cushion.check01 ng-click=updateData(data)></label> <span class=title>Inspect the cover for tears and holes.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.cushion.check02 ng-click=updateData(data)></label> <span class=title>Inspect the zipper for its function.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.cushion.check03 ng-click=updateData(data)></label> <span class=title>Inspect the cushion for its shape and contour according to <a ng-click="getStaticModalPage(\'maintenance/contents/modal/cushion-types.html\')">cushion type</a>.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.cushion.check04 ng-click=updateData(data)></label> <span class=title>Check <a ng-click="showImage(\'images/maintenance/cushion_label.jpg\', \'Cushion Label\')">the label</a> to determine if the cushion is placed in a correct direction.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-actions.html','<ion-view title="Monthly Actions" class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check01 ng-click=updateData(data)></label> <span class=title>Check and tighten all the loosened bolts and nuts.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check02 ng-click=updateData(data)></label> <span class=title><a ng-click="getStaticModalPage(\'maintenance/contents/modal/month-wipedown-how.html\')">Wipe down wheelchair frame</a>.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check03 ng-click=updateData(data)></label> <span class=title><a ng-click="getStaticModalPage(\'maintenance/contents/modal/month-clean-caster-how.html\')">Clean caster axles</a>.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check04 ng-click=updateData(data)></label> <span class=title><a ng-click="getStaticModalPage(\'maintenance/contents/modal/month-clean-axle-housing-how.html\')">Clean the power seat functions and all the tracks.</a></span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-electrical-system.html','<ion-view title="Electrical System" class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Battery Charger</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.batteryCharger.check01 ng-click=updateData(data)></label> <span class=title>Inspect that the battery charger cables are not loose and are firmly connected.</span></div><div class="item item-divider btn-action right"><span>Wires and Connectors</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/electrical-wire.html\')"><img src=images/fix2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wires.check01 ng-click=updateData(data)></label> <span class=title>Check all electrical connections to ensure they are firmly in place and free of grime and corrosion.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wires.check02 ng-click=updateData(data)></label> <span class=title>Inspect wires to make sure they are safely away from all moving parts such as belts, gears, frames, and wheels, with no chance of being caught or tangled.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wires.check03 ng-click=updateData(data)></label> <span class=title>Inspect that wires and cables are intact and not frail.</span></div><div class="item item-divider btn-action right"><span>Joysticks/ Controller</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.joy.check01 ng-click=updateData(data)></label> <span class=title>Check that the <a ng-click="showImage(\'images/maintenance/joystick_seal.png\', \'Seal on the Joystick\')">seal on the joystick</a> is intact.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.joy.check02 ng-click=updateData(data)></label> <span class=title>Check that the joystick returns freely to neutral position without getting stuck.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.joy.check03 ng-click=updateData(data)></label><span class=title>Inspect that the <a ng-click="showImage(\'images/maintenance/joystick_seal.png\', \'Swing Away Mount\')">swing-away</a> or <a ng-click="showImage(\'images/maintenance/joystick_seal.png\', \'Retractable Mount\')">retractable mount</a> of the controller is tightened and functioning.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.joy.check04 ng-click=updateData(data)></label> <span class=title>Check that the <a ng-click="getStaticModalPage(\'maintenance/contents/modal/electrical-joy-controllerClamp.html\')">controller clamp</a> holds the controller firmly in place. If found loose, tighten it appropriately.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-frame.html','<ion-view title=Frame class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Nuts and Bolts</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/frame-how-nuts.html\')"><img ng-src=images/fix2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.frameNuts.check01 ng-click=updateData(data)></label> <span class=title>Inspect and move parts for missing or loose nuts and bolts.</span></div><div class="item item-divider btn-action right"><span>Frame Tubes</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.frameTubes.check01 ng-click=updateData(data)></label> <span class=title>Inspect for cracks and fractures.</span></div><div class="item item-divider btn-action right"><span>Suspension Elements(if applicable)</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/suspension-elements.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.suspension.check01 ng-click=updateData(data)></label> <span class=title>Inspect that the paint in the <a ng-click="getStaticModalPage(\'maintenance/contents/modal/frame-spring.html\')">spring</a> is intact and it has no cracks.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.suspension.check02 ng-click=updateData(data)></label> <span class=title>Inspect the <a ng-click="getStaticModalPage(\'maintenance/contents/modal/frame-damper.html\')">damper</a>. It should not leak lubricant.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-others.html','<ion-view title=Others class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Casters condition</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/other-caster-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.caster.check01 ng-click=updateData(data)></label> <span class=title>Inspect the caster wheels for wear, cracks, bulges and looseness.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.caster.check02 ng-click=updateData(data)></label><span class=title>Check for <a>caster flutter</a>.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.caster.check03 ng-click=updateData(data)></label> <span class=title>Inspect whether<a ng-click="showImage(\'images/maintenance/caster_caps.jpg\', \'Caster Caps\')">caster caps</a> are in place.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.caster.check04 ng-click=updateData(data)></label> <span class=title>Inspect whether the <a ng-click="showImage(\'images/maintenance/caster_stem.jpg\', \'Caster Stem Housing\')">caster stem housing</a> is aligned vertically.</span></div><div class="item item-divider btn-action right"><span>Anti-tipper</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.antitrip.check01 ng-click=updateData(data)></label> <span class=title>Inspect that the anti-tip wheels are not loose and do not squeak or drag.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.antitrip.check02 ng-click=updateData(data)></label> <span class=title>Inspect that there are no cracks or the wheels are not wore out.</span></div><div class="item item-divider btn-action right"><span>Footrests</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/other-footrest-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.footrests.check01 ng-click=updateData(data)></label> <span class=title>Inspect that the footrests are intact, tightened and can be released (if originally designed to do so), put back into place with ease and that they latch properly.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.footrests.check02 ng-click=updateData(data)></label> <span class=title>Lubricate the hinges/movable parts if the supports do not adjust easily</span></div><div class="item item-divider btn-action right"><span>Seat belt</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.seatbelt.check01 ng-click=updateData(data)></label> <span class=title>Inspect that latches and the hardware that attaches the strap to the frame are undamaged.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.seatbelt.check02 ng-click=updateData(data)></label> <span class=title>Inspect the strap and velcro (when applicable) for any signs of wear.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.seatbelt.check03 ng-click=updateData(data)></label> <span class=title>Inspect that the latch on the belt should not slip or become unlatched inadvertently.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-seat.html','<ion-view title=Seat class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Seat Base</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.seatBase.check01 ng-click=updateData(data)></label> <span class=title>Inspect the seat pan and upholstery for wear, tear, dirt, or metal parts that may stick out.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.seatBase.check02 ng-click=updateData(data)></label><span class=title>Inspect all <a ng-click="showImage(\'images/maintenance/upholstery_rivets.jpg\', \'Upholstery rivets\')">upholstery rivets</a> or screws and check that the upholstery is not tearing in those spots.</span></div><div class="item item-divider btn-action right"><span>Armrests</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/seat-armrest-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.armrests.check01 ng-click=updateData(data)></label> <span class=title>Inspect if the armrests are intact, tightened and can be released (if originally designed to do so), put back into place with ease, and latch easily.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.armrests.check02 ng-click=updateData(data)></label> <span class=title>Inspect for sharp edges that could cause harm.</span></div><div class="item item-divider btn-action right"><span>Backrest</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/seat-backrest-why.html\')"><img ng-src=images/why2.png></div></div></div><div class=item><div>Soft (tension-adjustable) backrest:</div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.backrest.check01 ng-click=updateData(data)></label> <span class=title>Inspect it for wear, tears, stretched upholstery, or metal parts that may be sticking out.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.backrest.check02 ng-click=updateData(data)></label> <span class=title>Inspect all upholstery rivets or screws and check that the upholstery is not tearing in those spots.</span></div><div class=item><div>Rigid backrest:</div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.rigid.check01 ng-click=updateData(data)></label> <span class=title>Inspect the surface is intact.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.rigid.check02 ng-click=updateData(data)></label> <span class=title>Inspect that the backrest hardware is properly attached to the backrest posts and does not rattle.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.rigid.check03 ng-click=updateData(data)></label> <span class=title>Inspect if the fabric is worn out and/or the foam is rigid.</span></div><div class="item item-divider btn-action right"><span>Headrest</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/seat-headrest-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.headrests.check01 ng-click=updateData(data)></label> <span class=title>Inspect if the headrest is properly tightened and intact.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.headrests.check02 ng-click=updateData(data)></label> <span class=title>If the headrest is designed to move, it should move freely, but not be too loose to rattle.</span></div><div class="item item-divider btn-action right"><span>Postural Support</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/seat-postural-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.postural.check01 ng-click=updateData(data)></label> <span class=title>Inspect if the postural support is properly tightened and intact.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.postural.check02 ng-click=updateData(data)></label> <span class=title>If the postural support is designed to move, it should move freely, but not be too loose to rattle.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.postural.check03 ng-click=updateData(data)></label> <span class=title>Inspect that the fabric and cushioning are intact.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-wheel-hardware.html','<ion-view title="Wheel Hardware" class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Bearing Condition</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/wheel-hard-why-bearing.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.bearing.check01 ng-click=updateData(data)></label> <span class=title>Lift one side of the wheelchair off the ground and spin the wheel. Inspect if the wheel rotates without <a ng-click="getStaticModalPage(\'maintenance/contents/modal/wheel-hard-bearing-noise.html\')">noise</a> and if it slows down and stops smoothly without rotating backwards.</span></div><div class="item item-divider btn-action right"><span>Wheel Axles</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wheelAxle.check01 ng-click=updateData(data)></label> <span class=title><a ng-click="getStaticModalPage(\'maintenance/contents/modal/wheel-hard-hold.html\')">Hold the wheel</a> from the hub and wiggle in all directions. Inspect if the wheel has any play. You would expect no play for fixed wheels, and some play for quick-release wheels.</span></div><div class="item item-divider btn-action right"><span>Handrims</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.handrim.check01 ng-click=updateData(data)></label> <span class=title>Inspect for wear, dents, bends, and cracks.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.handrim.check02 ng-click=updateData(data)></label> <span class=title>Inspect if they come loose.</span></div><div class="item item-divider btn-action right"><span>Wheel Locks</span><div class=btns></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wheelLock.check01 ng-click=updateData(data)></label> <span class=title>Inflate tires properly and inspect if the <a ng-click="showImage(\'images/maintenance/wheel_locks.jpg\', \'Wheel Locks\')">wheel locks</a> can hold the tires firmly in place when engaged.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wheelLock.check02 ng-click=updateData(data)></label> <span class=title>Inspect if the wheel locks are secured tightly to the frame.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.wheelLock.check03 ng-click=updateData(data)></label> <span class=title>Inspect if the wheel locks interfere with normal wheel rolling when disengaged.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02-wheels.html','<ion-view title=Wheels class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Tire Condition</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/wheel-why-tire-condition.html\')"><img ng-src=images/why2.png></div><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/wheel-tread-depth.html\')"><img ng-src=images/fix2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tireCondition.check01 ng-click=updateData(data)></label> <span class=title>Check for wear on the drive tires and for sufficient tread depth</span></div><div class="item item-divider btn-action right"><span>Bearing Condition</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/wheel-bearing-condition.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.bearingCondition.check01 ng-click=updateData(data)></label> <span class=title>Listen to the noise while driving the wheelchair. Wheels should rotate without noises like clicking or grinding.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.bearingCondition.check02 ng-click=updateData(data)></label> <span class=title>Look out for caster flutters. Caster wheels should rotate smoothly if bearing is in good condition.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu02.html','<ion-view title=Monthly><ion-content padding=false class=maintenance><div class=main-frame><div class=parts><svg version=1.1 id=Layer_1 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewbox="0 0 720 720" style="enable-background:new 0 0 720 720;" xml:space=preserve><style type=text/css>\n                        .st0{stroke:#FFFFFF;stroke-width:4.3168;stroke-miterlimit:10; fill: lightgrey}\n                        .st1{stroke:#FFFFFF;stroke-width:6.6856;stroke-miterlimit:10; fill: lightgrey}\n                        .st2{fill:none;stroke:#FFFFFF;stroke-width:7.76;stroke-miterlimit:10;}\n                        .selected { fill: #D72328 }\n                        .selected2 {stroke: #D72328}\n\n                    </style><path class="st0 footrest" ng-class="{selected: vm.selected.title == \'Footrest\'}" d="M672.9,517.6h-92.1c-11.9,0-21.6-9.7-21.6-21.6v0c0-11.9,9.7-21.6,21.6-21.6h92.1c11.9,0,21.6,9.7,21.6,21.6v0 C694.4,507.8,684.7,517.6,672.9,517.6z"></path><path class="st0 frame" ng-class="{selected: vm.selected.title == \'Seat\'}" d="M601.4,565.2l-20.2-2.5l10-40.9c0,0,1-8.3,1.2-18c0.2-9.8-9.8-29-9.8-29l-94.9-128.9c0,0-5.4-9.7-11.6-16.1 c-6.3-6.5-11.2-7.5-11.2-7.5l-179.1-2.7c0,0-28.6,1.8-43.8-13.9c-15.2-15.6-20.4-45.8-20.4-45.8l-37.9-160 c-2.4-10.2,3.9-20.5,14.2-23l0,0c10.3-2.4,20.5,3.9,23,14.2l38.2,161.4c0,0,0.9,12.6,10.3,22.3c9.4,9.7,15.5,6.6,15.5,6.6 l186.4,2.8c0,0,15-0.7,27,11.6c12,12.3,16.3,21.2,16.3,21.2l96.3,131.8l11.9,25.1c0,0,5.7,21.6,5.3,46.1c-0.2,10.7-4.7,33-9.8,54.7 L601.4,565.2z"></path><path class="st0 cushion" ng-class="{selected: vm.selected.title == \'Cushion\'}" d="M522.6,258.2c0.2-14.7-11.5-26.8-26.3-27.1l-184-2.8c-14.7-0.2-26.8,11.5-27.1,26.3l0,0 c-0.2,14.7,11.5,26.8,26.2,27.1l184,2.8C510.3,284.7,522.4,273,522.6,258.2L522.6,258.2z"></path><path class="st0 backrest" ng-class="{selected: vm.selected.title == \'Backrest\'}" d="M236.7,41.7c-14.3,3.5-23.1,17.9-19.7,32.2l30.8,129.8c3.5,14.3,17.9,23.1,32.2,19.6l0,0 c14.3-3.4,23.1-17.9,19.7-32.2L268.9,61.4C265.4,47.1,251,38.3,236.7,41.7L236.7,41.7z"></path><g class=power-add-on><path class=st0 ng-class="{selected: vm.selected.title == \'Power Add-On\'}" d="M293.7,425.2c-13.4,6.1-19.4,21.9-13.3,35.3l54.3,121.8c6.1,13.4,21.8,19.4,35.3,13.3l0,0 c13.4-6,19.4-21.8,13.4-35.3l-54.3-121.9C322.9,425.2,307.1,419.2,293.7,425.2L293.7,425.2z"></path><path class=st1 ng-class="{selected: vm.selected.title == \'Power Add-On\'}" d="M371.2,503.8c46,0,83.3,37.3,83.3,83.2c0,46-37.3,83.2-83.3,83.2c-46,0-83.2-37.3-83.2-83.2 C287.9,541,325.2,503.8,371.2,503.8z M323.2,587c0,26.5,21.5,47.9,47.9,47.9c26.5,0,48-21.5,48-47.9c0-26.5-21.5-47.9-48-47.9 C344.7,539.1,323.2,560.5,323.2,587z"></path></g><g class=wheels><path class=st0 ng-class="{selected: vm.selected.title == \'Wheel\'}" d="M282,156.8c141.4,0,256,114.6,256,256c0,141.4-114.6,256-256,256c-141.4,0-256-114.6-256-256 C26,271.4,140.6,156.8,282,156.8z M77.2,412.8c0,113.1,91.7,204.8,204.8,204.8c113.1,0,204.8-91.7,204.8-204.8 C486.7,299.7,395,208,282,208C168.9,208,77.2,299.7,77.2,412.8z"></path><path class=st0 ng-class="{selected: vm.selected.title == \'Wheel\'}" d="M584.8,562.7c29.7,0,53.8,24.1,53.8,53.7c0,29.7-24.1,53.7-53.8,53.7c-29.7,0-53.7-24.1-53.7-53.7 C531,586.8,555.1,562.7,584.8,562.7z M553.8,616.5c0,17.1,13.9,31,30.9,31c17.1,0,31-13.9,31-31c0-17.1-13.9-31-31-31 C567.7,585.5,553.8,599.4,553.8,616.5z"></path></g><circle class="st0 accessoris" ng-class="{selected: vm.selected.title == \'Accessories\'}" cx=282 cy=412.8 r=58></circle><path class="st2 handrim" ng-class="{selected2: vm.selected.title == \'Handrim\'}" d="M282.9,178.2c129.6,0,234.6,105,234.6,234.6c0,129.6-105,234.6-234.6,234.6c-129.6,0-234.6-105-234.6-234.6 C48.2,283.2,153.3,178.2,282.9,178.2z"></path></svg></div><div class=groups><ul class=list-groups><li class=btn-menu ng-class="{selected: vm.selected == \'frame\'}" ng-click="vm.openGroup(\'frame\', {id: \'menu02\', sid: \'frame\'})">Frame</li><li class=btn-menu ng-class="{selected: vm.selected == \'wheels\'}" ng-click="vm.openGroup(\'wheels\', {id: \'menu02\', sid: \'wheels\'})">Wheels</li><li class=btn-menu ng-class="{selected: vm.selected == \'seat\'}" ng-click="vm.openGroup(\'seat\', {id: \'menu02\', sid: \'seat\'})">Seat</li><li class=btn-menu ng-class="{selected: vm.selected == \'electrical-system\'}" ng-click="vm.openGroup(\'electrical-system\', {id: \'menu02\', sid: \'electrical-system\'})">Electrical System</li><li class=btn-menu ng-class="{selected: vm.selected == \'others\'}" ng-click="vm.openGroup(\'others\', {id: \'menu02\', sid: \'others\'})">Others</li></ul></div></div><div class="list button-style"><div class="item item-icon-right primary" ng-click="vm.openGroup(\'actions\', {id: \'menu02\', sid: \'actions\'})"><div class="title bold aligned right">Actions</div><i class="icon my-icon-mwg_e_clipboard"></i></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu03.html','<ion-view title="Monthly Actions" class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check01 ng-click=updateData(data)></label> <span class=title>Check and tighten all the loosened bolts and nuts.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check02 ng-click=updateData(data)></label> <span class=title><a ng-click="getStaticModalPage(\'maintenance/contents/modal/month-wipedown-how.html\')">Wipe down</a> wheelchair frame.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check03 ng-click=updateData(data)></label> <span class=title>Clean <a ng-click="getStaticModalPage(\'maintenance/contents/modal/month-clean-caster-how.html\')">caster axles</a>.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.monthlyActions.check04 ng-click=updateData(data)></label> <span class=title>Clean quick-release <a ng-click="getStaticModalPage(\'maintenance/contents/modal/month-clean-axle-housing-how.html\')">wheel-axle housing</a>.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu04.html','<ion-view title=Daily class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false class=service-delivery><div class=list><div class="item item-divider btn-action right"><span>Batteries</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/battery.html\')"><img src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.battery.check01 ng-click=updateData(data)></label> <span class=title>Charge batteries overnight?</span></div><div class="item item-divider btn-action right"><span>Shrouds</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/shrouds.html\')"><img src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.shrouds.check01 ng-click=updateData(data)></label> <span class=title>Inspect that the shrouds are present and intact.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.shrouds.check02 ng-click=updateData(data)></label> <span class=title>Jiggle the shrouds to inspect if they are loose.</span></div><div class="item item-divider btn-action right"><span>Electrical System</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.electrical.check01 ng-click=updateData(data)></label> <span class=title>Inspect that the full range of controls, indicators, driving, and horn are working smoothly and consistently.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.electrical.check02 ng-click=updateData(data)></label> <span class=title>Inspect that <a ng-click="getStaticModalPage(\'maintenance/contents/modal/battery.html\')">batteries</a> have no difficulty keeping a charge</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.electrical.check03 ng-click=updateData(data)></label> <span class=title>Check if display has errors displayed, and <a ng-click="getStaticModalPage(\'maintenance/contents/modal/display-error.html\')">act accordingly</a>.</span></div><div class="item item-divider btn-action right"><span>Power Seat Functions</span><div class=btns><div class=btn><img src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.powerseat.check01 ng-click=updateData(data)></label> <span class=title>Check if all functions can move through their full ranges without poking the shroud or stretching the cables and wires.</span><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.powerseat.check02 ng-click=updateData(data)></label> <span class=title>Tilt</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.powerseat.check03 ng-click=updateData(data)></label> <span class=title>Recline(check while the seat is titled backward)</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.powerseat.check04 ng-click=updateData(data)></label> <span class=title>Elevating legrests(check while the seat is titled backward and the backrest is reclined)</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.powerseat.check05 ng-click=updateData(data)></label> <span class=title>Seat Elevation(check while the seat is in an upright position)</span></div></div><div class="item item-divider btn-action right"><span>Brake Function</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.brake.check01 ng-click=updateData(data)></label> <span class=title>Turn down the speed</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.brake.check02 ng-click=updateData(data)></label> <span class=title>Push the joystick forward until you hear the brakes click, then immediately (choose one):</span><div class="item sub-item item-checkbox"><span class=title>- Release joystick.</span></div><div class="item sub-item item-checkbox"><span class=title>- Put joystick in reverse</span></div><div class="item sub-item item-checkbox"><span class=title>- Turn the wheelchair off (recommended).</span></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.brake.check03 ng-click=updateData(data)></label> <span class=title>The brakes should brake immediately.</span></div><div class="item item-divider btn-action right"><span>Motor Function</span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/motor-func.html\')"><img src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.motor.check01 ng-click=updateData(data)></label> <span class=title>Drive the wheelchair and listen to the motor. The noise should be similar with what you heard in the previous day. Over time, it will become a little noisier.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.motor.check02 ng-click=updateData(data)></label> <span class=title>Listen for excessive noise which might indicate worn bearings, out of line belts or gears, or frame problems.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.motor.check03 ng-click=updateData(data)></label> <span class=title>If the wheelchair has two motors, they should sound the same.</span></div><div class="item item-divider btn-action right"><span>Motor Disengage Lever</span><div class=btns ng-click="getStaticModalPage(\'maintenance/contents/modal/motor-disengage.html\')"><div class=btn><img src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.disengage.check01 ng-click=updateData(data)></label> <span class=title>Engage the lever, the wheelchair cannot be moved.</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.disengage.check02 ng-click=updateData(data)></label> <span class=title>Disengage the lever, the wheelchair can be moved.</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub--menu05.html','<ion-view title="Yearly Actions" class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span></span><div class=btns><div class=btn ng-click="getStaticModalPage(\'maintenance/contents/modal/year-why.html\')"><img ng-src=images/why2.png></div></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.yearlyActions.check01 ng-click=updateData(data)></label><span class=title>Have your wheelchair professionally serviced?</span></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-cushiontypes.html','<ion-view title="Cushion Type" class="maintenance content"><ion-header-bar class="bar-subheader bar-light"><h4>Inspection according to Cushion Types</h4></ion-header-bar><ion-slide-box><ion-slide><ion-content><h4>Air cushions</h4><p>Squeeze the cushion to inspect that the valve is in good condition and does not leak.</p><div class="frame borderless"><img src=images/maintenance/28_air_cushion.jpg class=jpg></div><p>If you suspect that there is a leak, remove the cover and submerge the cushion in water and look for bubbles.</p></ion-content></ion-slide><ion-slide><ion-content><h4>Gel cushions</h4><p>Knead the gel daily so it moves under bony prominences.</p><p>Inspect if the gel becomes hard and if there are any leaks.</p><div class="frame borderless"><img src=images/maintenance/29_gel_cushion.jpg class=jpg></div></ion-content></ion-slide><ion-slide><ion-content><h4>Foam cushions</h4><p>Inspect that the foam is intact and not deteriorated and chipping.</p><p>When you press it, it should bounce back.</p><div class="frame borderless"><img src=images/maintenance/30_foam_cushion.jpg class=jpg></div></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-howtopatchtube.html','<ion-view title="How To Patch Tube"><ion-content class="maintenance content" padding=true><h4>Generic steps to patch tube</h4><div class=stack-container><div ng-show=!open1 class="stack animated"><a class="text toggle" href ng-click="open1=true">Read more ...</a></div><div ng-show=open1 class="stack animated ng-hide"><ol class=numbered-list><li>Dry off tube and gently scratch the hole area with a scratching tool.</li><li>Apply glue all around the hole area, and attach the patch.</li><li>Press the patch firmly for about a minute to make sure it stays on.</li><a class="text toggle" href ng-click="open1=false">Show video ...</a></ol></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-noisebearingproblems.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Noise indicating bearing problems</h3><ul class=bullet-point><li>Most prominently, a knocking noise, and on some occasions, a squeaky squealing moan is what would be the first indicator of such a problem.</li><li>Initially, the sound would be heard only at certain speeds, but will become fairly regular and prominent as the condition of the bearings worsen.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/main-sub-patchinnertube.html','<ion-view title="Check the inner tube" class="maintenance content"><ion-slide-box on-slide-changed=onSlideChange($index)><ion-slide><ion-content has-subheader=false class=padding><h4>Remove inner tube</h4><div class=stack-container><div ng-show=!open1 class="stack animated"><a class="text toggle" href ng-click="open1=true">Read more ...</a></div><div ng-show=open1 class="stack animated ng-hide"><ul class=bullet-point><li>Release wheel and air left in the tube.</li><li>Pry off tire with a tire lever by bending back slightly the tire edge that meets the rim.</li><li>Use another tire lever to loosen the tire off the rim.</li><li>Pull off inner tube.</li></ul><a class="text toggle" href ng-click="open1=false">Show video ...</a></div></div></ion-content></ion-slide><ion-slide><ion-content has-subheader=false class=padding><h4>Check and patch the inner tube</h4><div class=stack-container><div ng-show=!open2 class="stack animated"><a class="text toggle" href ng-click="open2=true">Read more ...</a></div><div ng-show=open2 class="stack animated ng-hide"><ul class=bullet-point><li>Pump up the tube until full and submerge the tube underwater.</li><li>The part of the tube that bubbles is where the hole is located.</li><li>Mark the position of the hole with a pen or marker.</li><li><strong>Follow the instruction provided by the patch kit to patch the tube. If no instruction is available, <a href ng-click="navigateTo(\'^.task\', {taskid: \'howtopatchtube\'})">click here</a> for the generic steps to patch a tube</strong>.</li></ul><a class="text toggle" href ng-click="open2=false">Show video ...</a></div></div></ion-content></ion-slide><ion-slide><ion-content has-subheader=false class=padding><h4>Install the patched inner tube</h4><div class=stack-container><div ng-show=!open3 class="stack animated"><a class="text toggle" href ng-click="open3=true">Read more ...</a></div><div ng-show=open3 class="stack animated ng-hide"><ul class=bullet-point><li>Take the tube and place the inner side into the rim trench of the wheel. Inflating the tube a little makes it easier to put on.</li><li>Stretch the tube around the rim. Little liquid dish soap can make it easier to put a tire on.</li><li>Let all the air out before fully inflating to help remove the kinks.</li><li>Pump the tube to the required pressure.</li></ul><a class="text toggle" href ng-click="open3=false">Show video ...</a></div></div></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-replaceinnertube.html','<ion-view title="Replace Inner Tube" class="maintenance content"><ion-slide-box on-slide-changed=onSlideChange($index)><ion-slide><ion-content has-subheader=false class=padding><h4>Step 1: Remove inner tube</h4><div class=stack-container><div ng-show=!open1 class="stack animated"><a class="text toggle" href ng-click="open1=true">Read more ...</a></div><div ng-show=open1 class="stack animated ng-hide"><ul class=bullet-point><li>Release wheel and air left in the tube.</li><li>Pry off tire with the plastic tire lever by bending back slightly the edge of the tire where it meets the rim.</li><li>Use the second tire lever to loosen the tire off the rim.</li><li>Pull off the inner tube.</li></ul><a class="text toggle" href ng-click="open1=false">Show video ...</a></div></div></ion-content></ion-slide><ion-slide><ion-content has-subheader=false class=padding><h4>Step 2: Install new inner tube</h4><div class=stack-container><div ng-show=!open2 class="stack animated"><a href ng-click="open2=true">Read text ...</a></div><div ng-show=open2 class="stack animated ng-hide"><ul class=bullet-point><li>Take the tube and place the inner side into the rim trench of the wheel. Inflating the tube a little makes it easier to put on.</li><li>Stretch the tube around the rim. Little liquid dish soap can make it easier to put a tire on.</li><li>Let all the air out before fully inflating to help remove the kinks.</li><li>Pump the tube to the required pressure.</li></ul><a href ng-click="open1=false">Show video ...</a></div></div></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0101.html','<ion-view title="Tire Pressure" class=maintenance><ion-slide-box show-pager=true><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Check tire pressure by pressing firmly with thumb.</li><li>Inflate tire if it presses down more than 0.2.<br><div class="frame borderless"><img src=images/maintenance/08_tire_pressure.jpg class=jpg></div></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=3><li>If you pump the tire and its goes flat:<ul class=bullet-point><li><a href ng-click="navigateTo(\'^.task\', {taskid: \'patchinnertube\'})">Patch inner tube</a>, or</li><li><a href ng-click="navigateTo(\'^.task\', {taskid: \'replaceinnertube\'})">Replace inner tube</a>, or</li><li><a href ng-click="navigateTo(\'main.contacts\')">Contact supplier</a>.</li></ul></li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0102.html','<ion-view title="Cushion cover and insert" class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Transfer out of the wheelchair, and remove the cushion from the seat pan.</li><li>Remove the cover from the cushion.</li><li>Look for tears or holes in the cover or zipper malfunction, which might expose the cushion surface or create a wrinkled sitting surface</li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=4><li>After inspecting the cover inspect the cushion for shape and contour, <a href ng-click="navigateTo(\'^.task\', {taskid: \'cushiontypes\'})">varying according to Cushion Types</a><br><div class="frame borderless"><img src=images/maintenance/25_check_cushion.jpg class=jpg></div></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=5><li>Check the direction labels on the cover. Be sure to put the cover back on the cushion in the correct way.</li><li>The zipper goes in back of the chair.</li><li>Check the care label if you want to wash the cover.</li></ol><p>General guide to care the cover:</p><ul class=bullet-point><li>Work with mild soap water.</li><li>Do not machine dry the cover. Hang it up to dry.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0201.html','<ion-view title="Nuts and bolts missing or loose"><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Visually identify loose bolts.</li><li>Move parts and check whether they rattle.</li><li>Use appropriate tools to tighten all loose nuts and botls until snug. <a href ng-click="getInfo(\'nuts_bolts_tips\')">More tips\u2026.</a></li><li>If nuts or bolts are missing, stripped or broken, contact your supplier to get the bolts/nuts replaced.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0202.html','<ion-view title="Tire condition"><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>If the tire presses down more than 0.2 inch (roughly the thickness of three pennies stacked together), you should inflate the tire.<br><div class="frame borderless"><img src=images/maintenance/33_tire_worn_out.gif class=jpg></div></li><li>Contact your supplier to replace tires when the tread becomes worn, cracked, loose or when the side walls begin to bulge out when pumped with air.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0203.html','<ion-view title="Bearing condition"><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><p>Lift one side of the wheelchair off the ground, and spin the wheel, letting it rotate to a stop.</p><ul class=bullet-point><li><strong>Noise</strong> is the first thing that will alert you about a wheel bearing that is failing.<a href ng-click="navigateTo(\'^.task\', {taskid: \'noisebearingproblems\'})">More info\u2026</a></li><li>If the wheel slows and stops quickly, the bearing could be too tight.</li><li>If the wheel slows and rotates backwards slightly, the bearing is not being compressed and it could be too loose.</li></ul><p>If problems are identified, contact your supplier to get the bearings replaced.</p></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0204.html','<ion-view title="Spoke tension" class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Squeeze two spokes together all the way around the wheel.<br><div class="frame borderless"><img src=images/maintenance/38_spoke_tension.jpg class=jpg></div><ul class=bullet-point><li>The spokes should all have equal tension.</li><li>If a spoke \u201Cgives\u201D, it may be too loose.</li></ul></li><li>Inspect that spokes are not bent.or broken.</li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=3><li>If you hear a faint, metallic, snapping sound as you move, spoke tension is unequal.</li><li>Inspect that the nipples are tight, not bent or nicked.<br><div class="frame borderless"><img src=images/maintenance/39_spoke_nipple.jpg class=jpg></div><center>Spoke nipple</center></li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0205.html','<ion-view title="Wheel alignment" class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Roll through a puddle of water and allow the wheelchair to coast.<ul class=bullet-point><li>The wheelchair should maintain its direction with no excessive drag, pull, side motion, and noise of wheel rubbing, and</li><li>The tracks should be parallel with each other and the center line of the wheelchair.</li></ul><div class="frame borderless"><img src=images/maintenance/42_wheel_alignment.jpg class=jpg></div></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=2><li>When turning, there should be no squeaking, binging, or excessive side movement.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0206.html','<ion-view title="Wheel axles" class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Hold the wheel from the hub and wiggle in all directions.<br><div class="frame borderless"><img src=images/maintenance/45_wheel_axle.jpg class=jpg></div><ul class=bullet-point><li>If the wheel is fixed, it should not have play.</li><li>If the wheel is quick-release some play is acceptable.</li></ul></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=2><li>Check that the quick-release mechanism functions properly.<ul class=bullet-point><li>The axles should slide through the wheel housing smoothly and click and latch into place.</li></ul></li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0207.html','<ion-view title="Wheel locks" class=maintenance>\u3001<ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect whether the wheel locks are secured tightly to the frame.<br><div class="frame borderless"><img src=images/maintenance/47_wheel_lock.jpg class=jpg></div></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=2><li>Inflate tires properly, and then apply the locks and check whether it holds the tires firmly in place.<ul class=bullet-point><li>They should be easily activated and do not interfere with the tire while rolling.</li></ul></li><li>Adjust wheel locks if they are loose or not working properly.</li><li>If the locks still do not work properly, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0208.html','<ion-view title=Handrims class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect the handrims for wear, dents, bends, cracks.<br><div class="frame borderless"><img src=images/maintenance/50_handrim.jpg class=jpg></div></li><li>Inspect if they are loose.<ul class=bullet-point><li>Tightnen the handrim if it is loose.</li></ul></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=3><li>Contact your wheelchair supplier if you need the handrim to be replaced.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0209.html','<ion-view title=Casters class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect caster wheels for wear, cracks, looseness, bulges, and tears.<br><div class="frame borderless"><img src=images/maintenance/53_casters.jpg class=jpg></div></li><li>Inspect whether the caster wheels are evenly touching the floor when on a flat surface. If not, the wheelchair has caster float.</li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=3><li>Inspect caster caps; they protect caster assembly from moisture and water<br><div class="frame borderless"><img src=images/maintenance/54_missing_caster_cap.jpg class=jpg></div><center>Missing caster cap</center></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=4><li>Inspect whether the caster stem housing is aligned vertically.<br><div class="frame borderless"><img src=images/maintenance/55_caster_alignment.jpg class=jpg></div><center>Caster stem housing not aligned vertically</center></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=5><li>Spin the caster and the caster assembly. They should spin freely without any grinding.</li><li>Inspect that there is no excessive play in the caster axle.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0210.html','<ion-view title=Anti-tippers class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect whether anti-tippers can be latched properly.<br><div class="frame borderless"><img src=images/maintenance/58_push_the_pin_in.jpg class=jpg></div><center>Push the pin in</center><br><div class="frame borderless"><img src=images/maintenance/58_latch.jpg class=jpg></div><center>Move the tube in and out and try to latch it</center></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=2><li>Inspect whether anti-tippers are adjusted evely.<br><div class="frame borderless"><img src=images/maintenance/59_anti_tip_diff_height.jpg class=jpg></div><center>Anti-tippers at different height</center></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=3><li>Turn the anti-tip casters. They should rotate freely<br><div class="frame borderless"><img src=images/maintenance/60_anti_tip_caster.jpg class=jpg></div></li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0211.html','<ion-view title=Footrests class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect that the footrests are intact, tightened and can be released (if originally designed to do so), put back into place with ease and that they latch properly.<br><div class="frame borderless"><img src=images/maintenance/61_footrest.jpg class=jpg></div><center>Broken footrest</center></li></ol></ion-content></ion-slide><ion-slide><ion-content><ol class=numbered-list start=2><li>Inspect the swing away footrest, look for wear in the pin, bolt and bushing in this mechanism.</li><li>Use a screwdriver, wrench or Allen wrench to tighten loose bolts.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0212.html','<ion-view title=Armrests><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Your armrests should be removeable and/or flipped up.</li><li>Inspect that the armrests are intact, tightened and can be released (if originally designed to do so), put back into place with ease, and latch easily.</li><li>Inspect for sharp edges that could cause harm.</li><li>Tighten bolts and nuts as necessary.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0213.html','<ion-view title=Backrest class=maintenance><ion-slide-box><ion-slide><ion-content><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Backrest can be soft (tension-adjustable) or rigid.<br><strong>Soft (tension-adjustable) backrest:</strong><ul class=bullet-point><li>Inspect it for wear, tears, stretched upholstery, or metal parts that may be sticking out.</li><li>Inspect all upholstery rivets or screws and check that the upholstery is not tearing in those spots.</li></ul></li></ol></ion-content></ion-slide><ion-slide><ion-content><strong>Rigid backrest:</strong><ul class=bullet-point><li>Inspect the surface is intact.</li><li>Inspect that the backrest hardware is properly attached to the backrest posts and does not rattle.</li><li>Inspect that the fabric is worn out and/or the foam is rigid.</li><li>Tighten loose bolts with a screw driver, Allen wrench, or wrench.</li></ul><ol class=numbered-list start=2><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0215.html','<ion-view title="Clothing guards"><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect that the clothing guards are tight and tighten nuts and bolts as necessary.<div class="frame borderless"><img src=images/maintenance/70_clothing_guard.jpg class=jpg></div></li><li>Inspect the clothing guards for cracks and fractures</li><li>Tighten any loose bolts and screws.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0216.html','<ion-view title=Frame><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect the frame, weld points, holes and bends to confirm that they are intact.</li><li>Look for cracks and fractures as they can result in catastrophic failure of the wheelchair.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0217.html','<ion-view title="Folding mechanism"><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Inspect that the cross brace mechanism is working properly every time you use it. It should open and fold easily.<div class="frame borderless"><img src=images/maintenance/72_folding_mechanism.jpg class=jpg></div></li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0218.html','<ion-view title="Suspension elements"><ion-content class="maintenance content" padding=true><ul class="icon-placeholder top right wrapped"><li class="icon-clipboard-edit large" ng-click=ask4Action()></li></ul><ol class=numbered-list><li>Some frames have built in or \u201Cadd-on\u201D suspension elements to decrease shock and vibration and make for a smoother ride.<div class="frame borderless"><img src=images/maintenance/74_suspension_element.jpg class=jpg></div></li><li>Inspect that the paint in the spring is intact and it has no cracks.</li><li>Inspect that the damper is not leaking lubricant.</li><li>If problems are identified, contact your wheelchair supplier.</li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0301.html','<ion-view title="Action: Wipe down wheelchair frame"><ion-content class="maintenance content" padding=true><p>Tools: rag, basket, water, mild soap</p><ol class=numbered-list><li>Remove the fabric covers from the frame.</li><li>Taking the wheel off makes cleaning that side of the frame easier.</li><li>Wipe down the wheelchair frame with a clean and damp rag. The rag should be moist and not soaked.</li><li>Take the cushion cover off if possible and wash it. <a href ng-click="navigateTo(\'^.task\', {taskid: \'replaceinnertube\'})">(See the guide of caring the cover)</a></li></ol></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0302.html','<ion-view title="Action: Clean caster axels"><ion-content class="maintenance content" padding=true><p>Tools: scissors, tweezers, toothbrush, plyers</p><p>Remove dirt, lint, and hair from the caster axles bearings with scissors, tweezers, toothbrush, or plyers.</p></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0303.html','<ion-view title="Action: Clean quick-release wheelchair-axle housing"><ion-content class="maintenance content" padding=true><p>Tools: scissors, tweezers, toothbrush, plyers</p><ol class=numbered-list><li>Remove the quick-release wheel.</li><li>Clean the axle and the wheel housing with a rag dampened with Teflon-based spray, then lubricate them with the same spray and then wipe off the extra.</li><li>Also, try and clean the axle housings and around the bearings.</li></ol><p>Example of eflon-based oil: Tri-Flow Lubricant ,TeflonTM, WD40</p></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0401.html','<ion-view title="Action: Lubricate moving parts"><ion-content class="maintenance content" padding=true><p>Tools: Teflon-based spray or lubricating oil, rag</p><ol class=numbered-list><li>Clean, dry, and apply lubricating oil or Teflon-based spray to all moving parts, including the folding mechanism, where the front casters turn, and exposed hinges.</li><li>Use a rag to remove excess lubricant.</li></ol><p><strong>DO NOT lubricate sealed bearings!</strong><br><strong>DO NOT use penetrating oil!</strong></p><p><u>Example of lubricating oil:</u>Liquid wrench, 3M multipurpose lubricant</p><p><u>Example of teflon-based spray:</u>Tri-Flow Lubricant ,TeflonTM, WD40</p></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-task0501.html','<ion-view title="Action: Have wheelchair professional serviced"><ion-content class="maintenance content" padding=true><ul class=bullet-point><li>All wheelchairs should be professionally serviced at least once a year.</li><li>In places with inclement weather conditions, wheelchairs should be professionally serviced twice a year.</li><li>The cost of this will depend on the wheelchair expert.</li><li>It may not be reimbursed by a health insurance.</li></ul></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main-sub-tirepressure-fix.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Tire Pressure: How?</h1></ion-header-bar><ion-content class=padding><p>You should pump and inflate the tire if it depresses more than 0.2 inch.</p><p>If you pump the tire and it goes flat, you can:<ul class=bullet-point><li><a href ng-click="navigateTo(\'^.task\', {taskid: \'patchinnertube\'});">Check the inner tube to find the puncture and patch it</a>, or</li><li><a href ng-click="navigateTo(\'^.task\', {taskid: \'replaceinnertube\'})">Replace inner tube</a>, or</li><li><a href ng-click="navigateTo(\'main.contacts\')">Contact supplier</a>.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/main-sub.html','<ion-view title={{item.title}}><ion-content class=maintenance><div class="list gen-tpl1"><div ng-repeat="task in item.tasks"><div class="item item-icon-right item-custom" ng-click="navigateTo(\'.task\', {taskid: task.id})">{{task.title}} <a class=info ng-if="task.altId !== \'\'" href ng-click="getInfo(task.altId); $event.stopPropagation();">info</a> <i class="icon ion-chevron-right edge-button"></i></div></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main.addnote.html','<ion-view title="Note: {{vm.item.title}}"><ion-content class=maintenance padding=true><div class=button-bar><button class="button icon ion-document-text" ng-click=vm.addText()><span style="margin-left: 5px">Text</span></button> <button class="button icon ion-mic-a" ng-click=vm.addAudio()><span style="margin-left: 5px">Audio</span></button> <button class="button icon ion-camera" ng-click=vm.addPicture()><span style="margin-left: 5px">Picture</span></button></div><h4><strong>Note Items:</strong></h4><div class=note-list ng-repeat="item in vm.note.items"><div class=list ng-if="item.type == \'TEXT\'"><div class="item item-icon-right item-divider item-icon-delete" ng-click="vm.toggle[item.id]=!vm.toggle[item.id]"><span class=title>Text Note: {{item.content.split(\'\\n\')[0]}}</span> <i class="icon ion-chevron-right" ng-if=!vm.toggle[item.id]></i> <i class="icon ion-chevron-down" ng-if=vm.toggle[item.id]></i></div><i class="icon ion-close-circled item-icon-delete" ng-click=vm.deleteNote(item)></i><div class="item item-input" ng-if=vm.toggle[item.id]><textarea rows=7 placeholder="Detail information" ng-model=item.content></textarea></div></div><div class=list ng-if="item.type == \'AUDIO\'"><div class="item item-icon-right item-divider item-icon-delete" ng-click="vm.toggle[item.id]=!vm.toggle[item.id]"><span class=title>Audio Note:</span> <i class="icon ion-chevron-right" ng-if=!vm.toggle[item.id]></i> <i class="icon ion-chevron-down" ng-if=vm.toggle[item.id]></i></div><i class="icon ion-close-circled item-icon-delete" ng-click=vm.deleteNote(item)></i><div class="item audio-frame" ng-if=vm.toggle[item.id]><i class="icon ion-music-note" ng-if=!item.content ng-click=vm.getAudio(item)></i><audio src={{item.content}} preload=auto controls ng-if=item.content></audio></div></div><div class=list ng-if="item.type == \'PICTURE\'"><div class="item item-icon-right item-divider item-icon-delete" ng-click="vm.toggle[item.id]=!vm.toggle[item.id]"><span class=title>Picture Note:</span> <i class="icon ion-chevron-right" ng-if=!vm.toggle[item.id]></i> <i class="icon ion-chevron-down" ng-if=vm.toggle[item.id]></i></div><i class="icon ion-close-circled item-icon-delete" ng-click=vm.deleteNote(item)></i><div class="item picture-frame" ng-if=vm.toggle[item.id]><i class="icon ion-camera" ng-if=!item.content ng-click=vm.getPicture(item)></i> <img ng-src={{item.content}} class="icon ion-camera" ng-if=item.content></div></div></div><div ng-if=vm.changed><button class="button button-block button-positive" ng-disabled=!vm.changed ng-click=vm.save(vm.note)>Save</button><button class="button button-block button-assertive" ui-sref=.^>Cancel</button></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main.html','<ion-view title=Maintenance><ion-content class=maintenance padding=true><ul class=menu-grid><li class=menu-item ng-click="navigateTo(\'main.maintenance.sub\', { id: \'menu04\'})"><img src=images/maintenance/menu/monthly.png><h2>Daily</h2></li><li class=menu-item ng-click="navigateTo(\'main.maintenance.sub\', { id: \'menu01\'})"><img src=images/maintenance/menu/weekly.png><h2>Weekly</h2></li><li class=menu-item ng-click="navigateTo(\'main.maintenance.sub\', { id: \'menu02\'})"><img src=images/maintenance/menu/quarterly.png><h2>Monthly</h2></li><li class=menu-item ng-click="navigateTo(\'main.maintenance.sub\', { id: \'menu05\'})"><img src=images/maintenance/menu/yearly.png><h2>Yearly</h2></li></ul><div class="list button-style"><div class="item item-icon-right primary" ng-click="navigateTo(\'.summary\')"><div class="title bold aligned right">Summary</div><i class="icon my-icon-mwg_e_clipboard"></i></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main.newnote.html','<ion-view title="New Note"><ion-content class=maintenance padding=true><div class=note-list><div class=list><h4>Subject:</h4><div class="item item-input"><input type=text placeholder=Subject ng-model=vm.note.subject></div></div></div><div class=note-list ng-repeat="item in vm.note.items"><div class=list ng-if="item.type == \'TEXT\'"><h4>Text Note:</h4><div class="item item-input" ng-if=vm.toggle[item.id]><textarea rows=7 placeholder="Detail information" ng-model=item.content></textarea></div></div></div><div ng-if=vm.changed><button class="button button-block button-positive" ng-disabled=!vm.changed ng-click=vm.save(vm.note)>Save</button> <button class="button button-block button-assertive" ui-sref=.^>Cancel</button></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main.summary.detail.html','<ion-view title="Note Detail"><ion-content class=maintenance padding=true><div class=note-list><div class=list><h4>Subject:</h4><div class="item item-input"><input type=text placeholder=Subject ng-model=vm.note.subject readonly></div></div></div><div class=note-list ng-repeat="item in vm.note.items"><div class=list ng-if="item.type == \'TEXT\'"><h4>Text Note:</h4><div class="item item-input"><textarea rows=7 placeholder="Detail information" ng-model=item.content readonly></textarea></div></div><div class=list ng-if="item.type == \'PICTURE\'"><h4>Picture Note:</h4><div class="item picture-frame"><i class="icon ion-camera" ng-if=!item.content></i> <img ng-src={{item.content}} class="icon ion-camera" ng-if=item.content></div></div><div class=list ng-if="item.type == \'AUDIO\'"><h4>Audio Note:</h4><div class="item audio-frame"><i class="icon ion-music-note" ng-if=!item.content></i><audio src={{item.content}} preload=auto controls ng-if=item.content></audio></div></div></div><div><button class="button button-block button-assertive" ng-click=vm.deleteNote(vm.note)>DELETE</button> <button class="button button-block button-positive" ng-click=vm.forwardEmail(vm.note)>Email Forward</button></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main.summary.html','<ion-view title="Note Summary"><ion-content class="maintenance joe-theme"><h4 ng-if="vm.notes.length <= 0" style="text-align: center">Note is not exists</h4><div class=list><div class="item item-icon-right" ng-repeat="item in vm.notes" ng-click="navigateTo(\'.detail\', {note: item})"><div class=title><div class>{{item.subject}}</div><div class=sub style="font-size: 14px">{{item.label | date:\'yyyy-MM-dd HH:mm\'}}</div></div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/main.summary.task.html','<ion-view title={{vm.title}}><ion-content class=maintenance><div class="list gen-tpl1"><div ng-repeat="item in vm.notes"><div class=item ng-click=vm.showNote(item)>{{$index+1}}. {{item.type}} <span class=item-note>{{item.createdAt | date:"short"}}</span></div></div></div></ion-content></ion-view>');
$templateCache.put('maintenance/contents/modal-note-audio.form.html','<ion-modal-view class="maintenance note"><ion-header-bar class=bar-positive><h1 class=title>{{note.task.title}}</h1></ion-header-bar><ion-content><div class=list><div class="item item-divider">Note: <span style="float: right; font-weight: normal">{{note.createdAt | date:"short"}}</span></div><div class="item picture-frame" ng-click=getAudio()><i class="icon ion-music-note" ng-if=!tmpAudioURI></i><audio src={{tmpAudioURI}} preload=auto controls ng-if=tmpAudioURI></audio></div><div class="item item-input"><textarea rows=4 placeholder="Detail information" ng-model=note.content></textarea></div></div><button class="button button-block button-positive" ng-disabled=!tmpAudioURI ng-click=save(note)>Save</button> <button class="button button-block button-positive" ng-click=delete(note) ng-if=note.id>Delete</button> <button class="button button-block button-assertive" ng-click=cancel()>Cancel</button></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal-note-picture.form.html','<ion-modal-view class="maintenance note"><ion-header-bar class=bar-positive><h1 class=title>{{note.task.title}}</h1></ion-header-bar><ion-content><div class=list><div class="item item-divider">Note: <span style="float: right; font-weight: normal">{{note.createdAt | date:"short"}}</span></div><div class="item picture-frame" ng-click=getPicture()><i class="icon ion-camera" ng-if=!tmpPictureURI></i> <img ng-src={{tmpPictureURI}} class="icon ion-camera" ng-if=tmpPictureURI></div><div class="item item-input"><textarea rows=4 placeholder="Detail information" ng-model=note.content></textarea></div></div><button class="button button-block button-positive" ng-disabled=!tmpPictureURI ng-click=save(note)>Save</button> <button class="button button-block button-positive" ng-click=delete(note) ng-if=note.id>Delete</button> <button class="button button-block button-assertive" ng-click=cancel()>Cancel</button></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal-note-text.form.html','<ion-modal-view class="maintenance note"><ion-header-bar class=bar-positive><h1 class=title>{{note.task.title}}</h1></ion-header-bar><ion-content padding=true><div class=list><div class="item item-divider">Note: <span style="float: right; font-weight: normal">{{note.createdAt | date:"short"}}</span></div><div class="item item-input"><textarea rows=15 placeholder="Detail information" ng-model=note.content></textarea></div></div><button class="button button-block button-positive" ng-click=save(note)>Save</button><button class="button button-block button-positive" ng-click=delete(note) ng-if=note.id>Delete</button><button class="button button-block button-assertive" ng-click=cancel()>Cancel</button></ion-content></ion-modal-view>');
$templateCache.put('serdelivery/popupmsg/message.html','<ion-modal-view class=info-page><ion-slide-box show-pager=false on-slide-changed=vm.onSlideChanged($index) delegate-handle=slider><ion-slide><div class="bar bar-header bar-positive"><h1 class=title>Tutorial</h1></div><ion-content class="padding has-header"><p>There are typically 6 steps for getting a wheelchair. This app is designed to guide you through the process. <strong>The more you are involved, the more likely you will receive an appropriate device for your needs.</strong></p><ul class=bullet-point><li>The first step \u201CSelf-Assessment\u201D provides a tool \u201CMy Wheelchair Checklist\u201D to help you assess your own needs so you can better communicate the needs to the professionals.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding style="text-align: center" scroll=false><img src=images/serdev/popup_help.png style="height: calc(100% - 50px)"><div class=checkbox style="padding: 0px"><input type=checkbox ng-model=vm.model.stopPopupServiceDelivery> <span>Don\'t show again</span></div></ion-content></ion-slide></ion-slide-box><ion-footer-bar class=bar-positive><div class="title title-center" ng-if="vm.index == 0" ng-click=vm.slideBox.next();>Next</div><div class="title title-center" ng-if="vm.index != 0" ng-click=vm.closeModal(vm.model);>OK</div></ion-footer-bar></ion-modal-view>');
$templateCache.put('maintenance/modal/tirecheckandpatch.html','<ion-modal-view class="maintenance content"><ion-header-bar class=bar-positive><h1 class=title>Check the inner tube</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-slide-box on-slide-changed=vm.onSlideChange($index)><ion-slide><ion-content has-subheader=false class=padding><h4>Remove inner tube</h4><div class=stack-container><div ng-show=!open1 class="stack animated"><div class=video-container><youtube-video video-id="\'kDlgzcL4BRE\'" player=players[0]></youtube-video></div><a class="text toggle" href ng-click="open1=true">Read more ...</a></div><div ng-show=open1 class="stack animated ng-hide"><ul class=bullet-point><li>Release wheel and air left in the tube.</li><li>Pry off tire with a tire lever by bending back slightly the tire edge that meets the rim.</li><li>Use another tire lever to loosen the tire off the rim.</li><li>Pull off inner tube.</li></ul><a class="text toggle" href ng-click="open1=false">Show video ...</a></div></div></ion-content></ion-slide><ion-slide><ion-content has-subheader=false class=padding><h4>Check and patch the inner tube</h4><div class=stack-container><div ng-show=!open2 class="stack animated"><div class=video-container><youtube-video video-id="\'u7debBvJsqI\'" player=players[1]></youtube-video></div><a class="text toggle" href ng-click="open2=true">Read more ...</a></div><div ng-show=open2 class="stack animated ng-hide"><ul class=bullet-point><li>Pump up the tube until full and submerge the tube underwater.</li><li>The part of the tube that bubbles is where the hole is located.</li><li>Mark the position of the hole with a pen or marker.</li><li><strong>Follow the instruction provided by the patch kit to patch the tube. If no instruction is available, <a href ng-click="getStaticModalPageFromService(\'TireHowToPatchModal\')">click here</a> for the generic steps to patch a tube</strong>.</li></ul><a class="text toggle" href ng-click="open2=false">Show video ...</a></div></div></ion-content></ion-slide><ion-slide><ion-content has-subheader=false class=padding><h4>Install the patched inner tube</h4><div class=stack-container><div ng-show=!open3 class="stack animated"><div class=video-container><youtube-video video-id="\'zP2GvDq9AU0\'" player=players[2]></youtube-video></div><a class="text toggle" href ng-click="open3=true">Read more ...</a></div><div ng-show=open3 class="stack animated ng-hide"><ul class=bullet-point><li>Take the tube and place the inner side into the rim trench of the wheel. Inflating the tube a little makes it easier to put on.</li><li>Stretch the tube around the rim. Little liquid dish soap can make it easier to put a tire on.</li><li>Let all the air out before fully inflating to help remove the kinks.</li><li>Pump the tube to the required pressure.</li></ul><a class="text toggle" href ng-click="open3=false">Show video ...</a></div></div></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('maintenance/modal/tirehowtopatch.html','<ion-modal-view class="maintenance content"><ion-header-bar class=bar-positive><h1 class=title>How To Patch Tube</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h4>Generic steps to patch tube</h4><div class=stack-container><div ng-show=!open1 class="stack animated"><div class=video-container><youtube-video video-id="\'T87ub6X5UxE\'" player=players[0]></youtube-video></div><a class="text toggle" href ng-click="open1=true">Read more ...</a></div><div ng-show=open1 class="stack animated ng-hide"><ol class=numbered-list><li>Dry off tube and gently scratch the hole area with a scratching tool.</li><li>Apply glue all around the hole area, and attach the patch.</li><li>Press the patch firmly for about a minute to make sure it stays on.</li><a class="text toggle" href ng-click="open1=false">Show video ...</a></ol></div></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/modal/tirereplace.html','<ion-modal-view class="maintenance content"><ion-header-bar class=bar-positive><h1 class=title>Replace Inner Tube</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-slide-box on-slide-changed=vm.onSlideChange($index)><ion-slide><ion-content has-subheader=false class=padding><h4>Step 1: Remove inner tube</h4><div class=stack-container><div ng-show=!open1 class="stack animated"><div class=video-container><youtube-video video-id="\'kDlgzcL4BRE\'" player=players[0]></youtube-video></div><a class="text toggle" href ng-click="open1=true">Read more ...</a></div><div ng-show=open1 class="stack animated ng-hide"><ul class=bullet-point><li>Release wheel and air left in the tube.</li><li>Pry off tire with the plastic tire lever by bending back slightly the edge of the tire where it meets the rim.</li><li>Use the second tire lever to loosen the tire off the rim.</li><li>Pull off the inner tube.</li></ul><a class="text toggle" href ng-click="open1=false">Show video ...</a></div></div></ion-content></ion-slide><ion-slide><ion-content has-subheader=false class=padding><h4>Step 2: Install new inner tube</h4><div class=stack-container><div ng-show=!open2 class="stack animated"><div class=video-container><youtube-video video-id="\'zP2GvDq9AU0\'" player=players[1]></youtube-video></div><a href ng-click="open2=true">Read text ...</a></div><div ng-show=open2 class="stack animated ng-hide"><ul class=bullet-point><li>Take the tube and place the inner side into the rim trench of the wheel. Inflating the tube a little makes it easier to put on.</li><li>Stretch the tube around the rim. Little liquid dish soap can make it easier to put a tire on.</li><li>Let all the air out before fully inflating to help remove the kinks.</li><li>Pump the tube to the required pressure.</li></ul><a href ng-click="open1=false">Show video ...</a></div></div></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('usewchair/popupsetuphow/message.html','<ion-modal-view class=floating><ion-content class="info-page padding" scroll=false style="text-align: center"><img src=images/use/popup_how.png style="height: 100%"><div class=checkbox style="padding: 0px"><input type=checkbox ng-model=vm.model.stopPopupSetupHow> <span>Don\'t show again</span></div></ion-content><ion-footer-bar class=bar-positive style="border: 1px solid white;"><div class="title title-center" ng-click=vm.closeModal(vm.model);>OK</div></ion-footer-bar></ion-modal-view>');
$templateCache.put('usewchair/qa/main-qa-detail.html','<ion-view title=Q&A><ion-content class="usewchair content" padding=true><h3 style="font-size: 18px; font-weight: 800">{{qa.q}}</h3><div compile=qa.a></div></ion-content></ion-view>');
$templateCache.put('usewchair/qa/main-qa.html','<ion-view title=Q&A><ion-content class="usewchair content"><div class=list><div class="item item-input-inset search-bar"><label class=item-input-wrapper><i class="icon ion-ios-search placeholder-icon"></i> <input type=text placeholder=Search ng-model=search.keyword></label> <i class="clear ion-ios-close-outline" ng-click="search.keyword = \'\';" ng-show=search.keyword.length></i></div><div ng-repeat="item in qaList | inArray:include:\'title\'"><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{qa: item});"><strong>{{item.title}}</strong><div class="valign middle triangle-right"></div></div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/qa/main.html','<ion-view title="Q &amp; A"><ion-content class="usewchair content" padding=true><ul class=qa-menu-grid><li class=menu-item ng-click="navigateTo(\'main.usewheelchair.qa.sub\', { group: \'drive\'})"><img src=images/use/qa/push.png><h2>Drive</h2></li><li class=menu-item ng-click="navigateTo(\'main.usewheelchair.qa.sub\', { group: \'safety\'})"><img src=images/use/qa/safety.png><h2>Safety</h2></li><li class=menu-item ng-click="navigateTo(\'main.usewheelchair.qa.sub\', { group: \'posture\'})"><img src=images/use/qa/posture.png><h2>Posture</h2></li><li class=menu-item ng-click="navigateTo(\'main.usewheelchair.qa.sub\', { group: \'health\'})"><img src=images/use/qa/health.png><h2>Health</h2></li></ul></ion-content></ion-view>');
$templateCache.put('maintenance/contents/modal/battery.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Batteries: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Charging Batteries Properly</h2><p>\u2022 Batteries last longer if they never run completely flat.</p><p>\u2022 If you use the wheelchair everyday, charge it everyday.</p><p>\u2022 Here are a few common mistakes that decrease battery life:</p><ul class=bullet-point><li>If the batteries have not been charged for too many days, they may lose the charge and become completely flat.</li><li>Charging too frequently when the batteries have only been used a little.</li></ul><p>\u2022 Use only the charger provided with the wheelchair.</p><p>\u2022 Batteries should be stored fully charged.</p><p>\u2022 If going on vacation or being sick and not using it, leave it charging.</p><p>\u2022 A well maintain battery should last from 1 to 1.5 years.</p><p>\u2022 Contact the assistive technology professional and/or seating and mobility specialist if the batteries are drained quickly or cannot keep a charge.</p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/cushion-types.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Cushion Type</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-slide-box><ion-slide><ion-content class=padding><h2>Air cushions</h2><div class="frame borderless"><img src=images/maintenance/28_air_cushion.jpg class=jpg></div><ul class=bullet-point><li>Squeeze the cushion to inspect if the valve is in good condition and does not leak.</li><li>If you suspect there is a leak, remove the cover and submerge the cushion in water to look for bubbles.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h2>Gel cushions</h2><div class="frame borderless"><img src=images/maintenance/29_gel_cushion.jpg class=jpg></div><ul class=bullet-point><li>Knead the gel daily, so it moves under bony areas.</li><li>Inspect if the gel becomes hard and if there are any leaks.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h2>Foam cushions</h2><div class="frame borderless"><img src=images/maintenance/30_foam_cushion.jpg class=jpg></div><ul class=bullet-point><li>Inspect if the foam stays intact and does not become deteriorated and chipped.</li><li>The foam should bounce back after being pressed.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/cushion-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Cushion Cover and Insert: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>The interaction between the cushion and the body determines the user\u2019s comfort, function, and clinical safety.</li><li>Cushions do not last as long as the frame. Deterioration in the cushion can increase the risk of developing a pressure ulcer.</li><li>Dirt on the cushion can cause skin breakdown and can cause odor on both the wheelchair and cushion.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/display-error.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Display Errors: What to do?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p>Read the error and act accordingly.</p><p>If error persists:<ul class=bullet-point><li>Turn off the wheelchair.</li><li>Turn the wheelchair back on.</li></ul></p><p>If error still persists:<ul class=bullet-point><li>Note the error and/or number of blinking lights.</li><li>Refer to user\u2019s manual for further instructions.</li><li>Call the assistive technology professional and/or seating and mobility specialist if you cannot resolve the error.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/electrical-joy-controllerClamp.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Controller Clamp</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/clamp.png class=jpg></div><div class="frame borderless"><img src=images/maintenance/clamp_zoon_in.png class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/electrical-wire.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title></h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>How to organize wires and cables:</h2><ul class=bullet-point><li>Use cable ties to tie down the cables to the frame or in a bunch to make sure they are safely away from all moving parts.</li></ul><div class="frame borderless"><img src=images/maintenance/Damper.png class=jpg></div><ul class=bullet-point><li>Contact the assistive technology professional and/or seating and mobility specialist if you are not sure how to organize and tie the wires and cables.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/frame-damper.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Suspension Elements: Damper</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/Damper1.png class=jpg></div><div class="frame borderless"><img src=images/maintenance/Damper.png class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/frame-how-nuts.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Nuts and Bolts: Fix</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>Do not over tighten! Some bolts are not to be tightened all the way, such as <a ng-click="getStaticModalPage(\'maintenance/contents/modal/frame-lock-nuts.html\')">lock nuts</a>.</li><li>Over tightening a loose nut or bolt could damage the part and/or bolt.</li><li>If nuts or bolts are missing, stripped or broken, contact the assistive technology professional and/or seating and mobility specialist to get the bolts/nuts replaced.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/frame-lock-nuts.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Lock Nuts</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/lock_nuts.jpg class=jpg></div><ul class=bullet-point><li>Lock nuts have plastic or nylon inserts to prevent loosening under vibration.</li><li>You cannot reuse them, and need to replace them if they come loose.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/frame-spring.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Suspension Elements: Spring</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/Spring1.png class=jpg></div><div class="frame borderless"><img src=images/maintenance/Spring.png class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/frame-tubes.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Frame Tubes</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/frame_tubes.jpg class=jpg></div><ul class=bullet-point><li>Frame tubes are the main structure of a wheelchair (e.g., the white tube structure in the left picture and yellow tube structure in the right picture). Check for any cracks or fractures.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/frame-why-folding.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2>Folding mechanism</h2><ul class=bullet-point><li>Cross-brace frames allow the wheelchair to collapse towards the middle for storage.</li><li>Problems with the cross-brace mechanism may cause the wheelchair to collapse and injury to you.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/month-clean-axle-housing-how.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Clean the power seat functions and all the tracks</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p>Tools: Rag</p><p>1. Position the seat at the maximum range.</p><p>2. Clean the power seat functions and all the tracks (including tilt, recline, leg support elevator, and seat elevator) with a dry soft cloth.</p><div class="frame borderless"><img src=images/maintenance/55_caster_alignment.jpg class=jpg></div>s<p>3. If there is <b>grease/lubricant on the track</b> do not clean it.</p><div class="frame borderless"><img src=images/maintenance/55_caster_alignment.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/month-clean-caster-how.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Clean Caster Axels</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p>Tools: scissors, tweezers, toothbrush, plyers.</p><p>Remove dirt, lint, and hair from the caster axles bearings with scissors, tweezers, toothbrush, or plyers.</p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/month-wipedown-how.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>How to clean wheelchair frame?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p>Tools: rag, basket, water, mild soap.</p><p>1. Remove the fabric covers from the frame and the calf straps if possible.</p><p>2. Wipe down the wheelchair frame with a clean and damp rag. The rag should be moist and not soaked</p><p>3. Take the cushion cover off if possible and wash it.<ul class=bullet-point><li>Use mild soap water.</li><li>Hang it up to dry. Do not machine to dry it.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/motor-disengage.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Motor Disengage Lever: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h4>Importance of Motor Disengage Lever</h4><p><ul class=bullet-point><li>When the electrical system of the wheelchair fails and the wheelchair cannot be driven by the controller, the caregiver can use the lever to disengage the motor and push the wheelchair manually.</li><li>Motor disengage lever failure can leave you stranded.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/motor-func.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Motor Function: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h4>Importance of Motor Function</h4><p><ul class=bullet-point><li>Motor failure can leave you stranded.</li><li>You should become familiar with the healthy sound of your wheelchair when it is new.</li><li>If your ear is tuned to how it sounds when it is healthy, you will be able to notice when there is excessive noise.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/other-caster-assembly.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Casters</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Caster Assembly</h2><div class="frame borderless"><img src=images/maintenance/53_casters.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/other-caster-caps.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Casters</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Missing Caster Caps</h2><div class="frame borderless"><img src=images/maintenance/54_missing_caster_cap.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/other-caster-float.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Caster Float</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p class=title>It means that the caster does not rest on the ground when the wheelchair parks on an even and level surface.</p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/other-caster-stem-housing.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Casters</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Caster stem housing not aligned vertically</h2><div class="frame borderless"><img src=images/maintenance/55_caster_alignment.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/other-caster-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Casters: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Casters Condition</h2><ul class=bullet-point><li>They affect the wheelchair performance and might cause a collision and injure to the user.</li><li><a ng-click="page.close; getStaticModalPage(\'maintenance/contents/modal/other-caster-float.html\')">Caster float</a> decreases the stability of the wheelchair.</li><li>Excessive flutter can cause the wheelchair to move in an unwanted direction.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/other-footrest-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Footrests: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Footrests</h2><ul class=bullet-point><li>Often the footrests are the first part of the wheelchair to come in contact with an obstacle.</li><li>They are used to open doors, act as bumpers, and also scraped along the ground when the wheelchair is loaded into a motor vehicle.</li><li>A loose or broken footrest may decrease ground clearance of the wheelchair, and may cause your feet to slide and drag on the ground.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/quarter-lubricate-how.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>How to lubricate?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>Tools required: Lubricating oil (e.g., Liquid Wrench and 3M Multipurpose Lubricant) or Teflon-based spray (e.g., Tri-Flow Lubricant, TeflonTM, and WD40), and rags</li><li>Clean and dry your wheelchair.</li><li>Apply lubricating oil or Teflon-based spray to all moving parts including the folding mechanism, exposed hinges, and places where the front casters turn.</li><li>DO NOT lubricate <a ng-click="showImage(\'images/maintenance/sealed_bearing.jpg\', \'Sealed Bearing\')">sealed bearings</a>.</li><li>DO NOT use penetrating oil.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/seat-armrest-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Armrests: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Charging Batteries Properly</h2><ul class=bullet-point><li>Armrests provide good resting posture for your arms, and provide support when you lean to either side, reach high or perform transfers.</li><li>Loose armrests cannot provide reliable support and likely lead to falls.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/seat-backrest-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Backrests: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Backrest</h2><ul class=bullet-point><li>Back supports provide comfort and postural support while sitting.</li><li>Loose upholstery may provide less postural support and can lead to skeletal deformities.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/seat-headrest-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Headrests: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Headrest</h2><ul class=bullet-point><li>Headrest provides support to maintain the user\u2019s head in a functional and comfortable posture.It is especially important when the seat is tilted or the backrest is reclined.</li><li>Loose and/or worn out headrest can be uncomfortable, does not provide appropriate postural support, or can fall out.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/seat-postural-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Postural Support: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Postural Support</h2><ul class=bullet-point><li>Postural supports are to maintain functional and comfortable sitting position with good alignment.</li><li>Loose and/or worn out supports can fall off and/or increase pressure to the skin that they are in contact with, which can increase the risk of pressure sores.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/shrouds.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Importance of shrouds</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/Shroud.gif class=jpg></div><ul class=bullet-point><li>If the shrouds are damaged, dirt and moisture can impact the proper function of the wheelchair.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/suspension-elements.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Suspension Elements: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Suspension Elements</h2><p>Damaged suspension elements can make the wheelchair harder to drive and less stable when maneuvering obstacles.</p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/tirepressure-fix.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Tire Pressure: How?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p>You should pump and inflate the tire if it depresses more than 0.2 inch.</p><p>If you pump the tire and it goes flat, you can:<ul class=bullet-point><li><a href ng-click="getStaticModalPageFromService(\'TireCheckAndPatchModal\')">Check the inner tube to find the puncture and patch it</a></li><li><a href ng-click="getStaticModalPageFromService(\'TireReplaceModal\')">Replace inner tube</a></li><li><a href ng-click="page.close(); navigateTo(\'main.contacts\')">Contact supplier</a></li></ul></p><p>You can visit a bike shop to check and replace your tires. If the problem is found in the other parts of the wheel, e.g., the wheel axle or bearing, you will need to contact your supplier.</p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/tirepressure-thickness.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Tire Pressure: Depth</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/08_tire_pressure.jpg class=jpg></div><p><ul class=bullet-point><li>If the tire presses down more than 0.2 inch (roughly the thickness of three pennies stacked together), you should inflate the tire.</li><li>If you pump the tire and it goes flat,<a ng-click="page.close();navigateTo(\'main.contacts\')">contact the assistive technology professional and/or seating and mobility specialist</a></li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/tirepressure-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Tire Pressure: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Tire Pressure</h2><p>If the tire lacks sufficient pressure,<ul class=bullet-point><li>Your wheelchair will be difficult to maneuver and will be less stable</li><li>The tire and wheel will also wear much more quickly.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-alignment.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Wheel Alignment</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Roll through a puddle of water</h2><div class="frame borderless"><div class=video-container><youtube-video video-id="\'C10fRsMYqoE\'"></youtube-video></div></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-bearing-condition.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Bearing Condition: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Bearing Condition</h2><p><ul class=bullet-point><li>The wheel bearings allow for free rotation of the wheel around the wheel axis. Thus damaged bearings can increase rolling resistance.</li><li>Bearings will wear out during normal use, and so it will need to be replaced periodically.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-hard-bearing-noise.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Bearing Condition</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Noise</h2><ul class=bullet-point><li>Most prominently, a knocking noise, and on some occasions, a squeaky squealing moan is what would be the first indicator of such a problem.</li><li>Initially, the sound would be heard only at certain speeds, but will become fairly regular and prominent as the condition of the bearings worsen.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-hard-hold.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Wheel Axles</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Hold the wheel from the hub</h2><div class="frame borderless"><img src=images/maintenance/45_wheel_axle.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-hard-how-lock.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Wheel locks</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2>How to Fix?</h2><ul class=bullet-point><li>Inflate tires properly, and then apply the locks and check whether it holds the tires firmly in place.</li><ul><li>They should be easily activated and do not interfere with the tire while rolling.</li></ul><li>Adjust wheel locks if they are loose or not working properly.</li><li>If the locks still do not work properly, contact your wheelchair supplier.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-hard-why-bearing.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Bearing Condition: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/wheel_bearing.jpg class=jpg></div><ul class=bullet-point><li>Wheelchair bearings allow for free rotation of the wheel around the wheel axle.</li><li>Wheelchair bearings can wear out after a certain amount of normal use.</li><li>Damaged bearings can increase rolling resistance, which requires you to use more efforts to push the wheelchair and potentially stresses your shoulders.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-hard-why-handrim.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Handrims</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Why?</h2><ul class=bullet-point><li>Handrims are metal or plastic rings attached to the rear wheels used to propel a manual wheelchair.</li><li>A loose, worn, dented or bent handrim will make it more difficult to grasp, or even fall off.</li><li>Cracks on the handrim can cut or harm you.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-hard-why-lock.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Wheel Locks</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Why?</h2><ul class=bullet-point><li>Wheel locks act as parking brakes and assist when transferring to other surfaces, or when you wish to remain in a particular spot.</li><li>They allow you to be more stable when desired.</li><li>Wheel locks that interfere with normal wheel rolling cause wear to the tire and brake.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-how-spoke-tension.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Spoke Tension: How?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>It is recommended that you do not adjust spoke tension on your own, as spokes must be tensioned to a specific torque range using a special stand. If adjusted inappropriately, spokes or their nipples could break and wheels could go out of true.</li><li>You may go to a bicycle shop to get spokes tightened if you have pneumatic tires.</li><li>You need to contact your supplier if you have solid tires, as a new wheel might be the best solution.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-spoke-tension-nipple.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Spoke Nipples</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/39_spoke_nipple.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-spoke-tension-squeeze.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Squeeze Spokes</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/38_spoke_tension.jpg class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-tire-condition.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Tire Condition</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src=images/maintenance/33_tire_worn_out.gif class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-tread-depth.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Steps to Inspect Tread Depth</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><p>1. Place a penny between the tread ribs on your tire. A \u201Crib\u201D refers to the raised portion of tread that span the circumference of the tire.</p><div class="frame borderless"><img src=images/maintenance/Shroud.gif class=jpg></div><p>2. Turn the penny so that Lincoln\u2019s head points down into the tread.</p><p>3. If you can see his entire head, your tread is no longer deep enough, and should contact the assistive technology professional and/or seating and mobility specialist.</p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-why-alignment.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Wheel Alignment: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>If there is a misalignment, a wheelchair will be easily drift from its course between pushes and you will have to push more often to travel straight, which reduces the push efficiency and your control over the wheelchair.</li><li>You should pay attention to how the wheelchair \u201Cfeels\u201D when it is new so you can identify misalignment.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-why-spoke-tension.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Spoke Tension: Why?</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>Loose spokes can make the wheelchair harder to propel and cause the wheel to collapse.</li><li>One loose spoke will cause others to carry more tension, ultimately making the wheel wobble from side to side.</li><li>If there is one loose, others will become loose very quickly.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/wheel-why-tire-condition.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title>Tire Condition</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of Tire Condition</h2><p><ul class=bullet-point><li>Tire wear can negatively impact the maneuverability and stability of a wheelchair.</li><li>Low tread depth can easily lead to powerchair slippage, making braking distances longer.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('maintenance/contents/modal/year-why.html','<ion-modal-view class=maintenance><ion-header-bar class=bar-positive><h1 class=title></h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2 class=title>Importance of having your wheelchair professional serviced</h2><ul class=bullet-point><li>All wheelchairs should be professionally serviced at least once a year.</li><li>In places with inclement weather conditions, wheelchairs should be professionally serviced twice a year.</li><li>The cost of this will depend on the wheelchair expert. It is usually not reimbursed by a health insurance.</li><ul></ul></ul></ion-content></ion-modal-view>');
$templateCache.put('power/views/maintain/main-daily-action.html','<ion-view title="Under Construction"><ion-content class="maintenance content" padding=true><img src=images/under_construction.png></ion-content></ion-view>');
$templateCache.put('power/views/maintain/main-daily-inspect.html','<ion-view title="Daily Inspections" class=maintenance><ion-nav-buttons side=secondary><button class="button button-clear icon ion-clipboard" ng-click=showNote()></button></ion-nav-buttons><ion-content padding=false><div class=list><div class="item item-divider btn-action right"><span>Shrouds</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tirePressure.check01 ng-click=updateData(data)></label> <span class=title>Checklist items.</span></div><div class="item item-divider btn-action right"><span>Electrical System and Display</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tirePressure.check02 ng-click=updateData(data)></label> <span class=title>Checklist items.</span></div><div class="item item-divider btn-action right"><span>Power Seat Function</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tirePressure.check03 ng-click=updateData(data)></label> <span class=title>Checklist items.</span></div><div class="item item-divider btn-action right"><span>Brake Function</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tirePressure.check04 ng-click=updateData(data)></label> <span class=title>Checklist items.</span></div><div class="item item-divider btn-action right"><span>Motor Function</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.tirePressure.check05 ng-click=updateData(data)></label> <span class=title>Checklist items.</span></div></div></ion-content></ion-view>');
$templateCache.put('power/views/maintain/main-monthly-action.html','<ion-view title="Under Construction"><ion-content class="maintenance content" padding=true><img src=images/under_construction.png></ion-content></ion-view>');
$templateCache.put('power/views/maintain/main-monthly-inspect.html','<ion-view title="Monthly Inspections"><ion-content class="maintenance joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.frame\')"><div class=title>Frame</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.wheels\')"><div class=title>Wheels</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.wheel-hardware\')"><div class=title>Wheel Hardware</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.seat\')"><div class=title>Seat</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.electric\')"><div class=title>Electrical System</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.others\')"><div class=title>Others</div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('power/views/maintain/main-weekly-inspect.html','<ion-view title="Under Construction"><ion-content class="maintenance content" padding=true><img src=images/under_construction.png></ion-content></ion-view>');
$templateCache.put('power/views/maintain/main.html','<ion-view title="Wheelchair Maintenance"><ion-content class="usewchair joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'main.power.maintain.daily-inspect\')"><div class=title>Daily Inspections</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.maintain.weekly-inspect\')"><div class=title>Weekly Inspections</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.maintain.monthly-inspect\')"><div class=title>Monthly Inspections</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.maintain.daily-action\')"><div class=title>Daily Actions</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.maintain.monthly-action\')"><div class=title>Monthly Actions</div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('power/views/use/empty.html','<ion-view title="Under Construction"><ion-content class="usewchair content" padding=true><img src=images/under_construction.png></ion-content></ion-view>');
$templateCache.put('power/views/use/main.html','<ion-view title="Use a Wheelchair"><ion-content class="usewchair joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'main.power.use.components\')"><div class=title>Wheelchair <strong>Components</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.use.setup\')"><div class=title><strong>Fit</strong> and <strong>Set-Up</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.use.skills\')"><div class=title>Wheelchair <strong>Skills</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.power.use.qa\')"><div class=title><strong>Q&amp;A</strong></div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/element/modal/recommend.modal.html','<ion-modal-view class="usewchair content"><ion-header-bar class=bar-positive><h1 class=title>{{vm.section | uppercase}}</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li ng-if="vm.section == \'frame\' && vm.componentQAnswer[1] == 3">Next time when you replace your wheelchair, you may want to consider using an <strong>ultralight weight</strong> wheelchair. It will be much easier for you to push and help protect your shoulders, arms, and wrists from repetitive injuries.</li><li ng-if="vm.section == \'backrest\' && vm.componentQAnswer[2] == 1">If your backrest is slinging (i.e., sagging), you may want to consider replacing it with a <strong>tension-adjustable backrest</strong> or a <strong>solid backrest in order to provide better</strong> support for your posture.</li><li ng-if="vm.section == \'handrims\' && (vm.componentQAnswer[7] == 1 || vm.componentQAnswer[7] == 2)">You may want to consider using <strong>ergonomic handrims</strong>. They will help you to push your wheelchair more efficiently and prevent repetitive injuries in your wrists and hands.</li><li ng-if="vm.section == \'cushion\' && vm.componentQAnswer[5] != null">If you are bothered by recurrent pressure sores or pain over your buttocks, you should contact your therapist to receive a wheelchair evaluation that includes a <strong>pressure mapping assessment</strong> to determine best course of action to relieve pressure (e.g., adjustments in your wheelchair to improve your position, ordering a new pressure relieving cushion, education on pressure relief manuevers).</li><li ng-if="vm.section == \'accessories\' && vm.componentQAnswer[8] != null && vm.componentQAnswer[8] != 8">If you feel that your <strong>positioning accessories</strong> interfere with or do not support you to push your wheelchair, you should contact your therapist for a wheelchair evaluation. They can help you figure out the problems with the accessoriesand make adjustments or work with a wheelchair supplier to order new or replacement parts.</li><li ng-if="vm.section == \'accessories\' && vm.componentQAnswer[8] != null && vm.componentQAnswer[8] == 8">If you feel that your trunk or legs are not stable in your wheelchair, <strong>positioning accessories</strong> may be helpful for you. You should contact your therapist to receive an assessment to figure out the problem and select appropriate positioning accessories.</li><li ng-if="vm.section == \'accessories\' && vm.componentQAnswer[8] == 1">If you are experiencing pain or weakness in your upper limbs, a <strong>power add-on device</strong> could be helpful for you.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewchair/element/modal/summary.modal.html','<ion-modal-view class="usewchair content assessment-summary"><ion-header-bar class=bar-positive><h1 class=title>SUMMARY</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h3><strong>Summary of Assessment</strong></h3><div class=list><div class="item item-divider" ng-repeat-start="question in vm.questions"><strong>{{question.summary}}</strong></div><div class=item ng-repeat-end>{{vm.getAnswer(question)}}</div></div></ion-content></ion-modal-view>');
$templateCache.put('usewchair/element/contents/assessment-summary-map.html','<svg version=1.1 id=Layer_1 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewbox="0 0 296.4 296.4" xml:space=preserve><style type=text/css>\n        .st0{fill:#BCBEC0;stroke:#FFFFFF;stroke-width:1.84;stroke-miterlimit:10;}\n        .st1{fill:#BCBEC0;stroke:#FFFFFF;stroke-width:2.85;stroke-miterlimit:10;}\n        .st2{fill:none;stroke:#FFFFFF;stroke-width:1.74;stroke-miterlimit:10;}\n        .st3{fill:#FFFFFF;}\n        .st4{fill:none;stroke:#908FB3;stroke-miterlimit:10;}\n        .st5{fill:#ED1C24;}\n    </style><title>MWG_ChairArt_Red</title><g><path class=st0 d="M239.6,195h39.3c5.1,0,9.2,4.1,9.2,9.2l0,0c0,5.1-4.1,9.2-9.2,9.2h-39.3c-5.1,0-9.2-4.1-9.2-9.2l0,0 C230.4,199.1,234.6,195,239.6,195z"></path><path class=st0 d="M248.4,233.7l-8.6-1.1l4.2-17.4c0.3-2.6,0.5-5.1,0.5-7.7c0.1-4.2-4.2-12.4-4.2-12.4l-40.5-55 c-1.4-2.5-3.1-4.8-5-6.9c-2.7-2.8-4.8-3.2-4.8-3.2l-76.3-1.2c0,0-12.2,0.8-18.7-5.9c-6.5-6.7-8.7-19.5-8.7-19.5L70.4,35.3 c-1-4.4,1.6-8.7,6-9.8c0,0,0,0,0,0l0,0c4.4-1,8.7,1.6,9.8,6l16.3,68.9c0.4,3.6,1.9,6.9,4.4,9.5c4,4.1,6.6,2.8,6.6,2.8l79.5,1.2 c4.3,0.1,8.5,1.9,11.5,5c2.7,2.7,5.1,5.7,6.9,9l41,56.2l5,10.7c1.5,6.4,2.3,13,2.3,19.6c-0.1,4.6-2,14.1-4.2,23.3L248.4,233.7z"></path><path class=st0 d="M214.9,102.8c0.1-6.3-4.9-11.4-11.2-11.5l-78.4-1.2c-6.3-0.1-11.4,4.9-11.5,11.2c0,0,0,0,0,0l0,0 c-0.1,6.3,4.9,11.4,11.2,11.5c0,0,0,0,0,0l78.4,1.2C209.6,114.1,214.7,109.1,214.9,102.8C214.8,102.8,214.9,102.8,214.9,102.8 L214.9,102.8z"></path><path class=st0 d="M92.9,10.5c-6.1,1.5-9.9,7.6-8.4,13.7c0,0,0,0,0,0l13.1,55.3c1.5,6.1,7.6,9.8,13.7,8.4c0,0,0,0,0,0l0,0 c6.1-1.5,9.9-7.6,8.4-13.7L106.7,19C105.2,12.9,99.1,9.1,92.9,10.5L92.9,10.5z"></path><path class=st0 d="M117.2,174c-5.7,2.6-8.3,9.3-5.7,15l23.2,52c2.6,5.7,9.3,8.2,15,5.7l0,0c5.7-2.6,8.3-9.3,5.7-15l-23.2-52 C129.7,174,122.9,171.4,117.2,174L117.2,174z"></path><path class=st0 d="M241.4,232.7c12.7,0,22.9,10.3,22.9,22.9s-10.3,22.9-22.9,22.9s-22.9-10.3-22.9-22.9c0,0,0,0,0,0 C218.4,242.9,228.7,232.7,241.4,232.7C241.3,232.7,241.3,232.7,241.4,232.7z M228.2,255.6c0,7.3,5.9,13.2,13.2,13.2 s13.2-5.9,13.2-13.2s-5.9-13.2-13.2-13.2c0,0,0,0,0,0C234.1,242.4,228.2,248.3,228.2,255.6C228.2,255.6,228.2,255.6,228.2,255.6z"></path><path class=st1 d="M150.3,207.5c19.6,0,35.5,15.9,35.5,35.5c0,19.6-15.9,35.5-35.5,35.5s-35.5-15.9-35.5-35.5c0,0,0,0,0,0 C114.8,223.4,130.7,207.5,150.3,207.5z M129.8,243c0,11.3,9.2,20.5,20.4,20.5c11.3,0,20.5-9.2,20.5-20.5s-9.2-20.4-20.5-20.4 c0,0,0,0,0,0C139,222.6,129.8,231.7,129.8,243C129.8,243,129.8,243,129.8,243z"></path><path class=st0 d="M112.2,59.6c60.3,0,109.1,48.9,109.1,109.1s-48.9,109.1-109.1,109.1S3.1,229,3.1,168.8c0,0,0,0,0,0 C3.1,108.5,52,59.6,112.2,59.6z M24.9,168.7c0,48.2,39.1,87.3,87.3,87.3c48.2,0,87.3-39.1,87.3-87.3c0-48.2-39.1-87.3-87.3-87.3 c0,0,0,0,0,0C64,81.4,24.9,120.5,24.9,168.7z"></path><path class=st2 d="M112.6,65.6c57,0,103.1,46.1,103.2,103.1c0,57-46.1,103.1-103.1,103.2S9.5,225.7,9.5,168.8c0,0,0,0,0,0 C9.5,111.8,55.7,65.6,112.6,65.6z"></path><circle class=st0 cx=112.2 cy=168.7 r=24.7></circle></g><rect x=225.6 y=175 class="footrest st3" width=62.6 height=18.1 ng-show=false></rect><path class="backrest st5" ng-click="vm.openRecommendation(\'backrest\')" ng-show="vm.componentQAnswer[2] == 1" d="M183.8,44.1h-67.9V23.8h67.9V44.1z M118.2,28.1v10.7h5.2c0.5,0,0.9-0.1,1.4-0.2c0.4-0.1,0.8-0.3,1.2-0.6 c0.4-0.3,0.7-0.6,0.9-1c0.5-1,0.4-2.2-0.2-3.1c-0.4-0.5-0.9-0.9-1.5-1c0.4-0.2,0.8-0.5,1.1-0.9c0.3-0.4,0.4-0.9,0.4-1.3 c0-0.4-0.1-0.9-0.2-1.3c-0.2-0.3-0.4-0.6-0.7-0.8c-0.3-0.2-0.7-0.4-1.1-0.4c-0.5-0.1-0.9-0.1-1.4-0.1L118.2,28.1z M120.5,32.4v-2.5 h2.2c0.2,0,0.4,0,0.6,0.1c0.2,0,0.4,0.1,0.5,0.2c0.2,0.1,0.3,0.2,0.4,0.4c0.1,0.2,0.1,0.4,0.1,0.6c0,0.4-0.1,0.8-0.4,1 c-0.3,0.2-0.6,0.3-1,0.3L120.5,32.4z M120.5,37v-3h2.6c0.4,0,0.9,0.1,1.2,0.3c0.3,0.3,0.5,0.7,0.5,1.2c0,0.2,0,0.5-0.1,0.7 c-0.1,0.2-0.2,0.3-0.4,0.4c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.4,0.1-0.7,0.1L120.5,37z M130.5,33.4c0-0.3,0.2-0.7,0.4-0.9 c0.3-0.2,0.6-0.3,1-0.3c0.2,0,0.4,0,0.5,0c0.2,0,0.3,0.1,0.4,0.2c0.1,0.1,0.2,0.2,0.3,0.3c0.1,0.2,0.1,0.4,0.1,0.6 c0,0.2-0.1,0.4-0.2,0.5c-0.2,0.1-0.4,0.2-0.6,0.3c-0.3,0.1-0.5,0.1-0.8,0.1l-0.9,0.1c-0.3,0-0.6,0.1-1,0.2c-0.3,0.1-0.6,0.2-0.8,0.4 c-0.2,0.2-0.5,0.4-0.6,0.7c-0.2,0.3-0.2,0.7-0.2,1.1c0,0.3,0.1,0.7,0.2,1c0.1,0.3,0.3,0.5,0.6,0.7c0.2,0.2,0.5,0.3,0.8,0.4 c0.3,0.1,0.7,0.1,1,0.1c0.5,0,1-0.1,1.4-0.2c0.5-0.1,0.9-0.4,1.2-0.7c0,0.1,0,0.3,0.1,0.4c0,0.1,0.1,0.2,0.1,0.4h2.2 c-0.1-0.2-0.2-0.5-0.2-0.7c0-0.3-0.1-0.7-0.1-1v-4c0-0.4-0.1-0.8-0.3-1.1c-0.2-0.3-0.5-0.5-0.8-0.7c-0.3-0.2-0.7-0.3-1.1-0.3 c-0.4-0.1-0.8-0.1-1.2-0.1c-0.4,0-0.9,0-1.3,0.1c-0.4,0.1-0.8,0.2-1.1,0.4c-0.3,0.2-0.6,0.5-0.8,0.8c-0.2,0.4-0.4,0.8-0.4,1.2 L130.5,33.4z M133.3,35.8c0,0.1,0,0.3,0,0.5c0,0.2-0.1,0.4-0.2,0.6c-0.1,0.2-0.3,0.4-0.5,0.5c-0.3,0.2-0.7,0.2-1,0.2 c-0.2,0-0.3,0-0.5,0c-0.1,0-0.3-0.1-0.4-0.2c-0.1-0.1-0.2-0.2-0.3-0.3c-0.1-0.1-0.1-0.3-0.1-0.5c0-0.2,0-0.3,0.1-0.5 c0.1-0.1,0.2-0.2,0.3-0.3c0.1-0.1,0.3-0.2,0.4-0.2c0.2,0,0.3-0.1,0.5-0.1l0.5-0.1l0.5-0.1c0.1,0,0.3-0.1,0.4-0.1 c0.1,0,0.2-0.1,0.3-0.2L133.3,35.8z M142.4,33.8h2.1c0-0.5-0.1-0.9-0.4-1.3c-0.2-0.4-0.5-0.7-0.8-0.9c-0.3-0.3-0.7-0.4-1.1-0.5 c-0.4-0.1-0.9-0.2-1.3-0.2c-0.6,0-1.1,0.1-1.7,0.3c-0.5,0.2-0.9,0.5-1.2,0.9c-0.3,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.7 c0,0.5,0.1,1.1,0.3,1.6c0.2,0.5,0.4,0.9,0.8,1.2c0.4,0.4,0.8,0.6,1.2,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.9,0,1.8-0.2,2.5-0.8 c0.7-0.6,1.1-1.4,1.2-2.4h-2c0,0.4-0.2,0.8-0.5,1.2c-0.3,0.3-0.7,0.5-1.2,0.4c-0.3,0-0.6-0.1-0.8-0.2c-0.2-0.1-0.4-0.3-0.6-0.6 c-0.1-0.2-0.2-0.5-0.3-0.8c-0.1-0.3-0.1-0.6-0.1-0.9c0-0.3,0-0.6,0.1-0.9c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6 c0.3-0.2,0.6-0.2,0.9-0.2C141.7,32.4,142.3,33,142.4,33.8L142.4,33.8z M145.9,28.1v10.7h2.1v-2.7l0.8-0.8l2.1,3.5h2.6l-3.3-4.9 l2.9-2.8h-2.5l-2.7,2.8V28L145.9,28.1z M154.4,31.1v7.8h2.2v-3.5c0-0.3,0-0.7,0.1-1c0.1-0.3,0.2-0.6,0.4-0.8 c0.2-0.2,0.4-0.4,0.6-0.5c0.3-0.1,0.7-0.2,1-0.2h0.4h0.4v-2c-0.2,0-0.3-0.1-0.5-0.1c-0.3,0-0.5,0-0.8,0.1c-0.5,0.2-0.9,0.5-1.3,0.9 c-0.2,0.2-0.3,0.4-0.4,0.7l0,0V31L154.4,31.1z M161.7,35.5h5.6c0-0.6,0-1.2-0.1-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1 c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.9c-0.4,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.6 c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.4,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.2,0.8c0.5,0.2,1.1,0.2,1.7,0.2c0.8,0,1.6-0.2,2.2-0.6 c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.4 C161.9,36.5,161.7,36,161.7,35.5L161.7,35.5z M165.2,34.2h-3.5c0-0.2,0-0.3,0.1-0.5c0.1-0.2,0.1-0.4,0.3-0.5 c0.2-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.9-0.2c0.4,0,0.9,0.1,1.2,0.4C164.9,33.2,165.1,33.6,165.2,34.2L165.2,34.2z M170.2,36.3 h-2c0,0.5,0.1,0.9,0.4,1.3c0.2,0.3,0.5,0.6,0.8,0.8c0.4,0.2,0.7,0.4,1.1,0.4c0.9,0.2,1.8,0.2,2.6,0c0.4-0.1,0.8-0.2,1.1-0.4 c0.7-0.5,1.2-1.3,1.1-2.1c0-0.3-0.1-0.6-0.2-0.9c-0.1-0.2-0.3-0.4-0.6-0.6c-0.2-0.2-0.5-0.3-0.8-0.4c-0.3-0.1-0.6-0.2-0.9-0.2 L172,34c-0.3-0.1-0.5-0.1-0.8-0.2c-0.2-0.1-0.4-0.2-0.6-0.3c-0.1-0.1-0.2-0.3-0.1-0.5c0-0.1,0-0.3,0.1-0.4c0.1-0.1,0.2-0.2,0.3-0.2 c0.1,0,0.3-0.1,0.4-0.1c0.1,0,0.3,0,0.4,0c0.3,0,0.7,0.1,1,0.2c0.3,0.2,0.5,0.5,0.5,0.8h2c0-0.4-0.1-0.8-0.4-1.2 c-0.2-0.3-0.5-0.6-0.8-0.8c-0.3-0.2-0.7-0.3-1.1-0.4c-0.4-0.1-0.8-0.1-1.2-0.1c-0.4,0-0.8,0.1-1.2,0.1c-0.4,0.1-0.8,0.2-1.1,0.4 c-0.3,0.2-0.6,0.4-0.8,0.8c-0.2,0.4-0.3,0.8-0.3,1.2c0,0.3,0.1,0.6,0.2,0.9c0.1,0.2,0.3,0.4,0.6,0.6c0.2,0.2,0.5,0.3,0.8,0.4 c0.3,0.1,0.6,0.2,0.9,0.2c0.6,0.1,1.2,0.3,1.8,0.5c0.4,0.2,0.6,0.4,0.6,0.7c0,0.2,0,0.3-0.1,0.5c-0.1,0.1-0.2,0.2-0.3,0.3 c-0.1,0.1-0.3,0.1-0.4,0.2c-0.2,0-0.3,0-0.5,0c-0.2,0-0.4,0-0.6-0.1c-0.2,0-0.4-0.1-0.5-0.2c-0.2-0.1-0.3-0.2-0.4-0.4 C170.3,36.7,170.2,36.5,170.2,36.3L170.2,36.3z M179.3,31.1v-2.4h-2.1V31h-1.3v1.4h1.3V37c0,0.3,0,0.7,0.2,1 c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.1,0.5,0.2,0.8,0.3c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.7h-0.3h-0.4 c-0.4,0.1-0.8-0.1-0.9-0.5c0-0.1,0-0.3,0-0.4v-3.8h1.6V31L179.3,31.1z"></path><path class="wheel st5" ng-click="vm.openRecommendation(\'wheel\')" ng-show=false d="M108.8,216.6H40.9v-20.2h67.8V216.6z M63.3,211.4l2.9-10.7h-2.3l-1.8,7.4l0,0l-1.8-7.4H58l-1.9,7.3l0,0 l-1.7-7.3h-2.4l2.8,10.7h2.4l1.8-7.3l0,0l1.8,7.3L63.3,211.4z M67,200.6v10.7h2.1v-4.1c-0.1-0.6,0.1-1.2,0.4-1.7 c0.3-0.4,0.8-0.6,1.3-0.5c0.4,0,0.8,0.1,1.1,0.5c0.2,0.4,0.3,0.9,0.3,1.4v4.4h2.1v-4.8c0-0.4,0-0.9-0.1-1.3c-0.1-0.4-0.2-0.7-0.4-1 c-0.2-0.3-0.5-0.5-0.9-0.6c-0.5-0.2-0.9-0.2-1.4-0.2c-0.4,0-0.9,0.1-1.2,0.3c-0.4,0.2-0.8,0.6-1,1l0,0v-4L67,200.6z M77.7,208h5.6 c0-0.6,0-1.2-0.2-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3 c-0.5,0.2-0.9,0.5-1.3,0.9c-0.4,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.6c0,0.6,0.1,1.1,0.3,1.6c0.2,0.5,0.4,0.9,0.8,1.3 c0.4,0.4,0.8,0.7,1.2,0.8c0.5,0.2,1.1,0.3,1.7,0.3c0.8,0,1.6-0.2,2.3-0.6c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7 c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.5C77.8,209.1,77.6,208.5,77.7,208z M81.1,206.6h-3.5c0-0.2,0-0.3,0.1-0.5 c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.8-0.2c0.4,0,0.9,0.1,1.2,0.4C80.9,205.7,81.1,206.2,81.1,206.6 L81.1,206.6z M86.3,208h5.6c0-0.6,0-1.2-0.2-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4 c-0.6,0-1.1,0.1-1.6,0.3c-1,0.4-1.7,1.2-2.1,2.2c-0.2,0.5-0.3,1.1-0.3,1.6c0,0.6,0.1,1.1,0.3,1.6c0.2,0.5,0.4,0.9,0.8,1.3 c0.3,0.4,0.8,0.7,1.2,0.8c0.5,0.2,1.1,0.3,1.7,0.3c0.8,0,1.6-0.2,2.2-0.6c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7 c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.5C86.5,209.1,86.3,208.5,86.3,208z M89.8,206.6h-3.5c0-0.2,0.1-0.3,0.1-0.5 c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.8-0.2c0.4,0,0.9,0.1,1.2,0.4C89.5,205.7,89.7,206.2,89.8,206.6 L89.8,206.6z M93.2,200.6v10.8h2.1v-10.7L93.2,200.6z"></path><path class="frame st5" ng-click="vm.openRecommendation(\'frame\')" ng-show="vm.componentQAnswer[1] == 3" d="M71.6,65.7H3.7V45.5h67.9V65.7z M23.5,56.9h-2.3c0,0.6,0.1,1.2,0.4,1.7c0.2,0.5,0.6,0.9,1,1.2 c0.4,0.3,0.9,0.6,1.5,0.7c0.6,0.1,1.1,0.2,1.7,0.2c0.7,0,1.3-0.1,1.9-0.3c0.5-0.1,1-0.4,1.4-0.7c0.4-0.3,0.6-0.7,0.8-1.1 c0.2-0.4,0.3-0.9,0.3-1.4c0-0.5-0.1-1-0.4-1.5c-0.2-0.4-0.5-0.7-0.9-0.9c-0.3-0.2-0.7-0.4-1.1-0.5c-0.4-0.1-0.6-0.2-0.8-0.2 l-1.6-0.4c-0.3-0.1-0.7-0.2-1-0.3c-0.2-0.1-0.4-0.2-0.5-0.4c-0.1-0.2-0.1-0.3-0.1-0.5c0-0.2,0-0.4,0.2-0.6c0.1-0.2,0.2-0.3,0.4-0.4 c0.2-0.1,0.3-0.2,0.5-0.2c0.2,0,0.4-0.1,0.6-0.1c0.3,0,0.5,0,0.8,0.1c0.2,0,0.5,0.1,0.7,0.2c0.2,0.1,0.3,0.3,0.5,0.5 c0.1,0.2,0.2,0.5,0.2,0.8h2.3c0-0.5-0.1-1.1-0.3-1.6c-0.2-0.4-0.6-0.8-1-1.1c-0.4-0.3-0.9-0.5-1.4-0.6c-0.5-0.1-1.1-0.2-1.6-0.2 c-0.5,0-1,0.1-1.4,0.2c-0.5,0.1-0.9,0.3-1.3,0.6c-0.4,0.3-0.7,0.6-0.9,1c-0.5,0.8-0.5,1.9-0.1,2.7c0.2,0.3,0.4,0.6,0.7,0.9 c0.3,0.2,0.6,0.4,1,0.6c0.4,0.1,0.8,0.3,1.2,0.4l1.2,0.3c0.3,0.1,0.7,0.2,1,0.3c0.3,0.1,0.5,0.3,0.7,0.4c0.2,0.2,0.3,0.4,0.3,0.7 c0,0.2-0.1,0.5-0.2,0.7c-0.1,0.2-0.3,0.3-0.5,0.4c-0.2,0.1-0.4,0.2-0.7,0.2c-0.2,0-0.5,0-0.7,0c-0.3,0-0.6,0-0.9-0.1 c-0.3-0.1-0.5-0.2-0.8-0.3c-0.2-0.2-0.4-0.4-0.5-0.6C23.5,57.5,23.4,57.2,23.5,56.9z M33.1,57.1h5.6c0-0.6,0-1.2-0.2-1.7 c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3c-1,0.4-1.7,1.2-2.1,2.2 C31.1,55.5,31,56,31,56.6c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.4,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.2,0.8c0.5,0.2,1.1,0.3,1.7,0.3 c0.8,0,1.6-0.2,2.3-0.6c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.5 C33.3,58.2,33.1,57.6,33.1,57.1z M36.6,55.7h-3.5c0-0.2,0-0.3,0.1-0.5c0.1-0.2,0.2-0.4,0.3-0.5c0.2-0.2,0.3-0.3,0.5-0.4 c0.3-0.1,0.6-0.2,0.8-0.2c0.4,0,0.9,0.1,1.2,0.4C36.4,54.8,36.5,55.3,36.6,55.7z M42,55.1c0-0.3,0.2-0.7,0.4-0.9 c0.3-0.2,0.6-0.3,1-0.3c0.2,0,0.4,0,0.5,0c0.2,0,0.3,0.1,0.4,0.2c0.1,0.1,0.2,0.2,0.3,0.3c0.1,0.2,0.1,0.4,0.1,0.6 c0,0.2,0,0.4-0.2,0.5c-0.2,0.1-0.4,0.2-0.6,0.3c-0.3,0.1-0.5,0.1-0.8,0.1l-0.9,0.1c-0.3,0.1-0.6,0.1-1,0.2c-0.3,0.1-0.6,0.2-0.8,0.4 c-0.3,0.2-0.5,0.4-0.6,0.7c-0.2,0.3-0.3,0.7-0.2,1.1c0,0.3,0.1,0.7,0.2,1c0.1,0.3,0.3,0.5,0.6,0.7c0.2,0.2,0.5,0.3,0.8,0.4 c0.3,0.1,0.7,0.1,1,0.1c0.5,0,1-0.1,1.4-0.2c0.5-0.1,0.9-0.4,1.2-0.7c0,0.1,0,0.2,0,0.4s0.1,0.2,0.1,0.4h2.3 c-0.1-0.2-0.2-0.5-0.2-0.7c0-0.3-0.1-0.7-0.1-1v-4c0-0.4-0.1-0.8-0.3-1.1c-0.2-0.3-0.5-0.5-0.8-0.7c-0.3-0.2-0.7-0.3-1.1-0.3 c-0.4,0-0.8-0.1-1.2,0c-0.4,0-0.9,0-1.3,0.1c-0.4,0.1-0.8,0.2-1.2,0.4c-0.3,0.2-0.6,0.5-0.8,0.8c-0.2,0.4-0.4,0.8-0.4,1.2L42,55.1z M44.8,57.4c0,0.2,0,0.3,0,0.5c0,0.2-0.1,0.4-0.2,0.6c-0.1,0.2-0.3,0.4-0.5,0.5c-0.3,0.2-0.7,0.2-1,0.2c-0.2,0-0.3,0-0.5,0 c-0.1,0-0.3-0.1-0.4-0.2c-0.1-0.1-0.2-0.2-0.3-0.3c-0.1-0.1-0.1-0.3-0.1-0.5c0-0.2,0-0.3,0.1-0.5c0.1-0.1,0.2-0.2,0.3-0.3 c0.1-0.1,0.3-0.2,0.4-0.2c0.2-0.1,0.3-0.1,0.5-0.1l0.4-0.2l0.5-0.1c0.1,0,0.3-0.1,0.4-0.1c0.1,0,0.2-0.1,0.3-0.2L44.8,57.4z M51.3,52.7v-2.3h-2.1v2.3h-1.3v1.4h1.3v4.6c0,0.3,0,0.7,0.2,1c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.1,0.5,0.2,0.8,0.3 c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.7h-0.3h-0.3c-0.2,0-0.5,0-0.7-0.1c-0.1-0.2-0.2-0.5-0.2-0.7v-3.8h1.6v-1.4 L51.3,52.7z"></path><path class="cushion st5" ng-click="vm.openRecommendation(\'cushion\')" ng-show="vm.componentQAnswer[5] != null" d="M268.4,87.8h-67.9V67.6h67.9L268.4,87.8z M212.5,75.4h2.3c-0.1-0.6-0.2-1.1-0.5-1.7c-0.2-0.5-0.6-0.9-1-1.2 c-0.4-0.3-0.9-0.6-1.4-0.8c-0.5-0.2-1.1-0.3-1.7-0.2c-0.8,0-1.5,0.1-2.2,0.4c-0.6,0.3-1.2,0.7-1.7,1.2c-0.4,0.5-0.8,1.1-1,1.8 c-0.2,0.7-0.4,1.5-0.4,2.2c0,0.7,0.1,1.5,0.4,2.2c0.2,0.6,0.6,1.2,1,1.8c0.5,0.5,1,0.9,1.7,1.2c0.7,0.3,1.5,0.4,2.2,0.4 c0.6,0,1.2-0.1,1.8-0.3c0.5-0.2,1-0.5,1.4-0.9c0.4-0.4,0.8-0.9,1-1.4c0.3-0.6,0.4-1.2,0.5-1.8h-2.3c-0.1,0.6-0.3,1.3-0.8,1.7 c-0.4,0.5-1.1,0.7-1.7,0.7c-0.5,0-0.9-0.1-1.4-0.3c-0.4-0.2-0.7-0.5-0.9-0.8c-0.2-0.4-0.4-0.7-0.5-1.2c-0.1-0.4-0.2-0.9-0.2-1.3 c0-0.5,0.1-0.9,0.2-1.4c0.1-0.4,0.3-0.8,0.5-1.2c0.2-0.3,0.5-0.6,0.9-0.8c0.4-0.2,0.9-0.3,1.4-0.3c0.3,0,0.6,0,0.8,0.1 c0.3,0.1,0.5,0.2,0.7,0.4c0.2,0.2,0.4,0.4,0.5,0.6C212.4,74.9,212.5,75.2,212.5,75.4z M223.5,82.6v-7.8h-2.1v4.1 c0.1,0.6-0.1,1.2-0.4,1.7c-0.3,0.4-0.8,0.6-1.3,0.5c-0.4,0-0.8-0.1-1.1-0.5c-0.2-0.4-0.3-0.9-0.3-1.4v-4.4h-2.1v4.8 c0,0.4,0,0.9,0.1,1.3c0.1,0.4,0.2,0.7,0.4,1c0.2,0.3,0.5,0.5,0.9,0.6c0.4,0.2,0.9,0.2,1.4,0.2c0.5,0,0.9-0.1,1.3-0.3 c0.4-0.2,0.8-0.6,1-1h0.1v1.1L223.5,82.6z M226.8,80.1h-2c0,0.9,0.4,1.7,1.2,2.1c0.4,0.2,0.7,0.4,1.1,0.4c0.4,0.1,0.9,0.1,1.3,0.1 c0.4,0,0.9,0,1.3-0.1c0.4-0.1,0.8-0.2,1.1-0.4c0.3-0.2,0.6-0.5,0.8-0.8c0.2-0.4,0.3-0.8,0.3-1.3c0-0.3-0.1-0.6-0.2-0.9 c-0.1-0.2-0.3-0.5-0.6-0.6c-0.2-0.2-0.5-0.3-0.8-0.4c-0.3-0.1-0.6-0.2-0.9-0.2l-0.9-0.2c-0.3,0-0.5-0.1-0.8-0.2 c-0.2-0.1-0.4-0.2-0.5-0.3c-0.1-0.1-0.2-0.3-0.2-0.5c0-0.1,0-0.3,0.1-0.4c0.1-0.1,0.2-0.2,0.3-0.2c0.1-0.1,0.2-0.1,0.4-0.1h0.4 c0.3,0,0.7,0.1,1,0.2c0.3,0.2,0.5,0.5,0.5,0.8h2c0-0.4-0.1-0.8-0.4-1.2c-0.2-0.3-0.5-0.6-0.8-0.8c-0.3-0.2-0.7-0.3-1.1-0.4 c-0.8-0.2-1.6-0.2-2.5,0c-0.4,0.1-0.7,0.2-1.1,0.4c-0.3,0.2-0.6,0.4-0.8,0.8c-0.2,0.4-0.3,0.8-0.3,1.2c0,0.3,0.1,0.6,0.2,0.9 c0.1,0.2,0.3,0.4,0.6,0.6c0.2,0.2,0.5,0.3,0.8,0.4c0.3,0.1,0.6,0.2,0.9,0.2c0.6,0.1,1.2,0.3,1.8,0.5c0.4,0.2,0.6,0.4,0.6,0.7 c0,0.2,0,0.3-0.1,0.5c-0.1,0.1-0.2,0.2-0.3,0.3c-0.1,0.1-0.3,0.1-0.5,0.2c-0.2,0-0.3,0-0.5,0c-0.2,0-0.4,0-0.6-0.1 c-0.2,0-0.4-0.1-0.5-0.2c-0.2-0.1-0.3-0.2-0.4-0.4C226.9,80.4,226.8,80.2,226.8,80.1z M233.2,71.8v10.7h2.1v-4.1 c0-0.6,0.1-1.2,0.4-1.7c0.3-0.4,0.8-0.6,1.3-0.5c0.4,0,0.8,0.1,1.1,0.5c0.2,0.4,0.3,0.9,0.3,1.4v4.4h2.2v-4.8c0-0.4,0-0.9-0.1-1.3 c-0.1-0.4-0.2-0.7-0.4-1c-0.2-0.3-0.5-0.5-0.9-0.6c-0.4-0.2-0.9-0.3-1.4-0.2c-0.4,0-0.8,0.1-1.2,0.3c-0.4,0.2-0.8,0.6-1,1l0,0v-4.1 L233.2,71.8z M244.3,73.6v-1.8h-2.1v1.8H244.3z M242.2,74.8v7.8h2.1v-7.8H242.2z M245.8,78.7c0,0.6,0.1,1.1,0.3,1.7 c0.2,0.5,0.5,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.3,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.6,0,1.1-0.1,1.7-0.3c0.5-0.2,0.9-0.5,1.3-0.8 c0.4-0.4,0.6-0.8,0.8-1.3c0.2-0.5,0.3-1.1,0.3-1.7c0-0.6-0.1-1.2-0.3-1.7c-0.2-0.5-0.5-0.9-0.8-1.3c-0.4-0.4-0.8-0.6-1.3-0.8 c-0.5-0.2-1.1-0.3-1.7-0.3c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.8c-0.4,0.4-0.6,0.8-0.8,1.3 C245.9,77.5,245.8,78.1,245.8,78.7L245.8,78.7z M247.9,78.7c0-0.3,0-0.6,0.1-0.9c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6 c0.3-0.2,0.6-0.2,0.9-0.2c0.3,0,0.6,0.1,0.9,0.2c0.2,0.1,0.4,0.3,0.6,0.6c0.2,0.2,0.3,0.5,0.3,0.8c0.1,0.3,0.1,0.6,0.1,0.9 c0,0.3,0,0.6-0.1,0.9c-0.1,0.3-0.2,0.6-0.3,0.8c-0.1,0.2-0.3,0.4-0.6,0.6c-0.3,0.1-0.6,0.2-0.9,0.2c-0.3,0-0.6-0.1-0.9-0.2 c-0.2-0.1-0.4-0.3-0.6-0.6c-0.2-0.2-0.3-0.5-0.3-0.8C247.9,79.3,247.9,79,247.9,78.7L247.9,78.7z M255.2,74.8v7.8h2.1v-4.1 c0-0.6,0.1-1.2,0.4-1.7c0.3-0.4,0.8-0.6,1.3-0.5c0.4,0,0.8,0.1,1.1,0.5c0.2,0.4,0.3,0.9,0.3,1.4v4.4h2.1v-4.8c0-0.4,0-0.9-0.1-1.3 c-0.1-0.4-0.2-0.7-0.4-1c-0.2-0.3-0.5-0.5-0.9-0.6c-0.4-0.2-0.9-0.3-1.4-0.2c-0.5,0-0.9,0.1-1.3,0.3c-0.4,0.2-0.8,0.6-1,1h0v-1.1 L255.2,74.8z"></path><path class="footrest st5" ng-click="vm.openRecommendation(\'footrest\')" ng-show=false d="M292.4,193h-67.9v-20.2h67.9L292.4,193z M228.8,177v10.7h2.4v-4.4h4.5v-1.8h-4.5V179h5.2v-2L228.8,177z M237.2,183.9c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.5,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.3,0.8c0.5,0.2,1.1,0.3,1.6,0.3 c0.6,0,1.1-0.1,1.7-0.3c0.5-0.2,0.9-0.5,1.3-0.8c0.4-0.4,0.6-0.8,0.8-1.3c0.2-0.5,0.3-1.1,0.3-1.7c0-0.6-0.1-1.1-0.3-1.7 c-0.2-0.5-0.5-0.9-0.8-1.3c-0.4-0.4-0.8-0.6-1.3-0.8c-0.5-0.2-1.1-0.3-1.7-0.3c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.8 c-0.4,0.4-0.6,0.8-0.8,1.3C237.3,182.7,237.2,183.3,237.2,183.9L237.2,183.9z M239.4,183.9c0-0.3,0-0.6,0.1-0.9 c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6c0.3-0.2,0.6-0.2,0.9-0.2c0.3,0,0.6,0.1,0.9,0.2c0.2,0.1,0.4,0.3,0.6,0.6 c0.1,0.2,0.3,0.5,0.3,0.8c0.1,0.3,0.1,0.6,0.1,0.9c0,0.3,0,0.6-0.1,0.9c-0.1,0.3-0.2,0.6-0.3,0.8c-0.1,0.2-0.4,0.4-0.6,0.6 c-0.3,0.1-0.6,0.2-0.9,0.2c-0.3,0-0.6-0.1-0.9-0.2c-0.2-0.1-0.4-0.3-0.6-0.6c-0.1-0.2-0.2-0.5-0.3-0.8 C239.4,184.5,239.3,184.2,239.4,183.9L239.4,183.9z M246.4,183.9c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.5,0.9,0.8,1.3 c0.4,0.4,0.8,0.6,1.3,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.6,0,1.1-0.1,1.7-0.3c0.5-0.2,0.9-0.5,1.3-0.8c0.4-0.4,0.6-0.8,0.8-1.3 c0.2-0.5,0.3-1.1,0.3-1.7c0-0.6-0.1-1.1-0.3-1.7c-0.2-0.5-0.5-0.9-0.8-1.3c-0.4-0.4-0.8-0.6-1.3-0.8c-0.5-0.2-1.1-0.3-1.7-0.3 c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.8c-0.4,0.4-0.6,0.8-0.8,1.3C246.5,182.7,246.4,183.3,246.4,183.9L246.4,183.9z M248.5,183.9c0-0.3,0-0.6,0.1-0.9c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6c0.3-0.2,0.6-0.2,0.9-0.2c0.3,0,0.6,0.1,0.9,0.2 c0.2,0.1,0.4,0.3,0.6,0.6c0.1,0.2,0.2,0.5,0.3,0.8c0.1,0.3,0.1,0.6,0.1,0.9c0,0.3,0,0.6-0.1,0.9c-0.1,0.3-0.2,0.6-0.3,0.8 c-0.1,0.2-0.4,0.4-0.6,0.6c-0.3,0.1-0.6,0.2-0.9,0.2c-0.3,0-0.6-0.1-0.9-0.2c-0.2-0.1-0.4-0.3-0.6-0.6c-0.1-0.2-0.3-0.5-0.3-0.8 C248.5,184.5,248.5,184.2,248.5,183.9L248.5,183.9z M258.5,180v-2.3h-2.1v2.3h-1.3v1.4h1.3v4.6c0,0.3,0,0.7,0.2,1 c0.1,0.2,0.3,0.4,0.5,0.5c0.2,0.1,0.5,0.2,0.8,0.3c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.6h-0.3h-0.4 c-0.4,0.1-0.8-0.1-0.9-0.5c0-0.1,0-0.3,0-0.4v-3.9h1.6V180H258.5z M261.1,180v7.8h2.1v-3.5c0-0.3,0-0.7,0.1-1 c0.1-0.3,0.2-0.6,0.4-0.8c0.2-0.2,0.4-0.4,0.6-0.5c0.3-0.1,0.7-0.2,1-0.2c0.1,0,0.3,0,0.4,0l0.4,0.1v-2c-0.2,0-0.3-0.1-0.5-0.1 c-0.3,0-0.5,0-0.8,0.1c-0.2,0.1-0.5,0.2-0.7,0.3c-0.2,0.1-0.4,0.3-0.6,0.5c-0.2,0.2-0.3,0.4-0.4,0.7l0,0V180H261.1z M268.4,184.4 h5.6c0-0.6,0-1.2-0.1-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3 c-0.5,0.2-0.9,0.5-1.2,0.9c-0.4,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.6c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.4,0.9,0.8,1.3 c0.3,0.4,0.8,0.7,1.2,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.8,0,1.6-0.2,2.2-0.6c0.7-0.5,1.2-1.2,1.4-2H272c-0.1,0.3-0.3,0.5-0.6,0.7 c-0.8,0.5-1.8,0.4-2.5-0.1C268.6,185.5,268.4,184.9,268.4,184.4L268.4,184.4z M271.9,183h-3.5c0-0.2,0-0.3,0.1-0.5 c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.9-0.2c0.4,0,0.9,0.1,1.2,0.4 C271.7,182.1,271.8,182.6,271.9,183L271.9,183z M276.9,185.2h-2c0,0.9,0.4,1.7,1.2,2.1c0.4,0.2,0.7,0.4,1.1,0.5 c0.4,0.1,0.9,0.2,1.3,0.2c0.4,0,0.9,0,1.3-0.1c0.4-0.1,0.8-0.2,1.1-0.4c0.3-0.2,0.6-0.5,0.8-0.8c0.2-0.4,0.3-0.8,0.3-1.3 c0-0.3-0.1-0.6-0.2-0.9c-0.1-0.2-0.3-0.5-0.6-0.6c-0.2-0.2-0.5-0.3-0.8-0.4c-0.3-0.1-0.6-0.2-0.9-0.2l-0.9-0.2 c-0.3,0-0.5-0.1-0.8-0.2c-0.2-0.1-0.4-0.2-0.5-0.3c-0.1-0.1-0.2-0.3-0.2-0.5c0-0.1,0-0.3,0.1-0.4c0.1-0.1,0.2-0.2,0.3-0.2 c0.1-0.1,0.3-0.1,0.4-0.1h0.4c0.3,0,0.7,0.1,1,0.2c0.3,0.2,0.5,0.5,0.5,0.8h2c0-0.4-0.1-0.8-0.4-1.2c-0.2-0.3-0.5-0.6-0.8-0.8 c-0.3-0.2-0.7-0.3-1.1-0.4c-0.4-0.1-0.8-0.1-1.2-0.1c-0.4,0-0.8,0-1.2,0.1c-0.4,0.1-0.7,0.2-1.1,0.4c-0.3,0.2-0.6,0.4-0.8,0.8 c-0.2,0.4-0.3,0.8-0.3,1.2c0,0.3,0.1,0.6,0.2,0.9c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.2,0.5,0.3,0.8,0.4c0.3,0.1,0.6,0.2,0.9,0.2 c0.6,0.1,1.2,0.3,1.8,0.5c0.4,0.2,0.6,0.4,0.6,0.7c0,0.2,0,0.3-0.1,0.5c-0.1,0.1-0.2,0.2-0.3,0.3c-0.1,0.1-0.3,0.1-0.5,0.2 c-0.2,0-0.3,0.1-0.5,0.1c-0.2,0-0.4,0-0.6-0.1c-0.2,0-0.4-0.1-0.5-0.2c-0.1-0.1-0.3-0.2-0.4-0.4 C276.9,185.7,276.9,185.4,276.9,185.2L276.9,185.2z M286,180v-2.3h-2.1v2.3h-1.3v1.4h1.3v4.6c0,0.3,0,0.7,0.2,1 c0.1,0.2,0.3,0.4,0.5,0.5c0.2,0.1,0.5,0.2,0.8,0.3c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.6h-0.3H287 c-0.4,0.1-0.8-0.1-0.9-0.5c0-0.1,0-0.3,0-0.4v-3.9h1.6V180H286z"></path></svg>');
$templateCache.put('usewchair/element/contents/assessment-summary.html','<ion-view title=Summary><ion-content class="usewchair content assessment-summary" padding=true><h3><strong>Recommendations</strong></h3><p>If you\u2019d like to improve certain components on your wheelchair, you should consult your physical therapist, occupational therapist, and/or the representative of the Medical Equipment Company with <a href ng-click="openInBrowser(\'ttp://www.resna.org/member-directory/individual\', \'_blank\')">ATP certification</a> for more detailed information about available products. Here are some recommendations based on your answers in the self-assessment:</p><br><ul class=bullet-point><li>You will need different <a ng-click="navigateTo(\'main.usewheelchair.skills.skill.page\', { name: \'Forward\'})">wheelchair skills to drive a power wheelchair of different bases</a>. If you feel that you run into the same problems repeatedly when driving your power wheelchair, you should consult your PT or OT to see whether you need training of certain wheelchair skills or need some adjustment in your controller settings.</li><li ng-if="vm.componentQAnswer[2] == 7">Power seating functions can help you manage some health issues and assist with daily activities. If you believe that power seating function(s) is beneficial for you, you should consult your PT or OT and receive an assessment.</li><li ng-if="vm.componentQAnswer[4] == 1">If your backrest is sagging, you may want to consider replacing it with a <a ng-click="navigateTo(\'main.usewheelchair.components.component.page\', { name: \'backrest-soft\'})">tension-adjustable backrest</a> or a <a ng-click="navigateTo(\'main.usewheelchair.components.component.page\', { name: \'backrest-rigid\'})">rigid backrest</a> in order to provide better support for your posture.</li><li ng-if="vm.componentQAnswer[5] == 3">If your armrests get in your way when you transfer out of your wheelchair, you may want to change to the armrests that are removable or can be flipped up. Please consult your physical therapist or occupational therapist.</li><li ng-if="vm.componentQAnswer[7] == 1">If your feet are swelling after sitting in the wheelchair for a few hours, you may need footrests that can elevate your feet. Please consult your physical therapist or occupational therapist.</li><li ng-if="vm.componentQAnswer[8] != 7">If you are bothered by recurrent pressure sores or pain over your buttocks, you should contact your physical therapist or occupational therapist to receive a wheelchair evaluation that includes a <a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'cushion\'})">pressure mapping assessment</a> to determine the best course of action to relieve pressure (e.g., adjustments in your wheelchair to improve your position, ordering a new pressure relieving cushion, education on pressure relief maneuvers).</li><li ng-if="vm.componentQAnswer[8] == 7">You should sit on a wheelchair cushion to protect your skin. Even if you are not at risk of developing pressure sores, a wheelchair cushion can improve seating comfort and stability. You should contact your physical therapist or occupational therapist to receive a wheelchair evaluation that includes a <strong>pressure mapping assessment</strong> to select a wheelchair cushion that suits your needs.</li><li ng-if="vm.componentQAnswer[9] != 9">If you feel that your <strong>positioning accessories</strong> interfere with or do not properly support your posture, you should contact your physical therapist or occupational therapist for a wheelchair evaluation. They can help you figure out the problems with the positioning accessories and make adjustments or work with a representative of the Medical Equipment Company to order new or replacement parts.</li><li ng-if="vm.componentQAnswer[9] == 9">If you feel that your head, trunk, or legs are not stable in your wheelchair, <strong>positioning accessories</strong> may be helpful for you. You should contact your physical therapist or occupational therapist to receive an assessment to figure out the problem and select appropriate positioning accessories.</li><li ng-if="vm.componentQAnswer[11] == 1">If your controller gets in your way while you try to get closer to a table, you may want to change to a controller mount that is retractable or can be swung away. Please consult the representative of the Medical Equipment Company for more options and product details.</li><li ng-if="vm.componentQAnswer[13] == 4">If you own a vehicle for transportation, you should invest a <strong>vehicle securement system</strong> to ensure the stability and safety while riding the vehicle. Please consult the representative of the accessible vehicle companies for options and more details.</li></ul><p>If you want to purchase new component(s) and pursue reimbursement from your private or public health insurance or public funding resources, you would need to obtain a script from your physician for a wheelchair evaluation from a physical or occupational therapist who, ideally, is a certified <a href ng-click="openInBrowser(\'ttp://www.resna.org/member-directory/individual\', \'_blank\')">Assistive Technology Practitioner</a> (ATP). He or she can work with your wheelchair supplier and you PM&R physician or primary care physician to provide the insurance company with justification documentation detailing your needs for the wheelchair. Wheelchair suppliers can provide you with more detailed information about the product (s) and arrange trial sessions so that you feel confident that you are selecting an appropriate device.</p></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/assessment.html','<ion-view title=Assessment><ion-content class="usewchair content questionnaire" padding=true><ion-slide-box class=question-slider dynamic-height show-pager=false delegate-handle=outerSlideBox ng-init="list = {}"><ion-slide class ng-repeat="page in vm.pages"><h4 class=qq-question ng-repeat-start="question in page" ng-init="question.list = question.deserializeMultiValueFn(question.checks, vm.componentQAnswer[question.id])" ng-click="navigateTo(question.state, question.params)" ng-if="(question.id <= 10) || (question.id == 11 && vm.componentQAnswer[10] == 1) || (question.id == 12 && vm.componentQAnswer[10] == 2) || (question.id == 13 && vm.componentQAnswer[10] == 2)"><span class=qnumber>{{question.id}}.</span> <span class=title style="font-size: inherit" ng-bind-html=question.text></span></h4><div class=qq-answer ng-repeat-end style="margin-bottom: 10px" ng-if="(question.id <= 10) || (question.id == 11 && vm.componentQAnswer[10] == 1) || (question.id == 12 && vm.componentQAnswer[10] == 2) || (question.id == 13 && vm.componentQAnswer[10] == 2)"><ion-radio ng-if="question.options != null" name=Q{{question.id}} ng-model=vm.componentQAnswer[question.id] ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="question.checks != null" ng-repeat="item in question.list" ng-value=item.text ng-model=item.checked ng-change="vm.onChangeCheckbox(question, item)">{{ item.text }}</ion-checkbox></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class="bar-positive bar-pager"><div class=buttons ng-click=vm.prevPage() ng-hide="vm.currentIndex==0"><button class="button button-icon my-icon-mwg_d_arrow_01"></button></div><h1 class=title style="text-align: center">{{vm.currentIndex+1}} of {{vm.questionsTotal}}</h1><div class=buttons><button class="button button-icon my-icon-mwg_d_arrow_02" ng-show="vm.currentIndex+1 != vm.questionsTotal" ng-click=vm.nextPage()></button> <button class=button ng-show="vm.currentIndex+1 == vm.questionsTotal" ng-click=vm.finish()>Finish</button></div></ion-footer-bar></ion-view>');
$templateCache.put('usewchair/element/contents/components-accessories-headrest.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/acc/headrest-v2.gif></div><ion-scroll class=description><ul class=bullet-point><li>Depending on the user\'s head control and wheelchair features, some individuals may need additional support to properly position the head and neck.</li><li>Headrests come in many different shapes, sizes, and padding. Consult with your health care professional</li><li>Need to be cautious about the pressure points in areas of contact to prevent pressure injuries.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-accessories-hip.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/acc/acc_hip.png></div><ion-scroll class=description><ul class=bullet-point><li>Hip guides can help to:<ul><li>Maintain proper hip alignment</li><li>Stabilize the pelvis and hence improve sitting stability</li></ul></li><li>It is important to be mindful of pressure points on hips and thighs</li><li>Hardware can be fixed, removable or flipped down depending on your transfer needs</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-accessories-lap.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/acc/acc_lap.png></div><ion-scroll class=description><ul class=bullet-point><li>Some individuals may need additional lower limb support depending on paralysis, spasticity, and alignment</li><li>Lower limb support options include calf straps, shoe holders, heel loops and ankle straps</li><li>Consider padded straps and be mindful of circulation and skin pressure concerns</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-accessories-trunk.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/acc/acc_trunk.gif></div><ion-scroll class=description><ul class=bullet-point><li>Some individuals may need additional supports to maintain the trunk in an upright positioning.</li><li>Options include lateral supports, chest straps, and harness</li><li>It is important to be mindful of pressure points</li><li>Consult with your healthcare professional regarding your specific support and functional needs</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-armrest-removable.html','<ion-view title=Armrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/armrest/armrest_remove.png></div><ion-scroll class=description><ul class=bullet-point><li>Comes in different lengths and widths</li><li>Easy to flip up for side to side transfers</li><li>Easy to flip up for environmental access including tables and desks</li><li>Typically locks in place for stability in the down position</li><li>Can incorporate different width and types of armpad materials (gel and foam)</li><li>Typically has a built-in side panel to assist as a guide with pelvic positioning</li><li>Be mindful of pressure on the bottom</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-armrest-up.html','<ion-view title=Armrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/armrest/armrest_flip.png></div><ion-scroll class=description><ul class=bullet-point><li>Comes in different lengths and depths</li><li>Easy to flip up for side to side transfers</li><li>Easy to flip up for environmental access including tables and desks</li><li>Requires users to maintain good trunk control when armrests are flipped up</li><li>Some designs may not lock it in place for stability in down position</li><li>Can incorporate different width and types of armpad materials (gel and foam)</li><li>Depending on manufacturer - may not be removable</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-backrest-rigid.html','<ion-view title=Backrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/backrest/backrest_rigid.png></div><ion-scroll class=description><ul class=bullet-point><li>Provides good torso support</li><li>Allows limited torso movement</li><li>Not adjustable</li><li>Additional foam pads can be inserted or a molded back cushion can be installed to accommodate individual needs</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-backrest-soft.html','<ion-view title=Backrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/backrest/backrest_soft.gif></div><ion-scroll class=description><ul class=bullet-point><li>Includes two types: sling and tension-adjustabl</li><li>Sling backrest is a piece of flat upholstery and its curve cannot be adjusted</li><li>Tension-adjustable backrest has Velcro straps that can be tightened to adjust the curve, which can accommodate various shapes and curves of the torso</li><li>Soft backrests allow more torso movements, but tends to sag after use and provides less torso support</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-bases-front-fishtail.modal.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Fishtail</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul><li>Fishtailing is a problem which occurs when the rear wheels lose traction,resulting in oversteer. This can be causedby low friction surfaces.</li><li>The problem could be resolved by slowing down the wheelchair.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-bases-front.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/bases/front.jpg></div><ion-scroll class=description><ul class=bullet-point><li>Named front-wheel-drive because the driving wheels are at the front of the base</li><li>Best to overcome obstacles with drive wheels in front</li><li>Good shock absorption and smooth rides due to independent suspension</li><li>Moderate overall turning radius, tightest front turning radius</li><li>Increased drive awareness of back of chair when maneuvering</li><li>Tends to <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-bases-front-fishtail.modal.html\')">fishtail</a> <img src=images/use/components/Power-Wheelchair-Fish-Tailing.gif style="max-height: 50px; max-width: 40px;"> at high speeds without tracking technology</li><li>When descending steep ramp, may tip forward on front anti-tip wheels</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-bases-mid-wheel.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Mid Wheel</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h2>Mid-wheel drive being caught at the bottom of a ramp:</h2><div class=image-container><img style="width: 100%; max-width: 400px;" src=images/power/components/bases/mid_wheel_drive_stuck_on_ramp.jpg></div><ul><li>The drive wheels are lifted when the front casters are on the ground but the rear casters are still on the ramp. This condition causes a mid-wheel drive wheelchair to lose traction and stop moving.</li><li>This problem could be prevented if you approach the bottom at an angle</li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-bases-mid.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/bases/mid.jpg></div><ion-scroll class=description><ul class=bullet-point><li>Named mid-wheel-drive because the driving wheels are in the middle of the base</li><li>Intuitive to drive</li><li>Smallest overall turning radius, moderate front turning radius</li><li>Ability to overcome obstacles may be limited by front caster size</li><li>May be a bumpy ride at high speeds on uneven surfaces</li><li>Some models can be <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-bases-mid-wheel.html\')">caught at the bottom of a ramp</a> with drive wheels being lifted and losing traction</li><li>Front casters may interfere with transfers</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-bases-rear.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/bases/rear.jpg></div><ion-scroll class=description><ul class=bullet-point><li>Named rear-wheel-drive because the driving wheels are at the rear of the base</li><li>Best visibility of environment when driving</li><li>When ascending steep ramp, may tip back on front anti-tip wheels</li><li>Perform well at high speeds</li><li>Good ability to overcome obstacles</li><li>Limited ability to overcome obstacles</li><li>Front casters may interfere with transfers</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-bases-summary.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><table id=bases-summary rules=all border=5><thead><tr><th rowspan=2 width=30%></th><th colspan=3>Base Summary</th></tr><tr><th width=23.33%>Front</th><th width=23.33%>Mid</th><th width=23.33%>Rear</th></tr></thead><tbody><tr><th>Obstacle Climbing</th><td>Best</td><td>Limited</td><td>Limited</td></tr><tr><th>Turning Radius</th><td>Small</td><td>Smallest</td><td>Large</td></tr><tr><th>Stability on Inclines</th><td>Fair</td><td>Best</td><td>Good</td></tr><tr><th>Shock Absorption</th><td>Good</td><td>Limited</td><td>Good</td></tr><tr><th>Learning Curves</th><td>Difficult</td><td>Easy</td><td>Easy</td></tr></tbody></table></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-controller-alternatives.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div id=grid class=image-container style="height: 30vh; padding: 0px;"><div class=img style="height: 100%; width: 100%"><img src=images/power/components/controller/alternative-control-v2.gif></div></div><ion-scroll class=description><ul class=bullet-point><li>Alternative controls allow you to operate your wheelchair other than using your hand</li><li>Your physical and/or therapist will assess your motor function and find the body part with the most reliable movements for the control interface</li><li>Switches, sip and puff, chin control, and head arrays are just a few examples</li><li>Please consult with your physical or occupational therapist to find the best control for you</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-controller-joystick-retractable.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Retractable mount</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/controller-mount-retractable_v2.gif></div><ion-scroll class=description><ul class=bullet-point><li>Retractable mount adds relatively smaller width to the wheelchair</li><li>It enables ease of transfer and allows the userto be closer to counter top when the controlleris in a retracted position</li><li>It allows the user to drive the wheelchair when the controller is in the retracted position</li><li>The mountis relatively heavierthan the swing-away mount</li></ul></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-joystick-swing-away.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Swing-away mount</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/controller-mount-swing-away_v2.gif></div><ion-scroll class=description><ul class=bullet-point><li>Swing-away mount is light-weight and simple</li><li>It enables ease of transfer and allows the user to be closer to counter top when the controller is swung away</li><li>It adds to the width of the wheelchair when is swung out</li><li>It is difficult to drive the wheelchair when the controller is swung out</li></ul></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-joystick-swung.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Swung-away Mechanism</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>Swung-away mechanism is light-weight and simple.</li><li>It enables ease of transfer and allows user to be closer to counter top when controller is in swung-away position.</li><li>It adds to the width of the wheelchair in swung-away position.</li><li>It is difficult for the user to drive the wheelchair when the controller is in swung-away position.</li></ul><h1 class=title>Retractable Mount</h1><ul class=bullet-point><li>Retractable mount adds relatively smaller width to the wheelchair.</li><li>It enables ease of transfer and allows user to be closer to counter top when controller is in a retracted position.</li><li>It allows the user to drive the wheelchair when the controller is in the swung-away position.</li><li>The mount is relatively heavier.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-joystick-type.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Types of handles</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div id=grid style="position: relative;left: 25%;top: 30%"><div class=img><img src=images/power/components/controller/joystick-handles-slides_v2.gif "></div></div></ion-content></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-joystick.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/controller/controller_joy.png></div><ion-scroll class=description><ul class=bullet-point><li>Control wheelchair direction, speed, power seat functions, and braking</li><li>Can have various <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-joystick-type.html\')">types of handles</a> to provide users with limited hand functions reliable support and access to the controller</li><li>Can have fixed, <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-joystick-swing-away.html\')">swing-away</a>, and <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-joystick-retractable.html\')">retractable</a> mounts</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-exp.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Expandable Controller</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/Expandible_Controller.png></div><ion-scroll class=description><p>Besides the speed and direction of the wheelchair, it can control three or more power seating actuators, and can work with both proportional and non-proportional control interface.</p></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-limb.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Limb Position</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class="content-frame padding"><p>If you use your hand to control a joystick (proportional control interface) to drive a wheelchair, you need to be able to sense your hand position in order to move the joystick to the proper direction and position. If you use your foot to move a trackball to drive a wheelchair, you need to be able to sense your foot position in order to properly move the trackball.</p></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-nexp.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Non-Expandable Controller</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/non_expandable_controller-3.png></div><ion-scroll class=description><p>It can control the speed and direction of the wheelchair, and up to two power seating actuators for changing seating angles (tilt, recline, or elevating legrests), and only works with proportional joysticks</p></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-nonprop.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Non-Proportional Control Interface</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/switch.png></div><ion-scroll class=description><ul class=bullet-point><li>The wheelchair moves with a constant speed after the user presses a button or hits a switch briefly.</li><li>Switches accessed by hand or foot, sip and puff, and head movements are non-proportional control.</li></ul></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-nprg.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Non-Programmable Controller</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/non_expandable_controller-3.png></div><ion-scroll class=description><p>It typically comes with low-cost power wheelchairs. The driving performance of the wheelchair such as its forward speed and turning speed, is set by manufacturers and cannot be customized.</p></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-prg.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Programmable Controller</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/programmable.png></div><ion-scroll class=description><ul class=bullet-point><li>It can adjust <a href ng-click="page.close();navigateTo(\'main.usewheelchair.fit.features.page\', {name: \'programming\'})">various parameters</a> for individual needs and preferences, such as the torque, acceleration, deceleration, and input filter parameters for tremor suppression, etc.</li><li>If you have complicated motor and sensory problems, you will need custom parameters in your controller. The Medical Equipment Company representatives can use a programmer to adjust these parameters.</li></ul></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types-prop.html','<ion-modal-view class=info-page><ion-view class="usewchair content has-content-bar"><ion-header-bar class=bar-positive><h1 class=title>Proportional control interface</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=content-frame padding=true><div class=image-container><img src=images/power/components/controller/controller.png></div><ion-scroll class=description><ul class=bullet-point><li>Joystick control is a typical proportional control interface. The speed of the wheelchair is proportionally increased as the joystick being moved away from the center or the original position.</li><li>Trackballs, and head arrays are also proportional control.</li><li>The user needs to acquire a certain amount of joint mobility, strength, dexterity, and sense of <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-limb.html\')">limb position</a> to efficiently use a proportional control.</li></ul></ion-scroll></ion-content></ion-view></ion-modal-view>');
$templateCache.put('usewchair/element/contents/components-controller-types.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/controller/Multiple_Controllers.png></div><ion-scroll class=description><p>Controllers can be categorized based on their functions and level of complexity:</p><ul class=bullet-point><li><a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-prop.html\')">Proportional</a> or <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-nonprop.html\')">Non-proportional</a></li><li><a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-exp.html\')">Expandable</a> or <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-nexp.html\')">Non-expandable</a></li><li><a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-prg.html\')">Programmable</a> or <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-nprg.html\')">Non-programmable</a></li></ul><p>The type of your wheelchair controller will be decided based on your health needs concluded from the <a href ng-click="getStaticModalPage(\'../../../../../views/modals/info/wheelchair_evaluation.html\')">Wheelchair Evaluation</a>.</p></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-cushion-air.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/cushion/cushion_air.gif></div><ion-scroll class=description><ul class=bullet-point><li>Includes two types: <b>air foam</b> and <b>air capsule</b>. An air cushion can either be completely 100% air contained in capsules or combined with foam components. The air component is adjustable to match each individuals specific needs</li><li>All air cushions require inflation adjustment for the best pressure redistribution and ideal support. Take caution to avoid over or under inflation of the air cushion. It is important to read the owners manual for optimal air cushion operation</li><li>Needs daily maintenance to check air inflation</li><li>Air foam is a piece of foam wrapped tightly in an airtight and water resistant cover. It is lightweight, has good ability to redistribute pressure, and provides good support</li><li>Before sitting on an air foam cushion, open the valve to inflate it and then close the valve. When sitting on it, open the valve to release air to allow your hips to immerse into the cushion while the foam conforms to your buttocks. Close the valve when your buttocks settle into the cushion. It keeps the contour for the day, but needs to be inflated each night to maintain the optimal performance of the foam- open the valve and leave it open over night to let air flow back in.</li><li>Air capsule cushion moves air through all of the capsules. It has a great ability to redistribute pressure. Its contour changes as you shift your weight, which could reduce sitting stability. It can have over- or under- inflated situations, and thus requires regular maintenance</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-cushion-capsules.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/cushion/cushion_cap.png></div><ion-scroll class=description><ul class=bullet-point><li>Custom molded to the individual\'s body curves</li><li>Accommodates and supports fixed alignment deformities, like fixed scoliosis or uneven pelvis</li><li>Distributes pressure for skin health</li><li>More difficult for transfer</li><li>The curves interfere with dynamic posture change</li><li>Adds additional weight to the wheelchair</li><li>Limited ability to accommodate growth of the individual</li><li>For use with all power seat functions (tilt, recline, and seat elevation). However, the contours of the seating system may limit how much recline angle can be used.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-cushion-contoured.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/cushion/cushion_foam.gif></div><ion-scroll class=description><ul class=bullet-point><li>Includes two types: <b>standard form</b> and <b>contoured foam</b></li><li>Standard foam is a piece of flat foam that it is inexpensive, has little ability to provide support and redistribute pressure and wears out quickly</li><li>A Contoured foam cushion is a piece of foam or more often a combination of different layers of foam that often is a pre-set shape to typical anatomy. The contour can be ajdusted by removing or adding components or pieces of foam to meet a person\'s individual needs. Can provide good pelvic and lower body support. Contours can assist with pressure distribution</li><li>May compress in height over time</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-cushion-gel.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/cushion/cushion_gel.png></div><ion-scroll class=description><ul class=bullet-point><li>A <b>Gel cushion</b> distributes pressure using gel-filled pouches or overlays that are often attached to a foam base for stability</li><li>Has a good ability to redistribute pressure</li><li>Gel pouches are often attached to a foam base to support sitting stability</li><li>Needs daily maintenance of \u201Ckneading\u201D to redistribute the gel evenly to allow hips to immerse into the cushion and not to sink down to the bottom of the cushion</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-footrest-away.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/footrest/fr_swing.png></div><ion-scroll class=description><ul class=bullet-point><li>Swing-away legrests could incorporate power or manual elevating feature to allow legrest angle adjustment</li><li>Easy for transfers such as sit-to-stand, standing pivot, attendant assisted, and transfers using a swivel board</li><li>Increase wheelchair length and turning radius</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-footrest-center.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/footrest/footrest_center.png></div><ion-scroll class=description><ul class=bullet-point><li>Some <b>center-mount footrests</b> are fixed, and some have power elevating feature, depending on the wheelchair make and model</li><li>Require less space for storage when the wheelchair is not occupied</li><li>Turning radius is smaller</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-footrest-elevating.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/footrest/footrest_power.png></div><ion-scroll class=description><ul class=bullet-point><li>Legrests can be operated using a power actuator on most wheelchair models; a manual option may be available</li><li>A manual elevating legrest would typically require another person to operate</li><li>Elevating legrests are beneficial:<ul class=bullet-point><li>To assist with management of leg edema (swelling)<ul class=bullet-point><li>When you use tilt and recline and add the elevating legrest, you can elevate your legs above your heart for optimal edema management</li></ul></li><li>Are necessary to accommodate leg range of motion limitations including temporary situations like a cast or brace</li><li>Can help with environmental access including by managing ground clearance with steeper ramps and curb cuts</li><li>Can assist with management of tone in legs</li></ul></li><li>Caution: If you have tight hamstrings, it is important to open your hip angle with recline before using the elevating legrest</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=left><button class="button button-icon ion-arrow-return-left" ng-click=vm.goBack()></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('usewchair/element/contents/components-psf-elevation.html','<ion-view title="Seat Function" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/psf/elevation.gif></div><ion-scroll class=description><ul class=bullet-point><li>Assist with daily activities (e.g., reaching, transfers, and working at surfaces of various heights)</li><li>Overhead reaching can cause shoulder issues. Raising you up can reduce overhead reaching</li><li>Achieve eye-contact and facilitate social interaction</li><li>Can reduce neck strain with functional activities</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-psf-recline.html','<ion-view title="Seat Function" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/psf/recline.gif></div><ion-scroll class=description><ul class=bullet-point><li>Provides pressure redistribution</li><li>A combination of both posterior tilt in space and recline can provide the best level of pressure redistribution</li><li>Can accommodate limited hip flexion range of motion</li><li>Allow users to lie down when used with elevating legrests</li><li>Increase sitting tolerance and comfort</li><li>Can assist with daily activities including dressing and catheterization</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-psf-standing.html','<ion-view title="Seat Function" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/psf/standing.gif></div><ion-scroll class=description><ul class=bullet-point><li>May improve health conditions by<ul class=bullet-point><li>Assisting with bladder emptying and bowel function</li><li>Increase or maintain bone density</li><li>Improving circulation</li><li>Provide pressure redistribution</li><li>Maintaining joint movement</li></ul></li><li>Achieve eye-contact and facilitate social interaction</li><li>Improve access to work station and other surfaces for daily activities</li><li>It is important to discuss with your medical doctor to determine if a standing device is right for you</li><li>Some general requirements include:<ul class=bullet-point><li>Good bone density for weight bearing</li><li>Ability to maintain stable blood pressure and circulation in standing positions</li><li>Sufficient range of motion in hips, knees, and ankles to be positioned in standing</li><li>Good skin condition (less prone to shear forces when switching positions between sitting and standing)</li></ul></li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-psf-tilt.html','<ion-view title="Seat Function" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/psf/tilt-alternative-600x400.gif style="max-height: 100%"></div><ion-scroll class=description><h4>Posterior Tilt-in-Space</h4><ul class=bullet-point><li>Provides pressure redistribution</li><li>Increase sitting tolerance and comfort</li><li>Increase postural stability and balance</li></ul><h4>Anterior Tilt-in-Space</h4><ul class=bullet-point><li>Assist with forward reach</li><li>Assist with transfer for those with reduced lower extremity strength</li><li>May assist you to access your environment. Consult with your health care professional for your specific needs</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-securements-docking.html','<ion-view title=Securements class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/sec/sec_docking.png></div><ion-scroll class=description><ul class=bullet-point><li>A <b>Docking System</b> secures a wheelchair with a docking pin installed underneath the wheelchair, which can be locked in the docking base installed on the vehicle floor.</li><li>It has a few advantages:<ul><li>Provides independent automatic securement and disengagement.</li><li>Quick securement time.</li><li>Minimizes error in securement process.</li><li>Safely withstands crash forces.</li></ul></li><li>Need to be cautious about a few aspects about it:<ul><li>Requires additional wheelchair hardware.</li><li>May not be compatible with certain wheelchair models. Need to check with the Medical Equipment Company representative.</li><li>Docking hardware may affect ground clearance.</li><li>Need to practice wheelchair driving to align the pin with the docking base.</li></ul></li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-securements-four.html','<ion-view title=Securements class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/sec/sec_four.png></div><ion-scroll class=description><ul class=bullet-point><li>A <b>Four-point Tie Down System</b> secures a wheelchair at four securement points and tie them down to the vehicle at four separate anchor points.</li><li>It has a few advantages:<ul><li>Capable of withstanding crash forces and improve crash response and stability.</li><li>Adaptable to most wheelchair types without additional wheelchair hardware required.</li></ul></li><li>Need to be cautious about a few aspects about it:<ul><li>Lengthy securement time.</li><li>Requires assistance from others.</li><li>Tie down straps are easily misplaced or soiled.</li><li>Some wheelchair models have rings on the frame to attach the tie down system. When there are no rings on the frame to show clear strap attachment locations, the risk of ineffective securement increases.</li></ul></li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-tire-pneumatic.html','<ion-view title=Tire class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/tire/tire_pneumatic.png></div><ion-scroll class=description><ul class=bullet-point><li>Provides good shock absorption and smooth rides</li><li>Requires weekly maintenance to check and maintain tire pressure</li><li>Risk of puncture</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/components-tire-solid.html','<ion-view title=Tire class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/tire/tire_solid.png></div><ion-scroll class=description><ul class=bullet-point><li>No need for weekly maintenance</li><li>Requires monthly check for wear and tear</li><li>Can be gel or foam filled and casters are primarily polyurethane material</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/main.html','<ion-view title=\'<i class="icon my-icon-mwg_09_elements"></i> Elements\'><ion-content class="usewchair content" padding=true><div class=main-frame><div class=parts><div class=btn-go ng-hide=!vm.selected ng-click=vm.openGroup(vm.selected.children[0])><i class="icon my-icon-mwg_h_go03"></i></div><ng-include src="\'usewchair/element/contents/main.map.html\'"></ng-include></div><div class=groups><ul class=list-groups><li class=btn-menu ng-class="{selected: vm.selected.title == section.title}" ng-repeat="section in vm.navData" ng-click=vm.selectGroup(section)>{{::section.title}}</li></ul></div></div><div class="list button-style"><div class="item item-icon-left yellow" ng-click="navigateTo(\'.assessment\')"><i class="icon my-icon-mwg_16_activities"></i><div class="title bold">Self Assessment</div></div><div class="item item-icon-left primary" ng-click="navigateTo(\'.summary\')"><i class="icon my-icon-mwg_e_clipboard"></i><div class="title bold">Summary</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/element/contents/main.map.html','<?xml version="1.0" encoding="utf-8"?><svg version=1.1 id=Layer_1 x=0px y=0px viewbox="0 0 216 216" style="enable-background:new 0 0 216 216;" xmlns=http://www.w3.org/2000/svg><style type=text/css>\n\t.st0{fill:#FFFFFF;stroke:#231F20;stroke-width:0.1905;stroke-miterlimit:10;}\n\t.st1{fill:none;}\n\t.st2{fill:#ED1C24;stroke:#000000;stroke-width:0.3005;stroke-miterlimit:10;}\n    .selected { fill: #D72328 }\n</style><path class=st0 d="M174.6,187.3L174.6,187.3c-1.7,0-3-1.4-3-3v-11c0-1.7,1.4-3,3-3l0,0c1.7,0,3,1.4,3,3v11 C177.6,185.9,176.3,187.3,174.6,187.3z"></path><path class=st0 d="M156.2,178.6L156.2,178.6c-0.9-2.2,0.1-4.7,2.3-5.6l14.3-6c2.2-0.9,4.7,0.1,5.6,2.3l0,0 c0.9,2.2-0.1,4.7-2.3,5.6l-14.3,6C159.7,181.8,157.1,180.8,156.2,178.6z"></path><path class=st0 d="M148.3,65.2L148.3,65.2c1.3,0,2.4,1.1,2.4,2.4v57.8c0,1.3-1.1,2.4-2.4,2.4l0,0c-1.3,0-2.4-1.1-2.4-2.4V67.6 C145.9,66.3,147,65.2,148.3,65.2z"></path><path class=st0 d="M68.4,183.3L68.4,183.3c-2.1-2.9-1.5-7,1.4-9.2L89,159.9c2.9-2.1,7-1.5,9.2,1.4l0,0c2.1,2.9,1.5,7-1.4,9.2 l-19.2,11.1C74.7,183.7,70.6,186.2,68.4,183.3z"></path><path class=st0 d="M91.7,91.4H78.1c-0.3,0-0.6-0.3-0.6-0.6l0,0c0-0.3,0.3-0.6,0.6-0.6h13.6c0.3,0,0.6,0.3,0.6,0.6l0,0 C92.2,91.2,92,91.4,91.7,91.4z"></path><path class=st0 d="M91.2,94.9L91.2,94.9c-0.6,0-1-0.5-1-1v-5.5c0-0.6,0.5-1,1-1h0c0.6,0,1,0.5,1,1v5.5 C92.2,94.4,91.8,94.9,91.2,94.9z"></path><g class="base st0" ng-class="{selected: vm.selected.title == \'Bases\'}"><path d="M152.5,181.2H95c-4,0-7.3-3.3-7.3-7.3v-18.6c0-4,3.3-7.3,7.3-7.3h57.5c4,0,7.3,3.3,7.3,7.3v18.6 C159.9,177.9,156.6,181.2,152.5,181.2z"></path><rect x=135.9 y=138.2 width=6.9 height=9.7></rect><rect x=104.6 y=138.2 transform="matrix(-1 4.496080e-11 -4.496080e-11 -1 216.0188 286.172)" width=6.9 height=9.7></rect></g><g class="seat st0" ng-class="{selected: vm.selected.title == \'Seat\'}"><path d="M92.9,138.2l61.7,2c2.9,0,5.2-4.4,5.2-7.2v0c0-2.9-2.3-5.2-5.2-5.2H92.9c-2.9,0-5.2,2.3-5.2,5.2v0 C87.7,135.9,90.1,138.2,92.9,138.2z"></path><path d="M82.9,127.8h64.8c1.6,0,2.9-1.3,2.9-2.9v0c0-1.6-1.3-2.9-2.9-2.9H82.9c-1.6,0-2.9,1.3-2.9,2.9v0 C80,126.5,81.3,127.8,82.9,127.8z"></path></g><g class="tire st0" ng-class="{selected: vm.selected.title == \'Tire\'}"><circle cx=174.5 cy=184.8 r=7.6></circle><circle class=st0 cx=174.5 cy=184.8 r=4.8></circle><circle cx=71.2 cy=181.3 r=11.1></circle><circle class=st0 cx=71.2 cy=181.3 r=7.1></circle><circle cx=123.7 cy=170.2 r=22.2></circle><circle class=st0 cx=123.7 cy=170.2 r=14.2></circle></g><g class="footrest st0" ng-class="{selected: vm.selected.title == \'Footrest\' || vm.selected.title == \'Footrest/Legrest\'}"><path d="M80.9,122.4l-30.4,30.4c-1,1-1,2.6,0,3.5l0.6,0.6c1,1,2.6,1,3.5,0L85,126.5c1-1,1-2.6,0-3.5l-0.6-0.6 C83.4,121.4,81.8,121.4,80.9,122.4z"></path><path d="M30,153.7l22.6-2.5c0.9,0,1.6,3.3,1.6,4.2l0,0c0,0.9-0.7,1.6-1.6,1.6H30c-0.9,0-1.6-0.7-1.6-1.6l0,0 C28.4,154.4,29.1,153.7,30,153.7z"></path></g><g class="cushion st0" ng-class="{selected: vm.selected.title == \'Cushion\'}"><path d="M141.1,108.9c0,0-23.2,1.1-33-2.5s-17.1-1.3-17.1-1.3c-3.6,0-6.5,6.7-6.5,10.3v0c0,3.6,2.9,6.5,6.5,6.5h50.1 c3.6,0,6.5-2.9,6.5-6.5v0C147.6,111.9,144.6,108.9,141.1,108.9z"></path></g><g class="backrest st0" ng-class="{selected: vm.selected.title == \'Backrest\'}"><path class d="M140.1,34.8h1.3c4,0,4.5,3.3,4.5,7.3v56.7c0,4-3.3,10.1-7.3,10.1c0,0-24-3.1-5.9-48.7 c2.1-8.6,0.1-18.2,0.1-18.2C132.8,38.1,136.1,34.8,140.1,34.8z"></path><path class=st0 d="M141.6,89.9L141.6,89.9c2.3,0,4.3-1.9,4.3-4.3V56.5c0-2.3-1.9-4.3-4.3-4.3l0,0c-2.3,0-4.3,1.9-4.3,4.3v29.1 C137.4,88,139.3,89.9,141.6,89.9z"></path></g><g class="controller st0" ng-class="{selected: vm.selected.title == \'Controller\'}"><path d="M67.1,78.6L67.1,78.6c-0.4-0.2-0.6-0.6-0.5-1l2-5.1c0.2-0.4,0.6-0.6,1-0.5v0c0.4,0.2,0.6,0.6,0.5,1l-2,5.1 C68,78.5,67.6,78.7,67.1,78.6z"></path><path d="M65.4,82.9L65.4,82.9c-1-0.4-1.5-1.5-1.1-2.5l0.7-2c0.4-1,1.5-1.5,2.5-1.1l0,0c1,0.4,1.5,1.5,1.1,2.5l-0.7,2 C67.5,82.7,66.4,83.2,65.4,82.9z"></path><path d="M62.9,80.7l8.2,2.6l9.2,1.1c1.9,0.6,3,2.6,2.4,4.5v0c-0.6,1.9-2.6,3-4.5,2.4l-18-5.5c-1.9-0.6-3-2.6-2.4-4.5 l0,0C58.3,79.4,61,80.1,62.9,80.7z"></path></g><g class="armrest st0" ng-class="{selected: vm.selected.title == \'Armrest\'}"><path class d="M137.2,98.7l12.2-5.8c1.3-0.6,1.8-2.2,1.2-3.4v0c-0.6-1.3-2.2-1.8-3.4-1.2L135,94c-1.3,0.6-1.8,2.2-1.2,3.4l0,0 C134.4,98.7,135.9,99.3,137.2,98.7z"></path><path class d="M122.4,92.2l11.9,6.3c1.3,0.7,2.8,0.2,3.5-1.1v0c0.7-1.3,0.2-2.8-1.1-3.5l-11.9-6.3c-1.3-0.7-2.8-0.2-3.5,1.1 l0,0C120.7,90,121.2,91.5,122.4,92.2z"></path><path class d=M87.8,81.2h41c1.7,0,3,1.4,3,3v0c0,1.7-1.4,3-3,3h-41c-1.7,0-3-1.4-3-3v0C84.7,82.6,86.1,81.2,87.8,81.2z></path><path class d="M95.2,93.2h28.4c1.6,0,2.9-1.3,2.9-2.9v0c0-1.6-1.3-2.9-2.9-2.9H95.2c-1.6,0-2.9,1.3-2.9,2.9v0 C92.2,91.9,93.6,93.2,95.2,93.2z"></path></g><g class="accessories st0" ng-class="{selected: vm.selected.title == \'Accessories\'}"><path class d=M137.4,66.2l-5.2,1.5c-1.7,0.5-3.4-0.5-3.9-2.2v0c-0.5-1.7,0.5-3.4,2.2-3.9l7-1.9L137.4,66.2z></path><path class d=M122.6,108.7l-1.2-5.3c-0.4-1.7,0.7-3.4,2.4-3.8l0,0c1.7-0.4,3.4,0.7,3.8,2.4l1.6,7L122.6,108.7z></path><path class d=M136.8,18.9C155.3,27,148,43.1,147,45.1c-0.3,0.5-0.3,0.4-1.2,1.8v-1.9c0,0,9.8-16.8-10.6-26.2H136.8z></path><path class d="M136.5,30.9L136.5,30.9c-3,0-5.5-2.5-5.5-5.5l-1-10.7c0-3,2.5-5.5,5.5-5.5h0c3,0,6.5,3.2,6.5,6.2v10 C142,28.5,139.5,30.9,136.5,30.9z"></path></g><g class="securement st0" ng-class="{selected: vm.selected.title == \'Securements\'}"><path d="M87.5,151.3H94c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7h-6.5c-0.9,0-1.7,0.8-1.7,1.7l0,0 C85.8,150.6,86.6,151.3,87.5,151.3z"></path><path d="M153.9,151.3h6.5c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7h-6.5c-0.9,0-1.7,0.8-1.7,1.7l0,0 C152.2,150.6,153,151.3,153.9,151.3z"></path><path d="M160,158.7h22.7c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7H160c-0.9,0-1.7,0.8-1.7,1.7l0,0 C158.3,157.9,159,158.7,160,158.7z"></path></g></svg>');
$templateCache.put('usewchair/fit/modal/recommend.modal.html','<ion-modal-view class="usewchair content"><ion-header-bar class=bar-positive><h1 class=title>{{vm.section | uppercase}}</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li ng-if="vm.section == \'wheel\' && vm.answers[1] == 3">Your <strong>wheel position is behind your shoulder</strong>, , which makes your wheelchair stable. Moving our wheel position forward will make your wheelchair easier to turn and pop a wheelie.</li><li ng-if="vm.section == \'wheel\' && vm.answers[2] == 3">The <strong>large wheel camber</strong> increases the stability of your wheelchair and allow you to access more of the handrims, but makes your wheelchair wider and requires more effort to push your wheelchair forward and turn. Decrease wheel camber will make it easier to go through narrow spaces and help to lower the stress on your arms for pushing the wheelchair.</li><li ng-if="vm.section == \'backrest\' && (vm.answers[3] == 1 || vm.answers[3] == 3)">You may want to adjust your <strong>backrest height</strong> or replace your backrest with an appropriate height.</li><li ng-if="vm.section == \'seat\' && (vm.answers[5] == 1 || vm.answers[5] == 3)">You may want to check whether you are able to adjust your <strong>seat depth</strong>, or look into replacement of your wheelchair with appropriate seat depth.</li><li ng-if="vm.section == \'seat\' && vm.answers[6] == 1">If you would like to sit more stably on your wheelchair, you may want to increase your <strong>seat angle</strong> (seat dump).</li><li ng-if="vm.section == \'seat\' && (vm.answers[7] == 2 || vm.answers[7] == 3)">Usually <strong>seat width</strong> is not an adjustable feature. You will need to contact your therapist to assess the issues about your seat width.</li><li ng-if="vm.section == \'seat\' && (vm.answers[8] == 2 || vm.answers[8] == 3)">There are ways to adjust <strong>seat height</strong>, but it may affect other wheelchair features and stability. You should contact your therapist if you are concerned about your seat height.</li><li ng-if="vm.section == \'cushion\' && vm.answers[9] == 2">You should consider to receive a <strong>pressure mapping assessment</strong> before you purchase your next cushion. Your wheelchair cushion should be replaced once every two years.</li><li ng-if="vm.section == \'footrest\' && (vm.answers[10] == 2 || vm.answers[10] == 3)"><strong>Footrest angle</strong> of most manual wheelchairs are not adjustable, unless your wheelchair is equipped with angle-adjustable footrests. You should contact your therapist if you are concerned about your footrest angle.</li><li ng-if="vm.section == \'footrest\' && (vm.answers[11] == 2 || vm.answers[11] == 3)"><strong>Footrest length</strong> is adjustable on most manual wheelchairs, and can be changed with simple tools, like an allen ranch.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewchair/fit/modal/summary.modal.html','<ion-modal-view class="usewchair content assessment-summary"><ion-header-bar class=bar-positive><h1 class=title>SUMMARY</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><h3><strong>Summary of Assessment</strong></h3><div class=list><div class="item item-divider" ng-repeat-start="question in vm.questions"><strong>{{question.text}}</strong></div><div class=item ng-repeat-end>{{vm.getAnswer(question)}}</div></div></ion-content></ion-modal-view>');
$templateCache.put('usewchair/skills/contents/assessment-summary.html','<ion-view title=Summary><ion-content class="usewchair content questionnaire assessment-summary" padding=true><div id=manualSkillSummary><h2 style="text-align: center">My Manual Wheelchair Skill Summary</h2><p>This self-assessment is based on the \u201CWheelchair Skills Test Questionnaire\u201D developed by the team from Dalhousie University with revisions for better presentation in the app. You can find more information about this questionnaire on <a ng-click="openInBrowser(\'http://www.wheelchairskillsprogram.ca/eng/index.php\', \'_blank\')">their website</a>. Here are some recommendations based on your self-assessment of your skills:</p><ul class=accordion><li ng-if="vm.groups.basic.percent < 100"><input type=checkbox> <i></i><h3>INDOOR SKILLS ({{vm.groups.basic.percent | number:0}}%):</h3><div>You can perform {{vm.groups.basic.percent | number:0}}% of the <strong>indoor skills</strong> with confidence. These are the basic skills that you should master to navigate indoors safely. You should contact your therapist or a certified professional (<a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">find here</a>) to receive training to make sure that you can perform all the indoor skills safely.</div></li><li ng-if="vm.groups.basic.percent >= 100"><input type=checkbox> <i></i><h3>INDOOR SKILLS ({{vm.groups.basic.percent | number:0}}%):</h3><div>Great job! You have mastered all the <strong>indoor skills</strong>.</div></li><li ng-if="vm.groups.intermediate.percent == 0"><input type=checkbox> <i></i><h3>COMMUNITY SKILLS ({{vm.groups.intermediate.percent | number:0}}%):</h3><div>Mastering community wheelchair skills allows you to navigate the community more efficiently and safely, and participate in more professional, educational, and/or leisure activities. As many of the community skills may increase the risk of tips and falls, it is strongly recommended that you contact your therapist or a certified professional (<a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">find here</a>) to receive appropriate training.</div></li><li ng-if="vm.groups.intermediate.percent === 0> <input type=" checkbox"><i></i><h3>COMMUNITY SKILLS ({{vm.groups.intermediate.percent | number:0}}%):</h3><div>Mastering community wheelchair skills allows you to navigate the community more efficiently and safely, and participate in more professional, educational, and/or leisure activities. As many of the community skills may increase the risk of tips and falls, it is strongly recommended that you contact your therapist or a certified professional (<a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">find here</a>) to receive appropriate training.</div></li><li ng-if="vm.groups.intermediate.percent != 0 && vm.groups.intermediate.percent < 100"><input type=checkbox> <i></i><h3>COMMUNITY SKILLS ({{vm.groups.intermediate.percent | number:0}}%):</h3><div>It is great that you are making progress towards achieving all community skills. Mastering all community wheelchair skills allows you to navigate the community more efficiently and safely, and participate in more professional, educational, and/or leisure activities. As many of the community skills may increase the risk of tips and falls, it is strongly recommended that you contact your therapist or a certified professional (<a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">find here</a>) to receive appropriate training.</div></li><li ng-if="vm.groups.intermediate.percent >= 100"><input type=checkbox> <i></i><h3>COMMUNITY SKILLS ({{vm.groups.intermediate.percent | number:0}}%):</h3><div>Excellent achievement! You have mastered all the <strong>community skills!</strong></div></li><li ng-if="vm.groups.advanced.percent === 0"><input type=checkbox> <i></i><h3>ADVANCED SKILLS ({{vm.groups.advanced.percent | number:0}}%):</h3><div>These are fairly difficult skills, but mastering these skills will allow you to explore more outdoor terrain and visit more places independently. These skills challenge your balance and coordination, and may increase the risk of tips and falls. Thus, you will have to contact your therapist or a certified professional (<a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">find here</a>) to receive appropriate training for these advanced skills.</div></li><li ng-if="vm.groups.advanced.percent != 0 && vm.groups.advanced.percent < 100"><input type=checkbox> <i></i><h3>ADVANCED SKILLS ({{vm.groups.advanced.percent | number:0}}%):</h3><div>It is impressive that you can perform {{vm.groups.advanced.percent | number:0}}% of the <strong>advanced skills</strong> with confidence. These are fairly difficult skills, but mastering these skills will allow you to explore more outdoor terrain and visit more places independently. These skills challenge your balance and coordination, and may increase the risk of tips and falls. Thus, you will have to contact your therapist or a certified professional (<a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">find here</a>) to receive appropriate training for these advanced skills.</div></li><li ng-if="vm.groups.advanced.percent >= 100"><input type=checkbox> <i></i><h3>ADVANCED SKILLS ({{vm.groups.advanced.percent | number:0}}%):</h3><div>Outstanding work! You are a highly proficient user and can travel to many places on your own!</div></li></ul><br><h2>Results of Self-Assessment</h2><ul class=accordion><li ng-if="vm.progress.y != 0"><input type=checkbox> <i></i><h3>Skills Achieved ({{vm.progress.yp}}%)</h3><div><span class="qq-question summary" ng-repeat="question in vm.questions | filter: {group: \'Y\'}"><span class=qnumber>{{question.id}}.</span> {{question.text}}</span></div></li><li ng-if="vm.progress.n != 0"><input type=checkbox> <i></i><h3>Skills to acquire ({{vm.progress.np}}%)</h3><div><a class=edit ng-click="vm.openSkillQuestionnaire(\'ACQUIRE\')">Edit</a> <span class="qq-question summary" ng-repeat-start="question in vm.questions | filter: {group: \'N\'}"><span class=qnumber>{{question.id}}.</span> {{question.text}}</span> <span class=qq-answer ng-repeat-end><span>{{vm.getAnswer(question)}}</span></span></div></li><li ng-if="vm.progress.z != 0"><input type=checkbox> <i></i><h3>Skills Not Applicable ({{vm.progress.zp}}%)</h3><div><a class=edit ng-click="vm.openSkillQuestionnaire(\'ASSESS\')">Edit</a> <span class="qq-question summary" ng-repeat="question in vm.questions | filter: {group: \'Z\'}"><span class=qnumber>{{question.id}}.</span> {{question.text}}</span></div></li></ul></div></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/assessment.html','<ion-view title=Assessment><ion-content class="usewchair content questionnaire" padding=true><ion-slide-box class=question-slider dynamic-height show-pager=false delegate-handle=outerSlideBox ng-init="list = {}"><ion-slide class ng-repeat="page in vm.pages"><h4 class=qq-question ng-repeat-start="question in page" ng-init="question.list = question.deserializeMultiValueFn(question.checks, vm.answers[question.id])" ng-click="navigateTo(question.state, question.params)"><span class=qnumber>{{question.id}}.</span> <span class=title style="font-size: inherit" ng-bind-html=question.text></span></h4><div class=qq-answer ng-repeat-end style="margin-bottom: 10px"><ion-radio ng-if="question.options != null" name=Q{{question.id}} ng-model=vm.answers[question.id] ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="question.checks != null" ng-repeat="item in question.list" ng-value=item.text ng-model=item.checked ng-change="vm.onChangeCheckbox(question, item)">{{ item.text }}</ion-checkbox></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class="bar-positive bar-pager"><div class=buttons ng-click=vm.prevPage() ng-hide="vm.currentIndex==0"><button class="button button-icon my-icon-mwg_d_arrow_01"></button></div><h1 class=title style="text-align: center">{{vm.currentIndex+1}} of {{vm.questionsTotal}}</h1><div class=buttons><button class="button button-icon my-icon-mwg_d_arrow_02" ng-show="vm.currentIndex+1 != vm.questionsTotal" ng-click=vm.nextPage()></button> <button class=button ng-show="vm.currentIndex+1 == vm.questionsTotal" ng-click=vm.finish(vm.answers)>Finish</button></div></ion-footer-bar></ion-view>');
$templateCache.put('usewchair/skills/contents/main.html','<ion-view title=\'<i class="icon my-icon-mwg_10_skills"></i> Skills\'><ion-content class="usewchair content" padding=true><div class=main-frame><div class=parts style="padding: 10px"><ng-include src="\'usewchair/fit/contents/main.map.html\'"></ng-include></div><div class=groups><ul class=list-groups><li class=btn-menu ng-class="{selected: vm.selected.title == section.title}" ng-repeat="section in vm.navData" ng-click=vm.selectGroup(section)>{{::section.title}}</li></ul></div></div><div class="list button-style"><div class="item item-icon-left yellow" ng-click="navigateTo(\'.assessment\')"><i class="icon my-icon-mwg_16_activities"></i><div class="title bold">Self Assessment</div></div><div class="item item-icon-left primary" ng-click="navigateTo(\'.summary\')"><i class="icon my-icon-mwg_e_clipboard"></i><div class="title bold">Recommendations</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ct_disassemble.html','<ion-view title=Routines class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container></div><ion-scroll class=description><ul class=bullet-point><li>TBD</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-da_reaching.html','<ion-view title=Routines class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'CSW7mE8-AGs\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Reaching and leaning reduce stability and can put you at a risk for falling.</li><li>If you have weak trunk muscles, you should hook the opposite arm behind the push handle or hold onto the armrest or wheel to avoid falling and help return to an upright posture.</li><li>Making the casters trailing forward could increase the footprint and decrease the risk of tipping forward when reaching forward.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-da_transfer.html','<ion-view title=Routines class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'x2rUZ8CWk6Y\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Move to the target surface as close as possible.</li><li>Clear the pathway.</li><li>Orient the casters to trail toward the target surface to increase stability.</li><li>Apply brakes.</li><li>Remove armrests (if any).</li><li>Place your feet on the ground.</li><li>There are several transfer methods, e.g., standing pivot, pivot, and sideways. You need to choose a method depending on your condition (e.g., strength, joint range of motion, and balance), and the situation.</li><li>Please consult your therapist or a certified professional (find <a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">here</a>) for transfer training.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-da_weight.html','<ion-view title=Routines class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'M0OR0Qxz6ks\'"></youtube-video></div><ion-scroll class=description><p>It is recommended that you relieve pressure at buttocks every 15-20 minutes for at least 2 minutes to reduce risks of pressure sores.</p><p>Methods for weight shift:</p><ul class=bullet-point><li>Forward leaning: put the casters in trailing forward positions, and bend forward to rest your chest on your lap to unweigh your buttocks.</li><li>Side leaning: lean your trunk sideways by pulling or pushing the rear wheel on the opposite side.</li><li>Tilt backwards: use a wheelie position to tilt backwards and rest your trunk on the wall.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-dh_curbs.html','<ion-view title=Height class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'6JTH7WNKk9Q\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>If possible, curbs should be avoided. Going up and down curbs requires good upper body strength, coordination, and balance.</li><li>Popping the casters at the right timing with appropriate height (depending on the height of the curb) followed by quick weight shift is the key skill to climb up a curb.</li><li>Descending the curb backward can be an easier alternative, but you should be very cautious of tipping and falling.</li><li>Supervision is needed to learn and practice this skill.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-dh_descend.html','<ion-view title=Height class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container></div><ion-scroll class=description><ul class=bullet-point><li>TBD</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-dh_ground.html','<ion-view title=Height class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'YG-u4QVniL8\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>If possible, use a lift or get help when transferring from the ground to a wheelchair. Independent transfer requires good upper body strength and range of motion, which may induce muscle strains.</li><li>To prepare, you sit on the floor in front of a wheelchair with hips and knees flexed as much as possible. Then push the frame and/or floor to lift your buttocks off the floor.</li><li>An alternative is to use transition surfaces, for example, from floor to a foot stool or bench, then to a wheelchair.</li><li>Supervision is needed to learn and practice this skill.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-flat_feature.html','<ion-view title=Flat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'GxbQR5i1Kuk\'"></youtube-video></div><ion-scroll class=description><p>A functional forward propulsion speed is about 1 meter (or 3.3 feet) per second. A semi-circular pattern that uses long and smooth strokes is typically recommended. It helps improve propulsion efficiency and thus decrease the risk of upper limb pain and injury.</p><p>How to push using a semi-circular pattern?</p><h4>Step 1: Imagine that your right wheel is a clock.</h4><h4>Step 2: Initial contact</h4><ul class=bullet-point><li>Lean forward slightly.</li><li>Reach back as far as you can comfortably, ideally hands at 11 o\'clock position.</li><li>Grab the handrim with your thumb pointing forward.</li></ul><h4>Step 3: Push</h4><ul class=bullet-point><li>Push the handrim with a long, smooth, and slow stroke.</li><li>Avoid jerky moves to prevent the wheelchair from tipping backward.</li></ul><h4>Step 4: Release</h4><ul class=bullet-point><li>Release the handrim at 2 o\'clock position.</li><li>Allow the wheelchair to coast if possible.</li></ul><h4>Step 5: Recovery</h4><ul class=bullet-point><li>Relax your arms by touching the wheel axles and swing backward.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-flat_psf.html','<ion-view title=Flat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'m2Ucqkwlt8k\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Pushing backwards may cause a wheelchair to tip backwards.</li><li>Always look over both shoulders.</li><li>You can either pull the wheels evenly with both hands or pull with one hand at a time, which may provide greater control.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-flat_straight.html','<ion-view title=Flat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'TVrkTbT81x4\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Place hands at the 1 o\u2019clock position, and let the handrims slide through your hands.</li><li>Coast, slow down, then stop.</li><li>The rate of slowing is controlled by how hard the handrims are gripped.</li><li>The wheelchair may tip forward if stopped suddenly.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=left><button class="button buttons button-icon my-icon-mwg_d_arrow_01 go-back" ng-click=vm.goBack()></button></ion-nav-buttons><ion-nav-buttons side=right><button class="button button-icon icon my-icon-mwg_a_home" goto=main.home ng-hide="$state.includes(\'main.home\')"></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('usewchair/skills/contents/skill-mn_door.html','<ion-view title=Maneuver class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'LTNazS0DADo\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>TBD</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-mn_turn.html','<ion-view title=Maneuver class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'dFy5JuDQGTM\'"></youtube-video></div><ion-scroll class=description></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-na_turncorner.html','<ion-view title=Maneuver class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'woh01hd6mU0\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Slow down the inside wheel and push harder on the outside wheel.</li><li>Check the video for tips of alternative methods. Alternative methods may lead to better efficiency. Moving your arms with various patterns could prevent repetitive injuries.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ob_ramp.html','<ion-view title=Obstacles class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'NMpb8DIRgJo\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>TBD</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ob_surface.html','<ion-view title=Obstacles class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container></div><ion-scroll class=description><ul class=bullet-point><li>TBD</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ob_terrain.html','<ion-view title=Obstacles class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'mZjChGdknaU\'"></youtube-video></div><ion-scroll class=description></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ra_asc.html','<ion-view title=Slope class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'xeJDfU2DOhA\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Use a rocking action to get over the initial incline.</li><li>Lean forward to avoid tipping backward.</li><li>Use a short arcing stroke to avoid rolling backward.</li><li>Put your heavy backpack on your laps to increase stability.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ra_desc.html','<ion-view title=Slope class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'6a3Qp1riIf8\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Keep your weight back to maintain good traction on rear wheels.</li><li>Go slowly, stay in control, and prepare to stop at any time.</li><li>Hold your hands at the 1:00 o\u2019clock position and let handrims to slide through your grip to provide continuous friction.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-ra_slope.html','<ion-view title=Slope class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container></div><ion-scroll class=description><ul class=bullet-point><li>TBD</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-sr_asc.html','<ion-view title="Steep Ramps" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'vtEJo1T7sD8\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Pushing a wheelchair up a steep ramp/slope or across a side slope requires good upper body strength and could expose users to risks of muscle strains and overuse injuries.</li><li>When going through a side slope,<ul class=bullet-point><li>lean backward to keep the weight on rear wheels to reduce the tendency of rolling downhill.</li><li>your hand at the downhill side will need to move faster than the other hand to maintain direction.</li></ul></li><li>When rolling down from a steep ramp/slope,<ul class=bullet-point><li>follow the skills for <a ng-click="navigateTo(\'^.skill\', {name: \'rampdesc\'})">descending a mild ramp/slope</a>.</li><li>proceed slowly, especially at the ramp-floor transition to prevent from tipping backward.</li><li>popping a wheelie could help prevent sliding and tipping forward.</li></ul></li><li>When pushing uphills on a steep ramp/slope,<ul class=bullet-point><li>follow the skills for <a ng-click="navigateTo(\'^.skill\', {name: \'rampasc\'})">ascending a mild ramp/slope</a>.</li></ul></li><li>Supervision is needed to learn and practice this skill.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-sr_desc.html','<ion-view title="Steep Ramps" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'vtEJo1T7sD8\'"></youtube-video></div><ion-scroll class=description><ul class=bullet-point><li>Pushing a wheelchair up a steep ramp/slope or across a side slope requires good upper body strength and could expose users to risks of muscle strains and overuse injuries.</li><li>When going through a side slope,<ul class=bullet-point><li>lean backward to keep the weight on rear wheels to reduce the tendency of rolling downhill.</li><li>your hand at the downhill side will need to move faster than the other hand to maintain direction.</li></ul></li><li>When rolling down from a steep ramp/slope,<ul class=bullet-point><li>follow the skills for <a ng-click="navigateTo(\'^.skill\', {name: \'rampdesc\'})">descending a mild ramp/slope</a>.</li><li>proceed slowly, especially at the ramp-floor transition to prevent from tipping backward.</li><li>popping a wheelie could help prevent sliding and tipping forward.</li></ul></li><li>When pushing uphills on a steep ramp/slope,<ul class=bullet-point><li>follow the skills for <a ng-click="navigateTo(\'^.skill\', {name: \'rampasc\'})">ascending a mild ramp/slope</a>.</li></ul></li><li>Supervision is needed to learn and practice this skill.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/skills/contents/skill-wh_wheelie.html','<ion-view title=Wheelie class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=video-container><youtube-video video-id="\'lk5T-7fGJE0\'"></youtube-video></div><ion-scroll class=description><p>Backrest angle could affect sitting stability.</p><ul class=bullet-point><li>The wheelie position is the foundation of many advanced wheelchair skills. It helps decrease rolling resistance and prevent tipping forward. However, it increases risks of tipping and falling backward.</li><li>Popping a wheelie could be used to negotiate soft and uneven surfaces (e.g., thick carpet, gravels, and broken or uneven paving slabs), go down the slope, and negotiate curbs.</li><li>Supervision is needed to learn and practice this skill.</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/assessment-summary-map.html','<svg version=1.1 id=Layer_1 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewbox="0 0 296.4 296.4" xml:space=preserve><style type=text/css>\n        .st0{fill:#BCBEC0;stroke:#FFFFFF;stroke-width:1.84;stroke-miterlimit:10;}\n        .st1{fill:#BCBEC0;stroke:#FFFFFF;stroke-width:2.85;stroke-miterlimit:10;}\n        .st2{fill:none;stroke:#FFFFFF;stroke-width:1.74;stroke-miterlimit:10;}\n        .st3{fill:#FFFFFF;}\n        .st4{fill:none;stroke:#908FB3;stroke-miterlimit:10;}\n        .st5{fill:#ED1C24;}\n    </style><title>MWG_ChairArt_Red</title><g><path class=st0 d="M239.6,195h39.3c5.1,0,9.2,4.1,9.2,9.2l0,0c0,5.1-4.1,9.2-9.2,9.2h-39.3c-5.1,0-9.2-4.1-9.2-9.2l0,0 C230.4,199.1,234.6,195,239.6,195z"></path><path class=st0 d="M248.4,233.7l-8.6-1.1l4.2-17.4c0.3-2.6,0.5-5.1,0.5-7.7c0.1-4.2-4.2-12.4-4.2-12.4l-40.5-55 c-1.4-2.5-3.1-4.8-5-6.9c-2.7-2.8-4.8-3.2-4.8-3.2l-76.3-1.2c0,0-12.2,0.8-18.7-5.9c-6.5-6.7-8.7-19.5-8.7-19.5L70.4,35.3 c-1-4.4,1.6-8.7,6-9.8c0,0,0,0,0,0l0,0c4.4-1,8.7,1.6,9.8,6l16.3,68.9c0.4,3.6,1.9,6.9,4.4,9.5c4,4.1,6.6,2.8,6.6,2.8l79.5,1.2 c4.3,0.1,8.5,1.9,11.5,5c2.7,2.7,5.1,5.7,6.9,9l41,56.2l5,10.7c1.5,6.4,2.3,13,2.3,19.6c-0.1,4.6-2,14.1-4.2,23.3L248.4,233.7z"></path><path class=st0 d="M214.9,102.8c0.1-6.3-4.9-11.4-11.2-11.5l-78.4-1.2c-6.3-0.1-11.4,4.9-11.5,11.2c0,0,0,0,0,0l0,0 c-0.1,6.3,4.9,11.4,11.2,11.5c0,0,0,0,0,0l78.4,1.2C209.6,114.1,214.7,109.1,214.9,102.8C214.8,102.8,214.9,102.8,214.9,102.8 L214.9,102.8z"></path><path class=st0 d="M92.9,10.5c-6.1,1.5-9.9,7.6-8.4,13.7c0,0,0,0,0,0l13.1,55.3c1.5,6.1,7.6,9.8,13.7,8.4c0,0,0,0,0,0l0,0 c6.1-1.5,9.9-7.6,8.4-13.7L106.7,19C105.2,12.9,99.1,9.1,92.9,10.5L92.9,10.5z"></path><path class=st0 d="M117.2,174c-5.7,2.6-8.3,9.3-5.7,15l23.2,52c2.6,5.7,9.3,8.2,15,5.7l0,0c5.7-2.6,8.3-9.3,5.7-15l-23.2-52 C129.7,174,122.9,171.4,117.2,174L117.2,174z"></path><path class=st0 d="M241.4,232.7c12.7,0,22.9,10.3,22.9,22.9s-10.3,22.9-22.9,22.9s-22.9-10.3-22.9-22.9c0,0,0,0,0,0 C218.4,242.9,228.7,232.7,241.4,232.7C241.3,232.7,241.3,232.7,241.4,232.7z M228.2,255.6c0,7.3,5.9,13.2,13.2,13.2 s13.2-5.9,13.2-13.2s-5.9-13.2-13.2-13.2c0,0,0,0,0,0C234.1,242.4,228.2,248.3,228.2,255.6C228.2,255.6,228.2,255.6,228.2,255.6z"></path><path class=st1 d="M150.3,207.5c19.6,0,35.5,15.9,35.5,35.5c0,19.6-15.9,35.5-35.5,35.5s-35.5-15.9-35.5-35.5c0,0,0,0,0,0 C114.8,223.4,130.7,207.5,150.3,207.5z M129.8,243c0,11.3,9.2,20.5,20.4,20.5c11.3,0,20.5-9.2,20.5-20.5s-9.2-20.4-20.5-20.4 c0,0,0,0,0,0C139,222.6,129.8,231.7,129.8,243C129.8,243,129.8,243,129.8,243z"></path><path class=st0 d="M112.2,59.6c60.3,0,109.1,48.9,109.1,109.1s-48.9,109.1-109.1,109.1S3.1,229,3.1,168.8c0,0,0,0,0,0 C3.1,108.5,52,59.6,112.2,59.6z M24.9,168.7c0,48.2,39.1,87.3,87.3,87.3c48.2,0,87.3-39.1,87.3-87.3c0-48.2-39.1-87.3-87.3-87.3 c0,0,0,0,0,0C64,81.4,24.9,120.5,24.9,168.7z"></path><path class=st2 d="M112.6,65.6c57,0,103.1,46.1,103.2,103.1c0,57-46.1,103.1-103.1,103.2S9.5,225.7,9.5,168.8c0,0,0,0,0,0 C9.5,111.8,55.7,65.6,112.6,65.6z"></path><circle class=st0 cx=112.2 cy=168.7 r=24.7></circle></g><rect x=225.6 y=175 class=st3 width=62.6 height=18.1 ng-show="vm.answers[10] == 2 || vm.answers[10] == 3 || vm.answers[11] == 2 || vm.answers[11] == 3"></rect><path class="backrest st5" ng-click="vm.openRecommendation(\'backrest\')" ng-show="vm.answers[3] == 1 || vm.answers[3] == 3" d="M183.8,44.1h-67.9V23.8h67.9V44.1z M118.2,28.1v10.7h5.2c0.5,0,0.9-0.1,1.4-0.2c0.4-0.1,0.8-0.3,1.2-0.6 c0.4-0.3,0.7-0.6,0.9-1c0.5-1,0.4-2.2-0.2-3.1c-0.4-0.5-0.9-0.9-1.5-1c0.4-0.2,0.8-0.5,1.1-0.9c0.3-0.4,0.4-0.9,0.4-1.3 c0-0.4-0.1-0.9-0.2-1.3c-0.2-0.3-0.4-0.6-0.7-0.8c-0.3-0.2-0.7-0.4-1.1-0.4c-0.5-0.1-0.9-0.1-1.4-0.1L118.2,28.1z M120.5,32.4v-2.5 h2.2c0.2,0,0.4,0,0.6,0.1c0.2,0,0.4,0.1,0.5,0.2c0.2,0.1,0.3,0.2,0.4,0.4c0.1,0.2,0.1,0.4,0.1,0.6c0,0.4-0.1,0.8-0.4,1 c-0.3,0.2-0.6,0.3-1,0.3L120.5,32.4z M120.5,37v-3h2.6c0.4,0,0.9,0.1,1.2,0.3c0.3,0.3,0.5,0.7,0.5,1.2c0,0.2,0,0.5-0.1,0.7 c-0.1,0.2-0.2,0.3-0.4,0.4c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.4,0.1-0.7,0.1L120.5,37z M130.5,33.4c0-0.3,0.2-0.7,0.4-0.9 c0.3-0.2,0.6-0.3,1-0.3c0.2,0,0.4,0,0.5,0c0.2,0,0.3,0.1,0.4,0.2c0.1,0.1,0.2,0.2,0.3,0.3c0.1,0.2,0.1,0.4,0.1,0.6 c0,0.2-0.1,0.4-0.2,0.5c-0.2,0.1-0.4,0.2-0.6,0.3c-0.3,0.1-0.5,0.1-0.8,0.1l-0.9,0.1c-0.3,0-0.6,0.1-1,0.2c-0.3,0.1-0.6,0.2-0.8,0.4 c-0.2,0.2-0.5,0.4-0.6,0.7c-0.2,0.3-0.2,0.7-0.2,1.1c0,0.3,0.1,0.7,0.2,1c0.1,0.3,0.3,0.5,0.6,0.7c0.2,0.2,0.5,0.3,0.8,0.4 c0.3,0.1,0.7,0.1,1,0.1c0.5,0,1-0.1,1.4-0.2c0.5-0.1,0.9-0.4,1.2-0.7c0,0.1,0,0.3,0.1,0.4c0,0.1,0.1,0.2,0.1,0.4h2.2 c-0.1-0.2-0.2-0.5-0.2-0.7c0-0.3-0.1-0.7-0.1-1v-4c0-0.4-0.1-0.8-0.3-1.1c-0.2-0.3-0.5-0.5-0.8-0.7c-0.3-0.2-0.7-0.3-1.1-0.3 c-0.4-0.1-0.8-0.1-1.2-0.1c-0.4,0-0.9,0-1.3,0.1c-0.4,0.1-0.8,0.2-1.1,0.4c-0.3,0.2-0.6,0.5-0.8,0.8c-0.2,0.4-0.4,0.8-0.4,1.2 L130.5,33.4z M133.3,35.8c0,0.1,0,0.3,0,0.5c0,0.2-0.1,0.4-0.2,0.6c-0.1,0.2-0.3,0.4-0.5,0.5c-0.3,0.2-0.7,0.2-1,0.2 c-0.2,0-0.3,0-0.5,0c-0.1,0-0.3-0.1-0.4-0.2c-0.1-0.1-0.2-0.2-0.3-0.3c-0.1-0.1-0.1-0.3-0.1-0.5c0-0.2,0-0.3,0.1-0.5 c0.1-0.1,0.2-0.2,0.3-0.3c0.1-0.1,0.3-0.2,0.4-0.2c0.2,0,0.3-0.1,0.5-0.1l0.5-0.1l0.5-0.1c0.1,0,0.3-0.1,0.4-0.1 c0.1,0,0.2-0.1,0.3-0.2L133.3,35.8z M142.4,33.8h2.1c0-0.5-0.1-0.9-0.4-1.3c-0.2-0.4-0.5-0.7-0.8-0.9c-0.3-0.3-0.7-0.4-1.1-0.5 c-0.4-0.1-0.9-0.2-1.3-0.2c-0.6,0-1.1,0.1-1.7,0.3c-0.5,0.2-0.9,0.5-1.2,0.9c-0.3,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.7 c0,0.5,0.1,1.1,0.3,1.6c0.2,0.5,0.4,0.9,0.8,1.2c0.4,0.4,0.8,0.6,1.2,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.9,0,1.8-0.2,2.5-0.8 c0.7-0.6,1.1-1.4,1.2-2.4h-2c0,0.4-0.2,0.8-0.5,1.2c-0.3,0.3-0.7,0.5-1.2,0.4c-0.3,0-0.6-0.1-0.8-0.2c-0.2-0.1-0.4-0.3-0.6-0.6 c-0.1-0.2-0.2-0.5-0.3-0.8c-0.1-0.3-0.1-0.6-0.1-0.9c0-0.3,0-0.6,0.1-0.9c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6 c0.3-0.2,0.6-0.2,0.9-0.2C141.7,32.4,142.3,33,142.4,33.8L142.4,33.8z M145.9,28.1v10.7h2.1v-2.7l0.8-0.8l2.1,3.5h2.6l-3.3-4.9 l2.9-2.8h-2.5l-2.7,2.8V28L145.9,28.1z M154.4,31.1v7.8h2.2v-3.5c0-0.3,0-0.7,0.1-1c0.1-0.3,0.2-0.6,0.4-0.8 c0.2-0.2,0.4-0.4,0.6-0.5c0.3-0.1,0.7-0.2,1-0.2h0.4h0.4v-2c-0.2,0-0.3-0.1-0.5-0.1c-0.3,0-0.5,0-0.8,0.1c-0.5,0.2-0.9,0.5-1.3,0.9 c-0.2,0.2-0.3,0.4-0.4,0.7l0,0V31L154.4,31.1z M161.7,35.5h5.6c0-0.6,0-1.2-0.1-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1 c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.9c-0.4,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.6 c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.4,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.2,0.8c0.5,0.2,1.1,0.2,1.7,0.2c0.8,0,1.6-0.2,2.2-0.6 c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.4 C161.9,36.5,161.7,36,161.7,35.5L161.7,35.5z M165.2,34.2h-3.5c0-0.2,0-0.3,0.1-0.5c0.1-0.2,0.1-0.4,0.3-0.5 c0.2-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.9-0.2c0.4,0,0.9,0.1,1.2,0.4C164.9,33.2,165.1,33.6,165.2,34.2L165.2,34.2z M170.2,36.3 h-2c0,0.5,0.1,0.9,0.4,1.3c0.2,0.3,0.5,0.6,0.8,0.8c0.4,0.2,0.7,0.4,1.1,0.4c0.9,0.2,1.8,0.2,2.6,0c0.4-0.1,0.8-0.2,1.1-0.4 c0.7-0.5,1.2-1.3,1.1-2.1c0-0.3-0.1-0.6-0.2-0.9c-0.1-0.2-0.3-0.4-0.6-0.6c-0.2-0.2-0.5-0.3-0.8-0.4c-0.3-0.1-0.6-0.2-0.9-0.2 L172,34c-0.3-0.1-0.5-0.1-0.8-0.2c-0.2-0.1-0.4-0.2-0.6-0.3c-0.1-0.1-0.2-0.3-0.1-0.5c0-0.1,0-0.3,0.1-0.4c0.1-0.1,0.2-0.2,0.3-0.2 c0.1,0,0.3-0.1,0.4-0.1c0.1,0,0.3,0,0.4,0c0.3,0,0.7,0.1,1,0.2c0.3,0.2,0.5,0.5,0.5,0.8h2c0-0.4-0.1-0.8-0.4-1.2 c-0.2-0.3-0.5-0.6-0.8-0.8c-0.3-0.2-0.7-0.3-1.1-0.4c-0.4-0.1-0.8-0.1-1.2-0.1c-0.4,0-0.8,0.1-1.2,0.1c-0.4,0.1-0.8,0.2-1.1,0.4 c-0.3,0.2-0.6,0.4-0.8,0.8c-0.2,0.4-0.3,0.8-0.3,1.2c0,0.3,0.1,0.6,0.2,0.9c0.1,0.2,0.3,0.4,0.6,0.6c0.2,0.2,0.5,0.3,0.8,0.4 c0.3,0.1,0.6,0.2,0.9,0.2c0.6,0.1,1.2,0.3,1.8,0.5c0.4,0.2,0.6,0.4,0.6,0.7c0,0.2,0,0.3-0.1,0.5c-0.1,0.1-0.2,0.2-0.3,0.3 c-0.1,0.1-0.3,0.1-0.4,0.2c-0.2,0-0.3,0-0.5,0c-0.2,0-0.4,0-0.6-0.1c-0.2,0-0.4-0.1-0.5-0.2c-0.2-0.1-0.3-0.2-0.4-0.4 C170.3,36.7,170.2,36.5,170.2,36.3L170.2,36.3z M179.3,31.1v-2.4h-2.1V31h-1.3v1.4h1.3V37c0,0.3,0,0.7,0.2,1 c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.1,0.5,0.2,0.8,0.3c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.7h-0.3h-0.4 c-0.4,0.1-0.8-0.1-0.9-0.5c0-0.1,0-0.3,0-0.4v-3.8h1.6V31L179.3,31.1z"></path><path class="wheel st5" ng-click="vm.openRecommendation(\'wheel\')" ng-show="vm.answers[1] == 3 || vm.answers[2] == 3" d="M108.8,216.6H40.9v-20.2h67.8V216.6z M63.3,211.4l2.9-10.7h-2.3l-1.8,7.4l0,0l-1.8-7.4H58l-1.9,7.3l0,0 l-1.7-7.3h-2.4l2.8,10.7h2.4l1.8-7.3l0,0l1.8,7.3L63.3,211.4z M67,200.6v10.7h2.1v-4.1c-0.1-0.6,0.1-1.2,0.4-1.7 c0.3-0.4,0.8-0.6,1.3-0.5c0.4,0,0.8,0.1,1.1,0.5c0.2,0.4,0.3,0.9,0.3,1.4v4.4h2.1v-4.8c0-0.4,0-0.9-0.1-1.3c-0.1-0.4-0.2-0.7-0.4-1 c-0.2-0.3-0.5-0.5-0.9-0.6c-0.5-0.2-0.9-0.2-1.4-0.2c-0.4,0-0.9,0.1-1.2,0.3c-0.4,0.2-0.8,0.6-1,1l0,0v-4L67,200.6z M77.7,208h5.6 c0-0.6,0-1.2-0.2-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3 c-0.5,0.2-0.9,0.5-1.3,0.9c-0.4,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.6c0,0.6,0.1,1.1,0.3,1.6c0.2,0.5,0.4,0.9,0.8,1.3 c0.4,0.4,0.8,0.7,1.2,0.8c0.5,0.2,1.1,0.3,1.7,0.3c0.8,0,1.6-0.2,2.3-0.6c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7 c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.5C77.8,209.1,77.6,208.5,77.7,208z M81.1,206.6h-3.5c0-0.2,0-0.3,0.1-0.5 c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.8-0.2c0.4,0,0.9,0.1,1.2,0.4C80.9,205.7,81.1,206.2,81.1,206.6 L81.1,206.6z M86.3,208h5.6c0-0.6,0-1.2-0.2-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4 c-0.6,0-1.1,0.1-1.6,0.3c-1,0.4-1.7,1.2-2.1,2.2c-0.2,0.5-0.3,1.1-0.3,1.6c0,0.6,0.1,1.1,0.3,1.6c0.2,0.5,0.4,0.9,0.8,1.3 c0.3,0.4,0.8,0.7,1.2,0.8c0.5,0.2,1.1,0.3,1.7,0.3c0.8,0,1.6-0.2,2.2-0.6c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7 c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.5C86.5,209.1,86.3,208.5,86.3,208z M89.8,206.6h-3.5c0-0.2,0.1-0.3,0.1-0.5 c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.8-0.2c0.4,0,0.9,0.1,1.2,0.4C89.5,205.7,89.7,206.2,89.8,206.6 L89.8,206.6z M93.2,200.6v10.8h2.1v-10.7L93.2,200.6z"></path><path class="seat st5" ng-click="vm.openRecommendation(\'seat\')" ng-show="vm.answers[5] == 1 || vm.answers[5] == 3 || vm.answers[6] == 1 || vm.answers[7] == 2 || vm.answers[7] == 3 || vm.answers[8] == 2 || vm.answers[8] == 3" d="M71.6,65.7H3.7V45.5h67.9V65.7z M23.5,56.9h-2.3c0,0.6,0.1,1.2,0.4,1.7c0.2,0.5,0.6,0.9,1,1.2 c0.4,0.3,0.9,0.6,1.5,0.7c0.6,0.1,1.1,0.2,1.7,0.2c0.7,0,1.3-0.1,1.9-0.3c0.5-0.1,1-0.4,1.4-0.7c0.4-0.3,0.6-0.7,0.8-1.1 c0.2-0.4,0.3-0.9,0.3-1.4c0-0.5-0.1-1-0.4-1.5c-0.2-0.4-0.5-0.7-0.9-0.9c-0.3-0.2-0.7-0.4-1.1-0.5c-0.4-0.1-0.6-0.2-0.8-0.2 l-1.6-0.4c-0.3-0.1-0.7-0.2-1-0.3c-0.2-0.1-0.4-0.2-0.5-0.4c-0.1-0.2-0.1-0.3-0.1-0.5c0-0.2,0-0.4,0.2-0.6c0.1-0.2,0.2-0.3,0.4-0.4 c0.2-0.1,0.3-0.2,0.5-0.2c0.2,0,0.4-0.1,0.6-0.1c0.3,0,0.5,0,0.8,0.1c0.2,0,0.5,0.1,0.7,0.2c0.2,0.1,0.3,0.3,0.5,0.5 c0.1,0.2,0.2,0.5,0.2,0.8h2.3c0-0.5-0.1-1.1-0.3-1.6c-0.2-0.4-0.6-0.8-1-1.1c-0.4-0.3-0.9-0.5-1.4-0.6c-0.5-0.1-1.1-0.2-1.6-0.2 c-0.5,0-1,0.1-1.4,0.2c-0.5,0.1-0.9,0.3-1.3,0.6c-0.4,0.3-0.7,0.6-0.9,1c-0.5,0.8-0.5,1.9-0.1,2.7c0.2,0.3,0.4,0.6,0.7,0.9 c0.3,0.2,0.6,0.4,1,0.6c0.4,0.1,0.8,0.3,1.2,0.4l1.2,0.3c0.3,0.1,0.7,0.2,1,0.3c0.3,0.1,0.5,0.3,0.7,0.4c0.2,0.2,0.3,0.4,0.3,0.7 c0,0.2-0.1,0.5-0.2,0.7c-0.1,0.2-0.3,0.3-0.5,0.4c-0.2,0.1-0.4,0.2-0.7,0.2c-0.2,0-0.5,0-0.7,0c-0.3,0-0.6,0-0.9-0.1 c-0.3-0.1-0.5-0.2-0.8-0.3c-0.2-0.2-0.4-0.4-0.5-0.6C23.5,57.5,23.4,57.2,23.5,56.9z M33.1,57.1h5.6c0-0.6,0-1.2-0.2-1.7 c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3c-1,0.4-1.7,1.2-2.1,2.2 C31.1,55.5,31,56,31,56.6c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.4,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.2,0.8c0.5,0.2,1.1,0.3,1.7,0.3 c0.8,0,1.6-0.2,2.3-0.6c0.7-0.5,1.2-1.2,1.4-2h-1.9c-0.1,0.3-0.3,0.5-0.6,0.7c-0.3,0.2-0.7,0.3-1.1,0.3c-0.5,0-1-0.1-1.4-0.5 C33.3,58.2,33.1,57.6,33.1,57.1z M36.6,55.7h-3.5c0-0.2,0-0.3,0.1-0.5c0.1-0.2,0.2-0.4,0.3-0.5c0.2-0.2,0.3-0.3,0.5-0.4 c0.3-0.1,0.6-0.2,0.8-0.2c0.4,0,0.9,0.1,1.2,0.4C36.4,54.8,36.5,55.3,36.6,55.7z M42,55.1c0-0.3,0.2-0.7,0.4-0.9 c0.3-0.2,0.6-0.3,1-0.3c0.2,0,0.4,0,0.5,0c0.2,0,0.3,0.1,0.4,0.2c0.1,0.1,0.2,0.2,0.3,0.3c0.1,0.2,0.1,0.4,0.1,0.6 c0,0.2,0,0.4-0.2,0.5c-0.2,0.1-0.4,0.2-0.6,0.3c-0.3,0.1-0.5,0.1-0.8,0.1l-0.9,0.1c-0.3,0.1-0.6,0.1-1,0.2c-0.3,0.1-0.6,0.2-0.8,0.4 c-0.3,0.2-0.5,0.4-0.6,0.7c-0.2,0.3-0.3,0.7-0.2,1.1c0,0.3,0.1,0.7,0.2,1c0.1,0.3,0.3,0.5,0.6,0.7c0.2,0.2,0.5,0.3,0.8,0.4 c0.3,0.1,0.7,0.1,1,0.1c0.5,0,1-0.1,1.4-0.2c0.5-0.1,0.9-0.4,1.2-0.7c0,0.1,0,0.2,0,0.4s0.1,0.2,0.1,0.4h2.3 c-0.1-0.2-0.2-0.5-0.2-0.7c0-0.3-0.1-0.7-0.1-1v-4c0-0.4-0.1-0.8-0.3-1.1c-0.2-0.3-0.5-0.5-0.8-0.7c-0.3-0.2-0.7-0.3-1.1-0.3 c-0.4,0-0.8-0.1-1.2,0c-0.4,0-0.9,0-1.3,0.1c-0.4,0.1-0.8,0.2-1.2,0.4c-0.3,0.2-0.6,0.5-0.8,0.8c-0.2,0.4-0.4,0.8-0.4,1.2L42,55.1z M44.8,57.4c0,0.2,0,0.3,0,0.5c0,0.2-0.1,0.4-0.2,0.6c-0.1,0.2-0.3,0.4-0.5,0.5c-0.3,0.2-0.7,0.2-1,0.2c-0.2,0-0.3,0-0.5,0 c-0.1,0-0.3-0.1-0.4-0.2c-0.1-0.1-0.2-0.2-0.3-0.3c-0.1-0.1-0.1-0.3-0.1-0.5c0-0.2,0-0.3,0.1-0.5c0.1-0.1,0.2-0.2,0.3-0.3 c0.1-0.1,0.3-0.2,0.4-0.2c0.2-0.1,0.3-0.1,0.5-0.1l0.4-0.2l0.5-0.1c0.1,0,0.3-0.1,0.4-0.1c0.1,0,0.2-0.1,0.3-0.2L44.8,57.4z M51.3,52.7v-2.3h-2.1v2.3h-1.3v1.4h1.3v4.6c0,0.3,0,0.7,0.2,1c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.1,0.5,0.2,0.8,0.3 c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.7h-0.3h-0.3c-0.2,0-0.5,0-0.7-0.1c-0.1-0.2-0.2-0.5-0.2-0.7v-3.8h1.6v-1.4 L51.3,52.7z"></path><path class="cushion st5" ng-click="vm.openRecommendation(\'cushion\')" ng-show="vm.answers[9] == 2" d="M268.4,87.8h-67.9V67.6h67.9L268.4,87.8z M212.5,75.4h2.3c-0.1-0.6-0.2-1.1-0.5-1.7c-0.2-0.5-0.6-0.9-1-1.2 c-0.4-0.3-0.9-0.6-1.4-0.8c-0.5-0.2-1.1-0.3-1.7-0.2c-0.8,0-1.5,0.1-2.2,0.4c-0.6,0.3-1.2,0.7-1.7,1.2c-0.4,0.5-0.8,1.1-1,1.8 c-0.2,0.7-0.4,1.5-0.4,2.2c0,0.7,0.1,1.5,0.4,2.2c0.2,0.6,0.6,1.2,1,1.8c0.5,0.5,1,0.9,1.7,1.2c0.7,0.3,1.5,0.4,2.2,0.4 c0.6,0,1.2-0.1,1.8-0.3c0.5-0.2,1-0.5,1.4-0.9c0.4-0.4,0.8-0.9,1-1.4c0.3-0.6,0.4-1.2,0.5-1.8h-2.3c-0.1,0.6-0.3,1.3-0.8,1.7 c-0.4,0.5-1.1,0.7-1.7,0.7c-0.5,0-0.9-0.1-1.4-0.3c-0.4-0.2-0.7-0.5-0.9-0.8c-0.2-0.4-0.4-0.7-0.5-1.2c-0.1-0.4-0.2-0.9-0.2-1.3 c0-0.5,0.1-0.9,0.2-1.4c0.1-0.4,0.3-0.8,0.5-1.2c0.2-0.3,0.5-0.6,0.9-0.8c0.4-0.2,0.9-0.3,1.4-0.3c0.3,0,0.6,0,0.8,0.1 c0.3,0.1,0.5,0.2,0.7,0.4c0.2,0.2,0.4,0.4,0.5,0.6C212.4,74.9,212.5,75.2,212.5,75.4z M223.5,82.6v-7.8h-2.1v4.1 c0.1,0.6-0.1,1.2-0.4,1.7c-0.3,0.4-0.8,0.6-1.3,0.5c-0.4,0-0.8-0.1-1.1-0.5c-0.2-0.4-0.3-0.9-0.3-1.4v-4.4h-2.1v4.8 c0,0.4,0,0.9,0.1,1.3c0.1,0.4,0.2,0.7,0.4,1c0.2,0.3,0.5,0.5,0.9,0.6c0.4,0.2,0.9,0.2,1.4,0.2c0.5,0,0.9-0.1,1.3-0.3 c0.4-0.2,0.8-0.6,1-1h0.1v1.1L223.5,82.6z M226.8,80.1h-2c0,0.9,0.4,1.7,1.2,2.1c0.4,0.2,0.7,0.4,1.1,0.4c0.4,0.1,0.9,0.1,1.3,0.1 c0.4,0,0.9,0,1.3-0.1c0.4-0.1,0.8-0.2,1.1-0.4c0.3-0.2,0.6-0.5,0.8-0.8c0.2-0.4,0.3-0.8,0.3-1.3c0-0.3-0.1-0.6-0.2-0.9 c-0.1-0.2-0.3-0.5-0.6-0.6c-0.2-0.2-0.5-0.3-0.8-0.4c-0.3-0.1-0.6-0.2-0.9-0.2l-0.9-0.2c-0.3,0-0.5-0.1-0.8-0.2 c-0.2-0.1-0.4-0.2-0.5-0.3c-0.1-0.1-0.2-0.3-0.2-0.5c0-0.1,0-0.3,0.1-0.4c0.1-0.1,0.2-0.2,0.3-0.2c0.1-0.1,0.2-0.1,0.4-0.1h0.4 c0.3,0,0.7,0.1,1,0.2c0.3,0.2,0.5,0.5,0.5,0.8h2c0-0.4-0.1-0.8-0.4-1.2c-0.2-0.3-0.5-0.6-0.8-0.8c-0.3-0.2-0.7-0.3-1.1-0.4 c-0.8-0.2-1.6-0.2-2.5,0c-0.4,0.1-0.7,0.2-1.1,0.4c-0.3,0.2-0.6,0.4-0.8,0.8c-0.2,0.4-0.3,0.8-0.3,1.2c0,0.3,0.1,0.6,0.2,0.9 c0.1,0.2,0.3,0.4,0.6,0.6c0.2,0.2,0.5,0.3,0.8,0.4c0.3,0.1,0.6,0.2,0.9,0.2c0.6,0.1,1.2,0.3,1.8,0.5c0.4,0.2,0.6,0.4,0.6,0.7 c0,0.2,0,0.3-0.1,0.5c-0.1,0.1-0.2,0.2-0.3,0.3c-0.1,0.1-0.3,0.1-0.5,0.2c-0.2,0-0.3,0-0.5,0c-0.2,0-0.4,0-0.6-0.1 c-0.2,0-0.4-0.1-0.5-0.2c-0.2-0.1-0.3-0.2-0.4-0.4C226.9,80.4,226.8,80.2,226.8,80.1z M233.2,71.8v10.7h2.1v-4.1 c0-0.6,0.1-1.2,0.4-1.7c0.3-0.4,0.8-0.6,1.3-0.5c0.4,0,0.8,0.1,1.1,0.5c0.2,0.4,0.3,0.9,0.3,1.4v4.4h2.2v-4.8c0-0.4,0-0.9-0.1-1.3 c-0.1-0.4-0.2-0.7-0.4-1c-0.2-0.3-0.5-0.5-0.9-0.6c-0.4-0.2-0.9-0.3-1.4-0.2c-0.4,0-0.8,0.1-1.2,0.3c-0.4,0.2-0.8,0.6-1,1l0,0v-4.1 L233.2,71.8z M244.3,73.6v-1.8h-2.1v1.8H244.3z M242.2,74.8v7.8h2.1v-7.8H242.2z M245.8,78.7c0,0.6,0.1,1.1,0.3,1.7 c0.2,0.5,0.5,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.3,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.6,0,1.1-0.1,1.7-0.3c0.5-0.2,0.9-0.5,1.3-0.8 c0.4-0.4,0.6-0.8,0.8-1.3c0.2-0.5,0.3-1.1,0.3-1.7c0-0.6-0.1-1.2-0.3-1.7c-0.2-0.5-0.5-0.9-0.8-1.3c-0.4-0.4-0.8-0.6-1.3-0.8 c-0.5-0.2-1.1-0.3-1.7-0.3c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.8c-0.4,0.4-0.6,0.8-0.8,1.3 C245.9,77.5,245.8,78.1,245.8,78.7L245.8,78.7z M247.9,78.7c0-0.3,0-0.6,0.1-0.9c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6 c0.3-0.2,0.6-0.2,0.9-0.2c0.3,0,0.6,0.1,0.9,0.2c0.2,0.1,0.4,0.3,0.6,0.6c0.2,0.2,0.3,0.5,0.3,0.8c0.1,0.3,0.1,0.6,0.1,0.9 c0,0.3,0,0.6-0.1,0.9c-0.1,0.3-0.2,0.6-0.3,0.8c-0.1,0.2-0.3,0.4-0.6,0.6c-0.3,0.1-0.6,0.2-0.9,0.2c-0.3,0-0.6-0.1-0.9-0.2 c-0.2-0.1-0.4-0.3-0.6-0.6c-0.2-0.2-0.3-0.5-0.3-0.8C247.9,79.3,247.9,79,247.9,78.7L247.9,78.7z M255.2,74.8v7.8h2.1v-4.1 c0-0.6,0.1-1.2,0.4-1.7c0.3-0.4,0.8-0.6,1.3-0.5c0.4,0,0.8,0.1,1.1,0.5c0.2,0.4,0.3,0.9,0.3,1.4v4.4h2.1v-4.8c0-0.4,0-0.9-0.1-1.3 c-0.1-0.4-0.2-0.7-0.4-1c-0.2-0.3-0.5-0.5-0.9-0.6c-0.4-0.2-0.9-0.3-1.4-0.2c-0.5,0-0.9,0.1-1.3,0.3c-0.4,0.2-0.8,0.6-1,1h0v-1.1 L255.2,74.8z"></path><path class="footrest st5" ng-click="vm.openRecommendation(\'footrest\')" ng-show="vm.answers[10] == 2 || vm.answers[10] == 3 || vm.answers[11] == 2 || vm.answers[11] == 3" d="M292.4,193h-67.9v-20.2h67.9L292.4,193z M228.8,177v10.7h2.4v-4.4h4.5v-1.8h-4.5V179h5.2v-2L228.8,177z M237.2,183.9c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.5,0.9,0.8,1.3c0.4,0.4,0.8,0.6,1.3,0.8c0.5,0.2,1.1,0.3,1.6,0.3 c0.6,0,1.1-0.1,1.7-0.3c0.5-0.2,0.9-0.5,1.3-0.8c0.4-0.4,0.6-0.8,0.8-1.3c0.2-0.5,0.3-1.1,0.3-1.7c0-0.6-0.1-1.1-0.3-1.7 c-0.2-0.5-0.5-0.9-0.8-1.3c-0.4-0.4-0.8-0.6-1.3-0.8c-0.5-0.2-1.1-0.3-1.7-0.3c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.8 c-0.4,0.4-0.6,0.8-0.8,1.3C237.3,182.7,237.2,183.3,237.2,183.9L237.2,183.9z M239.4,183.9c0-0.3,0-0.6,0.1-0.9 c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6c0.3-0.2,0.6-0.2,0.9-0.2c0.3,0,0.6,0.1,0.9,0.2c0.2,0.1,0.4,0.3,0.6,0.6 c0.1,0.2,0.3,0.5,0.3,0.8c0.1,0.3,0.1,0.6,0.1,0.9c0,0.3,0,0.6-0.1,0.9c-0.1,0.3-0.2,0.6-0.3,0.8c-0.1,0.2-0.4,0.4-0.6,0.6 c-0.3,0.1-0.6,0.2-0.9,0.2c-0.3,0-0.6-0.1-0.9-0.2c-0.2-0.1-0.4-0.3-0.6-0.6c-0.1-0.2-0.2-0.5-0.3-0.8 C239.4,184.5,239.3,184.2,239.4,183.9L239.4,183.9z M246.4,183.9c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.5,0.9,0.8,1.3 c0.4,0.4,0.8,0.6,1.3,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.6,0,1.1-0.1,1.7-0.3c0.5-0.2,0.9-0.5,1.3-0.8c0.4-0.4,0.6-0.8,0.8-1.3 c0.2-0.5,0.3-1.1,0.3-1.7c0-0.6-0.1-1.1-0.3-1.7c-0.2-0.5-0.5-0.9-0.8-1.3c-0.4-0.4-0.8-0.6-1.3-0.8c-0.5-0.2-1.1-0.3-1.7-0.3 c-0.6,0-1.1,0.1-1.6,0.3c-0.5,0.2-0.9,0.5-1.3,0.8c-0.4,0.4-0.6,0.8-0.8,1.3C246.5,182.7,246.4,183.3,246.4,183.9L246.4,183.9z M248.5,183.9c0-0.3,0-0.6,0.1-0.9c0.1-0.3,0.2-0.6,0.3-0.8c0.1-0.2,0.3-0.4,0.6-0.6c0.3-0.2,0.6-0.2,0.9-0.2c0.3,0,0.6,0.1,0.9,0.2 c0.2,0.1,0.4,0.3,0.6,0.6c0.1,0.2,0.2,0.5,0.3,0.8c0.1,0.3,0.1,0.6,0.1,0.9c0,0.3,0,0.6-0.1,0.9c-0.1,0.3-0.2,0.6-0.3,0.8 c-0.1,0.2-0.4,0.4-0.6,0.6c-0.3,0.1-0.6,0.2-0.9,0.2c-0.3,0-0.6-0.1-0.9-0.2c-0.2-0.1-0.4-0.3-0.6-0.6c-0.1-0.2-0.3-0.5-0.3-0.8 C248.5,184.5,248.5,184.2,248.5,183.9L248.5,183.9z M258.5,180v-2.3h-2.1v2.3h-1.3v1.4h1.3v4.6c0,0.3,0,0.7,0.2,1 c0.1,0.2,0.3,0.4,0.5,0.5c0.2,0.1,0.5,0.2,0.8,0.3c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.6h-0.3h-0.4 c-0.4,0.1-0.8-0.1-0.9-0.5c0-0.1,0-0.3,0-0.4v-3.9h1.6V180H258.5z M261.1,180v7.8h2.1v-3.5c0-0.3,0-0.7,0.1-1 c0.1-0.3,0.2-0.6,0.4-0.8c0.2-0.2,0.4-0.4,0.6-0.5c0.3-0.1,0.7-0.2,1-0.2c0.1,0,0.3,0,0.4,0l0.4,0.1v-2c-0.2,0-0.3-0.1-0.5-0.1 c-0.3,0-0.5,0-0.8,0.1c-0.2,0.1-0.5,0.2-0.7,0.3c-0.2,0.1-0.4,0.3-0.6,0.5c-0.2,0.2-0.3,0.4-0.4,0.7l0,0V180H261.1z M268.4,184.4 h5.6c0-0.6,0-1.2-0.1-1.7c-0.1-0.5-0.4-1-0.7-1.5c-0.3-0.4-0.7-0.8-1.2-1c-0.5-0.3-1.1-0.4-1.7-0.4c-0.6,0-1.1,0.1-1.6,0.3 c-0.5,0.2-0.9,0.5-1.2,0.9c-0.4,0.4-0.6,0.8-0.8,1.3c-0.2,0.5-0.3,1.1-0.3,1.6c0,0.6,0.1,1.1,0.3,1.7c0.2,0.5,0.4,0.9,0.8,1.3 c0.3,0.4,0.8,0.7,1.2,0.8c0.5,0.2,1.1,0.3,1.6,0.3c0.8,0,1.6-0.2,2.2-0.6c0.7-0.5,1.2-1.2,1.4-2H272c-0.1,0.3-0.3,0.5-0.6,0.7 c-0.8,0.5-1.8,0.4-2.5-0.1C268.6,185.5,268.4,184.9,268.4,184.4L268.4,184.4z M271.9,183h-3.5c0-0.2,0-0.3,0.1-0.5 c0.1-0.2,0.2-0.4,0.3-0.5c0.1-0.2,0.3-0.3,0.5-0.4c0.3-0.1,0.6-0.2,0.9-0.2c0.4,0,0.9,0.1,1.2,0.4 C271.7,182.1,271.8,182.6,271.9,183L271.9,183z M276.9,185.2h-2c0,0.9,0.4,1.7,1.2,2.1c0.4,0.2,0.7,0.4,1.1,0.5 c0.4,0.1,0.9,0.2,1.3,0.2c0.4,0,0.9,0,1.3-0.1c0.4-0.1,0.8-0.2,1.1-0.4c0.3-0.2,0.6-0.5,0.8-0.8c0.2-0.4,0.3-0.8,0.3-1.3 c0-0.3-0.1-0.6-0.2-0.9c-0.1-0.2-0.3-0.5-0.6-0.6c-0.2-0.2-0.5-0.3-0.8-0.4c-0.3-0.1-0.6-0.2-0.9-0.2l-0.9-0.2 c-0.3,0-0.5-0.1-0.8-0.2c-0.2-0.1-0.4-0.2-0.5-0.3c-0.1-0.1-0.2-0.3-0.2-0.5c0-0.1,0-0.3,0.1-0.4c0.1-0.1,0.2-0.2,0.3-0.2 c0.1-0.1,0.3-0.1,0.4-0.1h0.4c0.3,0,0.7,0.1,1,0.2c0.3,0.2,0.5,0.5,0.5,0.8h2c0-0.4-0.1-0.8-0.4-1.2c-0.2-0.3-0.5-0.6-0.8-0.8 c-0.3-0.2-0.7-0.3-1.1-0.4c-0.4-0.1-0.8-0.1-1.2-0.1c-0.4,0-0.8,0-1.2,0.1c-0.4,0.1-0.7,0.2-1.1,0.4c-0.3,0.2-0.6,0.4-0.8,0.8 c-0.2,0.4-0.3,0.8-0.3,1.2c0,0.3,0.1,0.6,0.2,0.9c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.2,0.5,0.3,0.8,0.4c0.3,0.1,0.6,0.2,0.9,0.2 c0.6,0.1,1.2,0.3,1.8,0.5c0.4,0.2,0.6,0.4,0.6,0.7c0,0.2,0,0.3-0.1,0.5c-0.1,0.1-0.2,0.2-0.3,0.3c-0.1,0.1-0.3,0.1-0.5,0.2 c-0.2,0-0.3,0.1-0.5,0.1c-0.2,0-0.4,0-0.6-0.1c-0.2,0-0.4-0.1-0.5-0.2c-0.1-0.1-0.3-0.2-0.4-0.4 C276.9,185.7,276.9,185.4,276.9,185.2L276.9,185.2z M286,180v-2.3h-2.1v2.3h-1.3v1.4h1.3v4.6c0,0.3,0,0.7,0.2,1 c0.1,0.2,0.3,0.4,0.5,0.5c0.2,0.1,0.5,0.2,0.8,0.3c0.3,0,0.6,0.1,0.9,0.1h0.6c0.2,0,0.4,0,0.6-0.1v-1.6h-0.3H287 c-0.4,0.1-0.8-0.1-0.9-0.5c0-0.1,0-0.3,0-0.4v-3.9h1.6V180H286z"></path></svg>');
$templateCache.put('usewchair/fit/contents/assessment-summary.html','<ion-view title=Summary><ion-content class="usewchair content assessment-summary" padding=true><h3><strong>Recommendations</strong></h3><p>If you feel your wheelchair needs to be adjusted, it is important that you schedule an assessment with your physical or occupational therapist and the assistive technology professional and/or seating and mobility specialist with <a href ng-click="openInBrowser(\'ttp://www.resna.org/member-directory/individual\', \'_blank\')">ATP certification</a>. You can discuss your concerns with the professionals and ask the therapist to check your posture, evaluate your condition, and assess the wheelchair fit and set-up before making changes on your wheelchair. Remember that when one modification is made, it may affect other parts of the wheelchair.</p><p>Based on the answers you gave in the self-assessment, here are some suggestions that a professional may help address your concerns:</p><ul class=bullet-point><li ng-if="vm.answers[1] == 1 || vm.answers[1] == 3">Depending on the wheelchair design, the seat depth may be able to be shortened or lengthened by moving the backrest forward or backward. You may want to ask the representative of the Medical Equipment Company whether your <strong>seat depth</strong> can be adjusted. The cushion may need to be replaced if the seat depth is changed.</li><li ng-if="vm.answers[2] == 1 || vm.answers[2] == 3">Depending on the wheelchair design, some wheelchairs\u2019 seat width is adjustable. You may want to ask the representative of the Medical Equipment Company whether your <strong>seat width</strong> can be adjusted. Seat width is often determined at the initial evaluation. There are some minor things you could do to adjust it temporarily, like adjusting the side guards and the armrests. It is important that you contact the professionals about this issue because a narrow chair would compress your body and could cause skin breakdown, and a wide chair could decrease your sitting stability and maneuverability of the wheelchair. If you have gained or lost a significant amount of weight, you should consider scheduling a new evaluation.</li><li ng-if="vm.answers[3] == 2">You should consider requesting a <strong>pressure mapping assessment</strong> before you purchase the next cushion. Your wheelchair cushion should be replaced every 1-2 years. If you notice any signs of skin breakdown, you should request a pressure mapping assessment immediately to see if you need a new cushion.</li><li ng-if="vm.answers[4] == 1 || vm.answers[4] == 2"><strong>Footrest angle</strong> of some power wheelchairs can be adjusted by yourself, some have to be adjusted by the representative of the Medical Equipment Company, and some are not adjustable. Adjusting the footrest angle changes the footrest length, which may lead to decreased stability of your feet and sitting position. You should consult the professionals if you have any concerns about your footrest angle.</li><li ng-if="vm.answers[5] == 1 || vm.answers[5] == 3"><strong>Footrest length (height from the floor)</strong> is adjustable on most wheelchairs, and can be changed with simple tools, like an allen wrench. The footrest length often needs to be adjusted when other parts of the chair are adjusted, like seat depth and footrest angle. Clearance of the footrest from the floor is important to watch. You should consult the professionals if you have any concerns about your footrest angle.</li><li ng-if="(vm.answers[6] == 1 || vm.answers[6] == 3)"><strong>Headrest position</strong> is adjustable using simple tools in most of the wheelchairs, but the ranges vary according the design. You can try to adjust it yourself or with the help from your friends and caregiver. Please consult a professional if your headrest cannot be adjusted or meet your needs after adjustment.</li><li ng-if="(vm.answers[7] == 1 || vm.answers[7] == 2)">Depending on wheelchair design, the<storng>controller position</storng>could be adjusted using simple tools. However, changing the location of the controller may tighten or loosen some cables connecting to it, which increase the risk of damaging the cables and connectors. Please consult a professional before adjusting the controller location on your own.</li><li ng-if="vm.answers[8] == 1 || vm.answers[8] == 2">Depending on the wheelchair model, <strong>the controller may or may not be fine-tuned to suit your need</strong>. You will have to consult the assistive technology professional and/or seating and mobility specialist when you have any wheelchair driving issues.</li></ul><div class=list><a class="item item-icon-left" ng-click=vm.forwardViaEmail()><i class="icon ion-email"></i> Forward to Email</a></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/assessment.html','<ion-view title=Assessment><ion-content class="usewchair content questionnaire" padding=true><ion-slide-box class=question-slider dynamic-height show-pager=false delegate-handle=outerSlideBox ng-init="list = {}"><ion-slide class ng-repeat="page in vm.pages"><h4 class=qq-question ng-repeat-start="question in page" ng-init="question.list = question.deserializeMultiValueFn(question.checks, vm.answers[question.id])" ng-click="navigateTo(question.state, question.params)"><span class=qnumber>{{question.id}}.</span> <span class=title style="font-size: inherit" ng-bind-html=question.text></span></h4><div class=qq-answer ng-repeat-end style="margin-bottom: 10px"><ion-radio ng-if="question.options != null" name=Q{{question.id}} ng-model=vm.answers[question.id] ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="question.checks != null" ng-repeat="item in question.list" ng-value=item.text ng-model=item.checked ng-change="vm.onChangeCheckbox(question, item)">{{ item.text }}</ion-checkbox></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class="bar-positive bar-pager"><div class=buttons ng-click=vm.prevPage() ng-hide="vm.currentIndex==0"><button class="button button-icon my-icon-mwg_d_arrow_01"></button></div><h1 class=title style="text-align: center">{{vm.currentIndex+1}} of {{vm.questionsTotal}}</h1><div class=buttons><button class="button button-icon my-icon-mwg_d_arrow_02" ng-show="vm.currentIndex+1 != vm.questionsTotal" ng-click=vm.nextPage()></button> <button class=button ng-show="vm.currentIndex+1 == vm.questionsTotal" ng-click=vm.finish(vm.answers)>Finish</button></div></ion-footer-bar></ion-view>');
$templateCache.put('usewchair/fit/contents/features-angle.html','<ion-view title=Backrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/backrest_angle_small.png> <img src=images/use/fit/backrest_angle_large.png></div><ion-scroll class=description><p>Backrest angle could affect sitting stability.</p><ul class=bullet-point><li>Most of backrest angles are between 90\xB0 to 110\xB0, based on personal preference. An <a ng-click="navHandler.gotoPage(\'name\', \'seat-angle\')">increased seat angle (seat dump)</a> is usually coupled with backrest angle smaller than 90\xB0 to maintain the torso in an upright position (shown left). This configuration helps secure the pelvis to improve sitting stability and prevent sliding forward, but requires sufficient hip joint range and torso control.</li><li>A backrest angle greater than 110\xB0 (shown right) is used to accommodate users who have decreased torso control or hip range of motion, but it may increase the chance of sliding out of the seat.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(4)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-armrest.html','<ion-view title=Armrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/armrest/armrest_remove.png></div><ion-scroll class=description><ul class=bullet-point><li>Arm rest height adjustment is necessary to provide you with optimal arm support for upright sitting</li><li>The arm rest length is necessary to make sure you can easily access your <a href ng-click="navigateTo(\'main.usewheelchair.fit.controller\')">joystick</a> as well as your sinks, tables and desks</li></ul></ion-scroll></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-camber.html','<ion-view title=Wheel class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/wheel_camber_no_camber.png> <img src=images/use/fit/wheel_camber_with_camber.png></div><ion-scroll class=description><ul class=bullet-point><li>allows you to reach handrims easily.</li><li>protects hands in tight spaces.</li><li>increases side to side (lateral) stability.</li><li>allows greater stability on side slopes.</li><li>makes it harder to propel a wheelchair.</li><li>makes a wheelchair wider at the base.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(2)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-cushion.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/cushion.jpg></div><ion-scroll class=description><p>An appropriate seat cushion is key to protect you from pressure sores, and provide seating comfort.</p><ul class=bullet-point><li>A pressure mapping assessment is usually conducted to help select or calibrate a cushion. A sensor-embedded pressure mat (shown left) is placed on top of the candidate cushion, and can show pressure distribution (shown right).</li><li>Clinicians can adjust the cushion, switch to another cushion, or adjust wheelchair setup to minimize areas with high pressure (red spots shown in the right picture).</li><li>You show always sit on a seat cushion when using a wheelchair.</li><li>DO NOT add any cushion/ pad on top of your cushion, which affects pressure redistribution and decreases sitting stability.</li><li>When switching to a cushion of different thickness, you will likely need adjustments to footrest height.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(9)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-footrest-angle.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/footrest_angle.png></div><ion-scroll class=description><p>It is also called leg-to-seat angle or hanger angle, and determined based on the knee range of motion. Some wheelchair models use elevating legrests, allowing users to change the angle of the footrests relative to the seat to extend or flex the knees. Some legrests are articulating, which means they lengthen while the legrests are elevating to give room for the knee to extend.</p><ul class=bullet-point><li>Appropriate footrest angle allows you to sit in the wheelchair stably and comfortably, and creates a smaller wheelchair footprint for better access to narrow spaces.</li><li>Only wheelchairs with elevating legrests features can change footrest angle.</li><li>You can use power elevating legrests to manage swelling of the lower extremities by using it in combination with tilt and recline features to allow elevation of the legs above the heart level (shown right).</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(10)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-footrest-length.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/footrest_length.png></div><ion-scroll class=description><p>It is also known as \u201Clegrest length\u201D and \u201Cfootrest-to-seat length\u201D. Appropriate footrest length provides good sitting stability.</p><ul class=bullet-point><li>Shorter footrest (shown left) may raise knees up thus interfering sitting at a desk, and may increase pressure underneath your buttocks and tailbone, and the risks of pressure sores.</li><li>Longer footrest (shown right) may decrease sitting stability and increase the tendency of sliding forward out of the seat.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(11)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-headrest.html','<ion-view title=Headrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/Headrest.png></div><ion-scroll class=description><p>A headrest provides support to the head and neck if you are using tilt-in space and/or recline features or need additional support to hold your head upright.</p><ul class=bullet-point><li>A headrest that wraps too tightly around the head may result in the development of pressure ulcers on the areas of contacts.</li><li>A headrest positioned too far forward can result in hyper flexion of your neck (shown left) whereas a headrest positioned too far backward can result in hyper extension of your neck (shown right).</li><li>Improper head positioning may result in discomfort, pain, choking, compromise your breathing, and restrict your visual field.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(12)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-height.html','<ion-view title=Backrest class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/backrest_height_low.png> <img src=images/use/fit/backrest_height_high.png></div><ion-scroll class=description><p>Backrest height could affect the movements of your torso and shoulders, as well as sitting stability.</p><ul class=bullet-point><li>A higher backrest (shown right) could limit your ability to reach backward, and move your torso and shoulders for propulsion. You may strain your shoulders when propelling with a higher backrest.</li><li>A higher backrest could provide more torso support and stability.</li><li>A lower backrest provides less torso support, but allows you to move freely for propelling and reaching.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(3)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=left><button class="button buttons button-icon my-icon-mwg_d_arrow_01 go-back" ng-click=vm.goBack()></button></ion-nav-buttons><ion-nav-buttons side=right><button class="button button-icon icon my-icon-mwg_a_home" goto=main.home ng-hide="$state.includes(\'main.home\')"></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('usewchair/fit/contents/features-mounting-location.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/controller_mounting_location.png></div><ion-scroll class=description><p>Appropriate positioning of the controller enables you to control your power wheelchair efficently, prevent you from hitting the joystick by accident, and allow you to access the controller in tilted or reclined positions.</p><ul class=bullet-point><li>Improper controller location can cause fatigue by increasing the effort to reach the controller (shown left).</li><li>A controller positioned too close to your body (shown right) increases the chance to accidentally activate the power wheelchair and bump into nearby people or furniture.</li><li>For joystick access, it is optimal to have your elbow slightly in front of your shoulder.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(13)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-position.html','<ion-view title=Wheel class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/wheel_position_axel_inline_with_shoulder.png> <img src=images/use/fit/wheel_position_axel_behind_shoulder.png> <img src=images/use/fit/wheel_position_axel_infront_of_shoulder.png></div><ion-scroll class=description><ul class=bullet-point><li>Wheel axle in line with shoulder (shown left): you are able to reach most of the handrim, and can easily pop a wheelie to get over obstacles/curbs. You are also relatively stable.</li><li>Wheel axle behind shoulder (shown middle): you are most stable, but can only reach a small section of the pushrim - less efficient for propelling and may strain your shoulders. You cannot easily pop a wheelie, and need more space to make turns.</li><li>Wheel axle in front of shoulder (shown right): you feel much easier to propel and pop a wheelie, but less stable and easily tip backwards.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(1)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-programming.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/power/components/controller/programmable.png></div><ion-scroll class=description><p>- Only wheelchairs with a <a href ng-click="getStaticModalPage(\'usewchair/element/contents/components-controller-types-prg.html\')">programmable controller</a> can be programmed with custom parameters. A properly programmed controller will ensure that your wheelchair responds to your commands appropriately. The parameters (based on wheelchair models) that can be tuned include:</p><ul class=bullet-point><li>Increase torque to provide more power at lower speeds</li><li>Increase acceleration, deceleration, and/or sensitivity to make the wheelchair respond quickly</li><li>Decrease acceleration, deceleration, and/or sensitivity to make the ride smoother</li><li>Filter or ignore the input from hand tremors</li><li>Decrease the maximum angles of power seating functions for safety</li></ul><p>- You can evaluate if your wheelchair controller is appropriately tuned during the <a href ng-click="getStaticModalPage(\'../../../../../views/servicedelivery/main-receive-wheelchair.modal.final-fit.html\')">final fit assessment</a> when you can test drive your new wheelchair through various scenarios, like navigating in narrow spaces, making turns in a hallway, and going up and down ramps, etc.</p><p>- You and the therapist should also work through the full ranges of power seating features (if applicable) to check for safety and seating stability.</p><p>- The Medical Equipment Company representative can adjust your controller in response to your operation and preference.</p></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(14)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-seat-angle.html','<ion-view title=Seat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/seat_angle_flat.png> <img src=images/use/fit/seat_angle_seat_dump.png></div><ion-scroll class=description><p>New users usually start with 0.5 to 1 inch of seat dump (shown right). Seat angle can be adjusted based on personal preference after users become familiar with their balance and strength.</p><ul class=bullet-point><li>Seat dump allows you to easily access pushrims, improves sitting stability, and prevents you from sliding forward out of the wheelchair.</li><li>Seat dump makes it difficult to transfer out of the wheelchair.</li><li>Flat seat (shown left) is appropriate for foot propulsion and for hip flexion &lt; 90\xB0.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(6)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-seat-depth.html','<ion-view title=Seat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/seat_depth.png></div><ion-scroll class=description><p>Seat depth is usually determined by measuring the length from the further end of the buttock to the back of the knee when a user is in a proper sitting position, and deducting 2 inches from the measured length for clearance.</p><ul class=bullet-point><li>Short seat depth (shown left): Buttocks and legs are not supported properly. There is an increased risk of pressure sores over buttocks and thighs.</li><li>Long seat depth (shown right): you may slide forward easily, and sit with slouched posture. There is an increased risk of pressure sores behind the knees and on tailbone.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(5)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-seat-height.html','<ion-view title=Seat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/seat_height_high.png> <img src=images/use/fit/seat_height_regular.png> <img src=images/use/fit/seat_height_low.png></div><ion-scroll class=description><p>Seat-to-floor height is normally around 18-20 inches based on personal preference. The ideal seat-to-floor height should allow you to touch the rear wheel axle when letting your hands drop down naturally (show middle).</p><ul class=bullet-point><li>Higher seat-to-floor height (shown left) may increase risks of tipping backward, reduce your access to handrims for efficient propulsion, and be problematic when accessing desks and tables.</li><li>Lower seat-to-floor height (shown right) may allow better access to desks and tables, but will decrease the height you can reach and ground clearance.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(8)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/features-seat-width.html','<ion-view title=Seat class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/fit/seat_width.png></div><ion-scroll class=description><p>Seat width is usually determined by measuring the widest distance between your buttocks, hips or thighs when a user is in a proper sitting position. If necessary, add 2 inches to that distance for bulky clothing, orthoses, or side panel of the armrests.</p><ul class=bullet-point><li>Seat width should be as snug as possible to make the wheelchair compact for navigating in narrow spaces.</li><li>Narrow seat (shown right) could increase risk for pressure sores</li><li>Wide seat (shown left) may not provide sufficient support for sitting balance and hinder navigation in narrow spaces.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(7)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/main.html','<ion-view title=\'<i class="icon my-icon-mwg_02_fit"></i> Fit\'><ion-content class="usewchair content" padding=true><div class=main-frame><div class=parts><div class=btn-go ng-hide=!vm.selected ng-click=vm.openGroup(vm.selected.children[0])><i class="icon my-icon-mwg_h_go03"></i></div><ng-include src="\'usewchair/fit/contents/main.map.html\'"></ng-include></div><div class=groups><ul class=list-groups><li class=btn-menu ng-class="{selected: vm.selected.title == section.title}" ng-repeat="section in vm.navData" ng-click=vm.selectGroup(section)>{{::section.title}}</li></ul></div></div><div class="list button-style"><div class="item item-icon-left yellow" ng-click="navigateTo(\'.assessment\')"><i class="icon my-icon-mwg_16_activities"></i><div class="title bold">Self Assessment</div></div><div class="item item-icon-left primary" ng-click="navigateTo(\'.summary\')"><i class="icon my-icon-mwg_e_clipboard"></i><div class="title bold">Summary</div></div></div></ion-content></ion-view>');
$templateCache.put('usewchair/fit/contents/main.map.html','<?xml version="1.0" encoding="utf-8"?><svg version=1.1 id=Layer_1 x=0px y=0px viewbox="0 0 216 216" style="enable-background:new 0 0 216 216;" xmlns=http://www.w3.org/2000/svg><style type=text/css>\n\t.st0{fill:#FFFFFF;stroke:#231F20;stroke-width:0.1905;stroke-miterlimit:10;}\n\t.st1{fill:none;}\n\t.st2{fill:#ED1C24;stroke:#000000;stroke-width:0.3005;stroke-miterlimit:10;}\n    .selected { fill: #D72328 }\n</style><path class=st0 d="M174.6,187.3L174.6,187.3c-1.7,0-3-1.4-3-3v-11c0-1.7,1.4-3,3-3l0,0c1.7,0,3,1.4,3,3v11 C177.6,185.9,176.3,187.3,174.6,187.3z"></path><path class=st0 d="M156.2,178.6L156.2,178.6c-0.9-2.2,0.1-4.7,2.3-5.6l14.3-6c2.2-0.9,4.7,0.1,5.6,2.3l0,0 c0.9,2.2-0.1,4.7-2.3,5.6l-14.3,6C159.7,181.8,157.1,180.8,156.2,178.6z"></path><path class=st0 d="M148.3,65.2L148.3,65.2c1.3,0,2.4,1.1,2.4,2.4v57.8c0,1.3-1.1,2.4-2.4,2.4l0,0c-1.3,0-2.4-1.1-2.4-2.4V67.6 C145.9,66.3,147,65.2,148.3,65.2z"></path><path class=st0 d="M68.4,183.3L68.4,183.3c-2.1-2.9-1.5-7,1.4-9.2L89,159.9c2.9-2.1,7-1.5,9.2,1.4l0,0c2.1,2.9,1.5,7-1.4,9.2 l-19.2,11.1C74.7,183.7,70.6,186.2,68.4,183.3z"></path><path class=st0 d="M91.7,91.4H78.1c-0.3,0-0.6-0.3-0.6-0.6l0,0c0-0.3,0.3-0.6,0.6-0.6h13.6c0.3,0,0.6,0.3,0.6,0.6l0,0 C92.2,91.2,92,91.4,91.7,91.4z"></path><path class=st0 d="M91.2,94.9L91.2,94.9c-0.6,0-1-0.5-1-1v-5.5c0-0.6,0.5-1,1-1h0c0.6,0,1,0.5,1,1v5.5 C92.2,94.4,91.8,94.9,91.2,94.9z"></path><g class="base st0" ng-class="{selected: vm.selected.title == \'Bases\'}"><path d="M152.5,181.2H95c-4,0-7.3-3.3-7.3-7.3v-18.6c0-4,3.3-7.3,7.3-7.3h57.5c4,0,7.3,3.3,7.3,7.3v18.6 C159.9,177.9,156.6,181.2,152.5,181.2z"></path><rect x=135.9 y=138.2 width=6.9 height=9.7></rect><rect x=104.6 y=138.2 transform="matrix(-1 4.496080e-11 -4.496080e-11 -1 216.0188 286.172)" width=6.9 height=9.7></rect></g><g class="seat st0" ng-class="{selected: vm.selected.title == \'Seat\'}"><path d="M92.9,138.2l61.7,2c2.9,0,5.2-4.4,5.2-7.2v0c0-2.9-2.3-5.2-5.2-5.2H92.9c-2.9,0-5.2,2.3-5.2,5.2v0 C87.7,135.9,90.1,138.2,92.9,138.2z"></path><path d="M82.9,127.8h64.8c1.6,0,2.9-1.3,2.9-2.9v0c0-1.6-1.3-2.9-2.9-2.9H82.9c-1.6,0-2.9,1.3-2.9,2.9v0 C80,126.5,81.3,127.8,82.9,127.8z"></path></g><g class="tire st0" ng-class="{selected: vm.selected.title == \'Tire\'}"><circle cx=174.5 cy=184.8 r=7.6></circle><circle class=st0 cx=174.5 cy=184.8 r=4.8></circle><circle cx=71.2 cy=181.3 r=11.1></circle><circle class=st0 cx=71.2 cy=181.3 r=7.1></circle><circle cx=123.7 cy=170.2 r=22.2></circle><circle class=st0 cx=123.7 cy=170.2 r=14.2></circle></g><g class="footrest st0" ng-class="{selected: vm.selected.title == \'Footrest\' || vm.selected.title == \'Footrest/Legrest\'}"><path d="M80.9,122.4l-30.4,30.4c-1,1-1,2.6,0,3.5l0.6,0.6c1,1,2.6,1,3.5,0L85,126.5c1-1,1-2.6,0-3.5l-0.6-0.6 C83.4,121.4,81.8,121.4,80.9,122.4z"></path><path d="M30,153.7l22.6-2.5c0.9,0,1.6,3.3,1.6,4.2l0,0c0,0.9-0.7,1.6-1.6,1.6H30c-0.9,0-1.6-0.7-1.6-1.6l0,0 C28.4,154.4,29.1,153.7,30,153.7z"></path></g><g class="cushion st0" ng-class="{selected: vm.selected.title == \'Cushion\'}"><path d="M141.1,108.9c0,0-23.2,1.1-33-2.5s-17.1-1.3-17.1-1.3c-3.6,0-6.5,6.7-6.5,10.3v0c0,3.6,2.9,6.5,6.5,6.5h50.1 c3.6,0,6.5-2.9,6.5-6.5v0C147.6,111.9,144.6,108.9,141.1,108.9z"></path></g><g class="backrest st0" ng-class="{selected: vm.selected.title == \'Backrest\'}"><path class d="M140.1,34.8h1.3c4,0,4.5,3.3,4.5,7.3v56.7c0,4-3.3,10.1-7.3,10.1c0,0-24-3.1-5.9-48.7 c2.1-8.6,0.1-18.2,0.1-18.2C132.8,38.1,136.1,34.8,140.1,34.8z"></path><path class=st0 d="M141.6,89.9L141.6,89.9c2.3,0,4.3-1.9,4.3-4.3V56.5c0-2.3-1.9-4.3-4.3-4.3l0,0c-2.3,0-4.3,1.9-4.3,4.3v29.1 C137.4,88,139.3,89.9,141.6,89.9z"></path></g><g class="controller st0" ng-class="{selected: vm.selected.title == \'Controller\'}"><path d="M67.1,78.6L67.1,78.6c-0.4-0.2-0.6-0.6-0.5-1l2-5.1c0.2-0.4,0.6-0.6,1-0.5v0c0.4,0.2,0.6,0.6,0.5,1l-2,5.1 C68,78.5,67.6,78.7,67.1,78.6z"></path><path d="M65.4,82.9L65.4,82.9c-1-0.4-1.5-1.5-1.1-2.5l0.7-2c0.4-1,1.5-1.5,2.5-1.1l0,0c1,0.4,1.5,1.5,1.1,2.5l-0.7,2 C67.5,82.7,66.4,83.2,65.4,82.9z"></path><path d="M62.9,80.7l8.2,2.6l9.2,1.1c1.9,0.6,3,2.6,2.4,4.5v0c-0.6,1.9-2.6,3-4.5,2.4l-18-5.5c-1.9-0.6-3-2.6-2.4-4.5 l0,0C58.3,79.4,61,80.1,62.9,80.7z"></path></g><g class="armrest st0" ng-class="{selected: vm.selected.title == \'Armrest\'}"><path class d="M137.2,98.7l12.2-5.8c1.3-0.6,1.8-2.2,1.2-3.4v0c-0.6-1.3-2.2-1.8-3.4-1.2L135,94c-1.3,0.6-1.8,2.2-1.2,3.4l0,0 C134.4,98.7,135.9,99.3,137.2,98.7z"></path><path class d="M122.4,92.2l11.9,6.3c1.3,0.7,2.8,0.2,3.5-1.1v0c0.7-1.3,0.2-2.8-1.1-3.5l-11.9-6.3c-1.3-0.7-2.8-0.2-3.5,1.1 l0,0C120.7,90,121.2,91.5,122.4,92.2z"></path><path class d=M87.8,81.2h41c1.7,0,3,1.4,3,3v0c0,1.7-1.4,3-3,3h-41c-1.7,0-3-1.4-3-3v0C84.7,82.6,86.1,81.2,87.8,81.2z></path><path class d="M95.2,93.2h28.4c1.6,0,2.9-1.3,2.9-2.9v0c0-1.6-1.3-2.9-2.9-2.9H95.2c-1.6,0-2.9,1.3-2.9,2.9v0 C92.2,91.9,93.6,93.2,95.2,93.2z"></path></g><g class="accessories st0" ng-class="{selected: vm.selected.title == \'Accessories\'}"><path class d=M137.4,66.2l-5.2,1.5c-1.7,0.5-3.4-0.5-3.9-2.2v0c-0.5-1.7,0.5-3.4,2.2-3.9l7-1.9L137.4,66.2z></path><path class d=M122.6,108.7l-1.2-5.3c-0.4-1.7,0.7-3.4,2.4-3.8l0,0c1.7-0.4,3.4,0.7,3.8,2.4l1.6,7L122.6,108.7z></path><path class d=M136.8,18.9C155.3,27,148,43.1,147,45.1c-0.3,0.5-0.3,0.4-1.2,1.8v-1.9c0,0,9.8-16.8-10.6-26.2H136.8z></path><path class d="M136.5,30.9L136.5,30.9c-3,0-5.5-2.5-5.5-5.5l-1-10.7c0-3,2.5-5.5,5.5-5.5h0c3,0,6.5,3.2,6.5,6.2v10 C142,28.5,139.5,30.9,136.5,30.9z"></path></g><g class="securement st0" ng-class="{selected: vm.selected.title == \'Securements\'}"><path d="M87.5,151.3H94c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7h-6.5c-0.9,0-1.7,0.8-1.7,1.7l0,0 C85.8,150.6,86.6,151.3,87.5,151.3z"></path><path d="M153.9,151.3h6.5c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7h-6.5c-0.9,0-1.7,0.8-1.7,1.7l0,0 C152.2,150.6,153,151.3,153.9,151.3z"></path><path d="M160,158.7h22.7c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7H160c-0.9,0-1.7,0.8-1.7,1.7l0,0 C158.3,157.9,159,158.7,160,158.7z"></path></g><g class="accessories st0" ng-class="{selected: vm.selected.title == \'Headrest\'}"><path class d=M136.8,18.9C155.3,27,148,43.1,147,45.1c-0.3,0.5-0.3,0.4-1.2,1.8v-1.9c0,0,9.8-16.8-10.6-26.2H136.8z></path><path class d="M136.5,30.9L136.5,30.9c-3,0-5.5-2.5-5.5-5.5l-1-10.7c0-3,2.5-5.5,5.5-5.5h0c3,0,6.5,3.2,6.5,6.2v10 C142,28.5,139.5,30.9,136.5,30.9z"></path></g></svg>');
$templateCache.put('usewchair/fit/contents/main.map_old.html','<svg version=1.1 id=Layer_1 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewbox="0 0 216 216" style="enable-background:new 0 0 216 216;" xml:space=preserve><style type=text/css>\n\t.st0{fill:#FFFFFF;stroke:#231F20;stroke-width:0.1905;stroke-miterlimit:10;}\n\t.st1{fill:none;}\n\t.st2{fill:#ED1C24;stroke:#000000;stroke-width:0.3005;stroke-miterlimit:10;}\n    .selected { fill: #D72328 }\n</style><path class=st0 d="M174.6,187.3L174.6,187.3c-1.7,0-3-1.4-3-3v-11c0-1.7,1.4-3,3-3l0,0c1.7,0,3,1.4,3,3v11 C177.6,185.9,176.3,187.3,174.6,187.3z"></path><path class=st0 d="M156.2,178.6L156.2,178.6c-0.9-2.2,0.1-4.7,2.3-5.6l14.3-6c2.2-0.9,4.7,0.1,5.6,2.3l0,0 c0.9,2.2-0.1,4.7-2.3,5.6l-14.3,6C159.7,181.8,157.1,180.8,156.2,178.6z"></path><path class=st0 d="M148.3,65.2L148.3,65.2c1.3,0,2.4,1.1,2.4,2.4v57.8c0,1.3-1.1,2.4-2.4,2.4l0,0c-1.3,0-2.4-1.1-2.4-2.4V67.6 C145.9,66.3,147,65.2,148.3,65.2z"></path><path class=st0 d="M68.4,183.3L68.4,183.3c-2.1-2.9-1.5-7,1.4-9.2L89,159.9c2.9-2.1,7-1.5,9.2,1.4l0,0c2.1,2.9,1.5,7-1.4,9.2 l-19.2,11.1C74.7,183.7,70.6,186.2,68.4,183.3z"></path><path class=st0 d="M91.7,91.4H78.1c-0.3,0-0.6-0.3-0.6-0.6l0,0c0-0.3,0.3-0.6,0.6-0.6h13.6c0.3,0,0.6,0.3,0.6,0.6l0,0 C92.2,91.2,92,91.4,91.7,91.4z"></path><path class=st0 d="M91.2,94.9L91.2,94.9c-0.6,0-1-0.5-1-1v-5.5c0-0.6,0.5-1,1-1h0c0.6,0,1,0.5,1,1v5.5 C92.2,94.4,91.8,94.9,91.2,94.9z"></path><g class="base st0" ng-class="{selected: vm.selected.title == \'Bases\'}"><path d="M152.5,181.2H95c-4,0-7.3-3.3-7.3-7.3v-18.6c0-4,3.3-7.3,7.3-7.3h57.5c4,0,7.3,3.3,7.3,7.3v18.6 C159.9,177.9,156.6,181.2,152.5,181.2z"></path><rect x=135.9 y=138.2 width=6.9 height=9.7></rect><rect x=104.6 y=138.2 transform="matrix(-1 4.496080e-11 -4.496080e-11 -1 216.0188 286.172)" width=6.9 height=9.7></rect></g><g class="seat st0" ng-class="{selected: vm.selected.title == \'Seat\'}"><path d="M92.9,138.2l61.7,2c2.9,0,5.2-4.4,5.2-7.2v0c0-2.9-2.3-5.2-5.2-5.2H92.9c-2.9,0-5.2,2.3-5.2,5.2v0 C87.7,135.9,90.1,138.2,92.9,138.2z"></path><path d="M82.9,127.8h64.8c1.6,0,2.9-1.3,2.9-2.9v0c0-1.6-1.3-2.9-2.9-2.9H82.9c-1.6,0-2.9,1.3-2.9,2.9v0 C80,126.5,81.3,127.8,82.9,127.8z"></path></g><g class="tire st0" ng-class="{selected: vm.selected.title == \'Tire\'}"><circle cx=174.5 cy=184.8 r=7.6></circle><circle class=st0 cx=174.5 cy=184.8 r=4.8></circle><circle cx=71.2 cy=181.3 r=11.1></circle><circle class=st0 cx=71.2 cy=181.3 r=7.1></circle><circle cx=123.7 cy=170.2 r=22.2></circle><circle class=st0 cx=123.7 cy=170.2 r=14.2></circle></g><g class="footrest st0" ng-class="{selected: vm.selected.title == \'Footrest\'}"><path d="M80.9,122.4l-30.4,30.4c-1,1-1,2.6,0,3.5l0.6,0.6c1,1,2.6,1,3.5,0L85,126.5c1-1,1-2.6,0-3.5l-0.6-0.6 C83.4,121.4,81.8,121.4,80.9,122.4z"></path><path d="M30,153.7l22.6-2.5c0.9,0,1.6,3.3,1.6,4.2l0,0c0,0.9-0.7,1.6-1.6,1.6H30c-0.9,0-1.6-0.7-1.6-1.6l0,0 C28.4,154.4,29.1,153.7,30,153.7z"></path></g><g class="cushion st0" ng-class="{selected: vm.selected.title == \'Cushion\'}"><path d="M141.1,108.9c0,0-23.2,1.1-33-2.5s-17.1-1.3-17.1-1.3c-3.6,0-6.5,6.7-6.5,10.3v0c0,3.6,2.9,6.5,6.5,6.5h50.1 c3.6,0,6.5-2.9,6.5-6.5v0C147.6,111.9,144.6,108.9,141.1,108.9z"></path></g><g class="backrest st0"><path class d="M140.1,34.8h1.3c4,0,4.5,3.3,4.5,7.3v56.7c0,4-3.3,10.1-7.3,10.1c0,0-24-3.1-5.9-48.7 c2.1-8.6,0.1-18.2,0.1-18.2C132.8,38.1,136.1,34.8,140.1,34.8z"></path><path class=st0 d="M141.6,89.9L141.6,89.9c2.3,0,4.3-1.9,4.3-4.3V56.5c0-2.3-1.9-4.3-4.3-4.3l0,0c-2.3,0-4.3,1.9-4.3,4.3v29.1 C137.4,88,139.3,89.9,141.6,89.9z"></path></g><g class="controller st0" ng-class="{selected: vm.selected.title == \'Controller\'}"><path d="M67.1,78.6L67.1,78.6c-0.4-0.2-0.6-0.6-0.5-1l2-5.1c0.2-0.4,0.6-0.6,1-0.5v0c0.4,0.2,0.6,0.6,0.5,1l-2,5.1 C68,78.5,67.6,78.7,67.1,78.6z"></path><path d="M65.4,82.9L65.4,82.9c-1-0.4-1.5-1.5-1.1-2.5l0.7-2c0.4-1,1.5-1.5,2.5-1.1l0,0c1,0.4,1.5,1.5,1.1,2.5l-0.7,2 C67.5,82.7,66.4,83.2,65.4,82.9z"></path><path d="M62.9,80.7l8.2,2.6l9.2,1.1c1.9,0.6,3,2.6,2.4,4.5v0c-0.6,1.9-2.6,3-4.5,2.4l-18-5.5c-1.9-0.6-3-2.6-2.4-4.5 l0,0C58.3,79.4,61,80.1,62.9,80.7z"></path></g><g class="armrest st0"><path class d="M137.2,98.7l12.2-5.8c1.3-0.6,1.8-2.2,1.2-3.4v0c-0.6-1.3-2.2-1.8-3.4-1.2L135,94c-1.3,0.6-1.8,2.2-1.2,3.4l0,0 C134.4,98.7,135.9,99.3,137.2,98.7z"></path><path class d="M122.4,92.2l11.9,6.3c1.3,0.7,2.8,0.2,3.5-1.1v0c0.7-1.3,0.2-2.8-1.1-3.5l-11.9-6.3c-1.3-0.7-2.8-0.2-3.5,1.1 l0,0C120.7,90,121.2,91.5,122.4,92.2z"></path><path class d=M87.8,81.2h41c1.7,0,3,1.4,3,3v0c0,1.7-1.4,3-3,3h-41c-1.7,0-3-1.4-3-3v0C84.7,82.6,86.1,81.2,87.8,81.2z></path><path class d="M95.2,93.2h28.4c1.6,0,2.9-1.3,2.9-2.9v0c0-1.6-1.3-2.9-2.9-2.9H95.2c-1.6,0-2.9,1.3-2.9,2.9v0 C92.2,91.9,93.6,93.2,95.2,93.2z"></path><path class d=M137.4,66.2l-5.2,1.5c-1.7,0.5-3.4-0.5-3.9-2.2v0c-0.5-1.7,0.5-3.4,2.2-3.9l7-1.9L137.4,66.2z></path><path class d=M122.6,108.7l-1.2-5.3c-0.4-1.7,0.7-3.4,2.4-3.8l0,0c1.7-0.4,3.4,0.7,3.8,2.4l1.6,7L122.6,108.7z></path></g><g class="accessories st0" ng-class="{selected: vm.selected.title == \'Headrest\'}"><path class d=M136.8,18.9C155.3,27,148,43.1,147,45.1c-0.3,0.5-0.3,0.4-1.2,1.8v-1.9c0,0,9.8-16.8-10.6-26.2H136.8z></path><path class d="M136.5,30.9L136.5,30.9c-3,0-5.5-2.5-5.5-5.5l-1-10.7c0-3,2.5-5.5,5.5-5.5h0c3,0,6.5,3.2,6.5,6.2v10 C142,28.5,139.5,30.9,136.5,30.9z"></path></g><g class="securement st0"><path d="M87.5,151.3H94c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7h-6.5c-0.9,0-1.7,0.8-1.7,1.7l0,0 C85.8,150.6,86.6,151.3,87.5,151.3z"></path><path d="M153.9,151.3h6.5c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7h-6.5c-0.9,0-1.7,0.8-1.7,1.7l0,0 C152.2,150.6,153,151.3,153.9,151.3z"></path><path d="M160,158.7h22.7c0.9,0,1.7-0.8,1.7-1.7l0,0c0-0.9-0.8-1.7-1.7-1.7H160c-0.9,0-1.7,0.8-1.7,1.7l0,0 C158.3,157.9,159,158.7,160,158.7z"></path><path d=M103,181.2l-1.3,7.5l1.3,0.9c0,1.3-1,2.3-2.3,2.3h0c-1.3,0-2.3-1-2.3-2.3l1.3-0.9l-1.3-7.5H103z></path></g></svg>');
$templateCache.put('power/views/use/skills/main-how.html','<ion-view title="Wheelchair Skills: How?"><ion-content class="usewchair content" padding=true><ul class=accordion><li><input type=radio name=a> <i></i><h3>Front-Wheel Drive</h3><div><a class=block ng-click="navigateTo(\'.skill\', {id: \'fwd-ff\'})">Forward and Backward</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'fwd-turn-corner\'})">Turn a Corner and in Place</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'fwd-asc-desc\'})">Ascend and Descend a Ramp</a></div></li><li><input type=radio name=a> <i></i><h3>Mid-Wheel Drive</h3><div><a class=block ng-click="navigateTo(\'.skill\', {id: \'mwd-ff\'})">Forward and Backward</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'mwd-turn-corner\'})">Turn a Corner and in Place</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'mwd-asc-desc\'})">Ascend and Descend a Ramp</a></div></li><li><input type=radio name=a> <i></i><h3>Rear-Wheel Drive</h3><div><a class=block ng-click="navigateTo(\'.skill\', {id: \'rwd-ff\'})">Forward and Backward</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'rwd-turn-corner\'})">Turn a Corner and in Place</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'rwd-asc-desc\'})">Ascend and Descend a Ramp</a></div></li><li><input type=radio name=a> <i></i><h3>Daily Activities</h3><div><a class=block ng-click="navigateTo(\'.skill\', {id: \'weight-shift\'})">Weight Shift</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'transfer\'})">Transfer</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'reaching\'})">Reaching</a></div></li><li><input type=radio name=a> <i></i><h3>Power Seating Functions</h3><div><a class=block ng-click="navigateTo(\'.skill\', {id: \'sagety\'})">Safety and Precautions</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'presure-relief\'})">Presure Relief</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'assist\'})">Assist Daily Activities</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'seat-elevation\'})">Use of Seat Elevation</a> <a class=block ng-click="navigateTo(\'.skill\', {id: \'anterior-tilt\'})">Use of Anterior Tilt</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/skills/main-why.html','');
$templateCache.put('power/views/use/skills/main.html','<ion-view title="Wheelchair Skills"><ion-content class="usewchair joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.why\')"><div class=title><strong>Why?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.how\')"><div class=title><strong>How?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right"><div class=title><strong>Self-Assessment</strong></div></div><div class="item item-icon-right"><div class=title><strong>My Skill Summary</strong></div><img class="icon aligned right" ng-src=images/survey-done.png style="height: auto; width: 40px; margin-right: 5px"></div></div></ion-content></ion-view>');
$templateCache.put('power/views/use/setup/main-how.html','<ion-view title="Fit and Set-up: How?"><ion-content class="usewchair content" padding=true><ul class=accordion><li><input type=radio name=a> <i></i><h3>Backrest</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'height\'})">Height</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'angle\'})">Angle</a></div></li><li><input type=radio name=a> <i></i><h3>Seat</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'seat-depth\'})">Depth</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'seat-width\'})">Width</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'cushion\'})">Cushion</a></div></li><li><input type=radio name=a> <i></i><h3>Footrest</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'footrest-angle\'})">Angle</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'footrest-length\'})">Length</a></div></li><li><input type=radio name=a> <i></i><h3>Controller</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'position\'})">Position</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'driving-profile\'})">Driving Profile/Setting</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'skills\'})">Wheelchair Skills</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/setup/main-why.html','<ion-view title="Fit and Setup: Why?"><ion-content class="usewchair content" padding=true></ion-content></ion-view>');
$templateCache.put('power/views/use/setup/main.html','<ion-view title="Fit and Set-up"><ion-content class="usewchair joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.why\')"><div class=title><strong>Why?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.how\')"><div class=title><strong>How?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right"><div class=title><strong>Self-assessment</strong></div></div><div class="item item-icon-right"><div class=title><strong>My Wheelchair Fit Summary</strong></div><img class="icon aligned right" ng-src=images/survey-done.png style="height: auto; width: 40px; margin-right: 0px"></div></div></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-accessories-headrest.html','<ion-view title="Positioning Accessories" class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/acc/acc_headrest.png></div></div><ion-content class=padding><ul class=bullet-point><li>Some individuals may need additional support to properly positioning head and neck.</li><li>Options include regular headrest (left), adding additional extension for anterior head support (middle), and trough headrest for additional lateral support (right).</li><li>May create pressure points on areas of contact.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-accessories-hip.html','<ion-view title="Positioning Accessories" class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/acc/acc_hip.png></div></div><ion-content class=padding><ul class=bullet-point><li>Maintain proper hip alignment.</li><li>Stabilize the pelvis and hence sitting stability.</li><li>May create pressure points on your thighs.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-accessories-lap.html','<ion-view title="Positioning Accessories" class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/acc/acc_lap.png></div></div><ion-content class=padding><ul class=bullet-point><li>Some individuals may need additional support to maintain lower limb position.</li><li>Options include lap straps (left), leg straps (middle), and ankle loops (right).</li><li>May create pressure points underneath these straps and loops.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-accessories-trunk.html','<ion-view title="Positioning Accessories" class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/acc/acc_trunk.png></div></div><ion-content class=padding><ul class=bullet-point><li>Some individuals may need additional supports to maintain the trunk in an upright positioning.</li><li>Options include lateral supports (left), chest straps (middle), and harness (right).</li><li>May interfere with trunk movements and create pressure points.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-armrest-removable.html','<ion-view title=Armrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/armrest/armrest_remove.png></div></div><ion-content class=padding><ul class=bullet-point><li>Comes in different lengths and widths</li><li>Easy for transfers and getting close to counter tops when armrests are removed</li><li>Requires users to maintain good trunk control when armrests are removed</li><li>Risks of misplacing removed armrests</li><li>Risk of un-plugging the controller from the wheelchair when removing the armrest</li><li>Needs upper limb strength and hand dexterity or extneral help to install and lock armrests in place</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-armrest-up.html','<ion-view title=Armrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/armrest/armrest_flip.png></div></div><ion-content class=padding><ul class=bullet-point><li>Comes in different lengths and widths</li><li>Easy for transfers and getting close to counter tops when armrests are flipped up</li><li>Requires users to maintain good trunk control when armrests are flipped up</li><li>Some designs will need hand dexterity or external help to lock armrests in place after they are flipped down.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-backrest-rigid.html','<ion-view title=Backrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/backrest/backrest_rigid.png></div></div><ion-content class=padding><ul class=bullet-point><li>Provides good torso support</li><li>Allows limited torso movement</li><li>Not adjustable</li><li>Additional foam pads can be inserted or a molded back cushion can be installed to accommodate individual needs</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-backrest-soft.html','<ion-view title=Backrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/backrest/backrest_soft.png></div></div><ion-content class=padding><ul class=bullet-point><li>Adjustable and can accommodate various torso shapes and curves</li><li>Allows torso movement</li><li>Easy to sag after use</li><li>Provides limited torso support</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-bases-front-fishtail.modal.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Fishtail</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul><li>Fishtailing is a problem which occurs when the rear wheels lose traction,resulting in oversteer. This can be causedby low friction surfaces.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('power/views/use/components/components-bases-front.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/bases/front.jpg></div></div><ion-content padding=true><ul class=bullet-point><li>Very easy to overcome obstacles with drive wheels in front</li><li>Good shock absorption and smooth rides due to independent suspension</li><li>Small turning radius</li><li>Not intuitive to drive</li><li>Tends to <a href ng-click="getStaticModalPage(\'power/views/use/components/components-bases-front-fishtail.modal.html\')">fishtail</a> at high speeds</li><li>Tends to lose traction on inclines</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-bases-mid-wheel.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Mid-wheel drive being caught at the bottom of a ramp</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/bases/mid_wheel_drive_stuck_on_ramp.jpg></div></div><ul><li>The drive wheels are lifted when the front casters are on the ground but the rear casters are still on the ramp. This condition causes a mid-wheel drive wheelchair to lose traction and stop moving.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('power/views/use/components/components-bases-mid.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/bases/mid.jpg></div></div><ion-content class=padding><ul class=bullet-point><li>Smallest turning radius and best maneuverability in tight spaces</li><li>Best stability on slopes with front and rear casters to keep the chair from tipping</li><li>Limited ability to overcome obstacles</li><li>Bumpy rides at high speeds due to lack of independent suspension</li><li>Sometimes could be <a href ng-click="getStaticModalPage(\'power/views/use/components/components-bases-mid-wheel.html\')">caught at the bottom of a ramp</a> with drive wheels being lifted and losing traction.</li><li>Front casters may interfere with transfers</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-bases-rear.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/bases/rear.jpg></div></div><ion-content class=padding><ul class=bullet-point><li>Intuitive to drive</li><li>Good shock absorption and smooth rides due to independent suspension</li><li>Good stability on slopes</li><li>Perform well at high speeds</li><li>Largest turning radius</li><li>Limited ability to overcome obstacles</li><li>Front casters may interfere with transfers</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-bases-summary.html','<ion-view title=Bases class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content class=padding><table id=bases-summary rules=all border=5><thead><tr><th rowspan=2 width=30%></th><th colspan=3>Base Summary</th></tr><tr><th width=23.33%>Front</th><th width=23.33%>Mid</th><th width=23.33%>Rear</th></tr></thead><tbody><tr><th>Obstacle Climbing</th><td>Best</td><td>Limited</td><td>Limited</td></tr><tr><th>Turning Radius</th><td>Small</td><td>Smallest</td><td>Large</td></tr><tr><th>Stability on Inclines</th><td>Fair</td><td>Best</td><td>Good</td></tr><tr><th>Shock Absorption</th><td>Good</td><td>Limited</td><td>Good</td></tr><tr><th>Learning Curves</th><td>Difficult</td><td>Easy</td><td>Easy</td></tr></tbody></table></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-controller-alternatives.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content class=padding><div id=grid><div class=img><img src=images/power/components/controller/alter_1.png height=150 width=150></div><div class=img><img src=images/power/components/controller/alter_2.png height=150 width=150></div><div class=text>Single switch scanning</div><div class=text>Sip and puff</div><div class=img><img src=images/power/components/controller/alter_3.png height=150 width=150></div><div class=img><img src=images/power/components/controller/alter_4.png height=150 width=150></div><div class=text>Mini joystick Chin control</div><div class=text>Foot control</div><div class=img><img src=images/power/components/controller/alter_5.png height=150 width=150></div><div class=img><img src=images/power/components/controller/alter_6.png height=150 width=150></div><div class=text>Head array control</div><div class=text>Wafer board control</div></div><ul class=bullet-point><li>Alternative controller provides options other than conventional joysticks to control a powered wheelchair for users with very limited or no hand function.</li><li>Options can include (but not limited to): Single switch scanning , Sip and puff , Mini joystick chin control, Foot control, Head Array (proximity switch) and Wafer board control.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-controller-joystick-swung.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Swung-away Mechanism</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><ul class=bullet-point><li>Swung-away mechanism is light-weight and simple.</li><li>It enables ease of transfer and allows user to be closer to counter top when controller is in swung-away position.</li><li>It adds to the width of the wheelchair in swung-away position.</li><li>It is difficult for the user to drive the wheelchair when the controller is in swung-away position.</li></ul><h1 class=title>Retractable Mount</h1><ul class=bullet-point><li>Retractable mount adds relatively smaller width to the wheelchair.</li><li>It enables ease of transfer and allows user to be closer to counter top when controller is in a retracted position.</li><li>It allows the user to drive the wheelchair when the controller is in the swung-away position.</li><li>The mount is relatively heavier.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('power/views/use/components/components-controller-joystick-type.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Types of handles</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div id=grid><div class=img><img src=images/power/components/typeofhan/1.png height=150 width=150></div><div class=img><img src=images/power/components/typeofhan/2.png height=150 width=150></div><div class=text>Large Ball</div><div class=text>Dome Shape</div><div class=img><img src=images/power/components/typeofhan/3.png height=150 width=150></div><div class=img><img src=images/power/components/typeofhan/4.png height=150 width=150></div><div class=text>U-Shape</div><div class=text>T-Shape</div><div class=img><img src=images/power/components/typeofhan/5.png height=150 width=150></div><div class=img></div><div class=text>Ergo-Joystick</div></div></ion-content></ion-modal-view>');
$templateCache.put('power/views/use/components/components-controller-joystick.html','<ion-view title=Controller class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/controller/controller_joy.png></div></div><ion-content class=padding><ul class=bullet-point><li>Control wheelchair direction, speed, power seat functions, and braking</li><li>Can have various <a href ng-click="getStaticModalPage(\'power/views/use/components/components-controller-joystick-type.html\')">types of handles</a> to provide users with limited hand functions reliable support and access to the controller</li><li>Can have fixed, swing-way, and retractable mounts</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-cushion-air.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/cushion/cushion_air.png></div></div><ion-content class=padding><ul class=bullet-point><li>A piece of foam wrapped tightly in an airtight and water resistant cover</li><li>Lightweight</li><li>Provides good postural support</li><li>Has good ability to redistribute pressure</li><li>Before sitting, open the valve to inflate it, and then close the valve. Once sitting on it, open the valve to release air to allow your hips to immerse into the cushion while the foam conforms to your buttocks. Close the valve after your buttocks settle into the cushion.</li><li>Keeps the contour for the day, but needs to be inflated each night to maintain optimal performance of the foam \u2013 leave the valve open overnight to let air flow back in.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-cushion-capsules.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/cushion/cushion_cap.png></div></div><ion-content class=padding><ul class=bullet-point><li>Air moves through the capsules upon sitting with the contour changing as you shift your weight</li><li>Has a great ability to redistribute pressure</li><li>Reduce sitting stability</li><li>Can have over- or under-inflated situations, and requires <a href ng-click="navigateTo(\'^.feature\', {id: \'pressuremap\'})">regular maintenance.</a></li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-cushion-contoured.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/cushion/cushion_foam.png></div></div><ion-content class=padding><ul class=bullet-point><li>A piece of foam or a combination of foam with different densities, where the contour can be adjusted by removing or gluing in additional pieces of foam</li><li>Relatively inexpensive</li><li>Provides good postural support</li><li>Has fair ability to redistribute pressure</li><li>Wears out faster than other types of cushions</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-cushion-gel.html','<ion-view title=Cushion class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/cushion/cushion_gel.png></div></div><ion-content class=padding><ul class=bullet-point><li>Distributes pressure by the transformation of gel-filled pouches</li><li>Has a good ability to redistribute pressure</li><li>Gel pouches are often attached to a foam base to support sitting stability</li><li>Needs daily maintenance of \u201Ckneading\u201D to redistribute the gel evenly to allow hips to immerse into the cushion and not to sink down to the bottom of the cushion</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-footrest-away.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/footrest/fr_swing.png></div></div><ion-content class=padding><ul class=bullet-point><li>Can incorporate power elevating option to allow legrest angle adjustment</li><li>Easy for transfers such as sit-to-stand, standing pivot, attendant assisted, and transfers using a swivel board</li><li>Increase wheelchair length and turning radius</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-footrest-center.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/footrest/footrest_center.png></div></div><ion-content class=padding><ul class=bullet-point><li>Some are fixed, and some have power elevating feature, depending on the wheelchair make and model</li><li>Require less space for storage when the wheelchair is not occupied</li><li>Decrease turning radious</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-footrest-elevating.html','<ion-view title=Footrest class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/footrest/footrest_power.png></div></div><ion-content class=padding><ul class=bullet-point><li>Can incorporate power elevating option to allow legrest angle adjustment</li><li>Easy for transfers such as sit-to-stand, standing pivot, attendant assisted, and transfers using a swivel board</li><li>Increase wheelchair length and turning radius</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=primary><button class="button button-icon ion-arrow-return-left" ng-click=vm.goBack()></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('power/views/use/components/components-psf-elevation.html','<ion-view title="Power Seat Functions" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image"><div class=wrapper><img src=images/power/components/psf/elevation.gif></div></div><ion-content class=padding><ul class=bullet-point><li>Assist with daily activities (e.g., reaching, transfers, and working at surfaces of various heights)</li><li>Preserve upper limbs by reducing overhead activities</li><li>Achieve eye-contact and facilitate social interaction</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-psf-recline.html','<ion-view title="Power Seat Functions" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image"><div class=wrapper><img src=images/power/components/psf/recline.gif></div></div><ion-content class=padding><ul class=bullet-point><li><a href ng-click="navigateTo(\'main.power.empty\')">Assist with pressure redistribution</a></li><li>Accommodate limited hip flexion</li><li>Accommodate posture change due to fluctuation in muscle tone</li><li>Allow users to lie down when used with elevating legrests</li><li>Increase sitting comfort</li><li>Assist with daily activities (e.g., catherization and dressing)</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-psf-standing.html','<ion-view title="Power Seat Functions" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image"><div class=wrapper><img src=images/power/components/psf/standing.jpg></div></div><ion-content class=padding><ul class=bullet-point><li>May improve health conditions by<ul class=bullet-point><li>Assisting with bladder emptying and bowel function</li><li>Increasing bone density</li><li>Improving circulation and pressure relief</li><li>Maintaining joint movement</li></ul></li><li>Achieve eye-contact and facilitate social interaction</li><li>Allow users to get close to any work station for daily activities</li><li>Not suitable for everyone. Assessment by a physiatrist or therapist is required. Some general requirements include<ul class=bullet-point><li>Good bone density for weight bearing</li><li>Ability to maintain stable blood pressure and circulation in standing positions</li><li>Sufficient range of motion in hips, knees, and ankles to be positioned in standing</li><li>Good skin condition (less prone to shear forces when switching positions between sitting and standing)</li></ul></li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-psf-tilt.html','<ion-view title="Power Seat Functions" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><div class="sticky-frame has-header one image"><div class=wrapper><img src=images/power/components/psf/tilt-posterior.gif> <img src=images/power/components/psf/tilt-anterior.gif></div></div><ion-content class=padding><h4>Posterior Tilt-in-Space (left)</h4><ul class=bullet-point><li><a href ng-click="navigateTo(\'main.power.empty\')">Assist with pressure redistribution</a></li><li>Increase sitting tolerance and comfort</li><li>Increase postural stability and prevent sliding</li></ul><h4>Anterior Tilt-in-Space (right)</h4><ul class=bullet-point><li>Assist with forward reach</li><li>Assist with transfer for those with reduced lower extremity strength</li><li>Assist with tone and reflex management</li><li>Easy to get under a surface (e.g., desk and sink) for daily activities</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-securements-docking.html','<ion-view title="Securements in Vehicle" class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/sec/sec_docking.png></div></div><ion-content class=padding><ul class=bullet-point><li>Secures a wheelchair with a docking pin installed underneath the wheelchair locked in the docking base installed on the vehicle floor .</li><li>Provides independent automatic securement and disengagement.</li><li>Quick securement time.</li><li>Minimizes error in securement process.</li><li>Capable of safely withstanding crash forces.</li><li>Require additional wheelchair hardware.</li><li>May not be compatable to certain wheelchair models. Need to check with the manufacturer/supplier.</li><li>Docking hardware may affect ground clearance.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-securements-four.html','<ion-view title="Securements in Vehicle" class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/sec/sec_four.png></div></div><ion-content class=padding><ul class=bullet-point><li>Secure a wheelchair at four securement points and tie them down to the vehicle at four separate anchor points .</li><li>Capable of withstanding crash forces and improve crash response and stability.</li><li>Adaptable to most wheelchair types without additional wheelchair hardware required.</li><li>Lengthy securement time.</li><li>Requires assistant from others for securement.</li><li>Tiedown straps are easily misplaced or soiled.</li><li>Often lack of clear labels or structures to indicate securements points on a wheelchair, resulting in ineffective securement.</li><li>Some wheelchair models equip the rings on the frame to attach the tiedown system. When there are no rings on the frame to show clear strap attachment location, the risk of ineffective securement increases.</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-tire-pneumatic.html','<ion-view title=Tire class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/tire/tire_pneumatic.png></div></div><ion-content class=padding><ul class=bullet-point><li>Provides good shock absorption and smooth rides</li><li>Requires <a href ng-click="navigateTo(\'main.power.maintain.weekly-inspect\')">weekly maintenance</a> to check and maintain tire pressure</li><li>Has risks of being punctured</li></ul></ion-content></ion-view>');
$templateCache.put('power/views/use/components/components-tire-solid.html','<ion-view title=Tire class="usewchair content has-content-bar" on-swipe-left=vm.nextPage() on-swipe-right=vm.prevPage()><div class="sticky-frame has-header one image component"><div class=wrapper><img src=images/power/components/tire/tire_solid.png></div></div><ion-content class=padding><ul class=bullet-point><li>No need for weekly maintenance</li><li>Requires monthly check for wear and tear</li><li>Heavy weight</li><li>Provides limited shock absorption</li></ul></ion-content></ion-view>');
$templateCache.put('imageviewer/viewer.html','<ion-modal-view class="maintenance content"><ion-header-bar class=bar-positive><h1 class=title>{{vm.title || "Image Viewer"}}</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=vm.closeModal() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding><div class="frame borderless"><img src={{vm.imgSrc}} class=jpg></div></ion-content></ion-modal-view>');
$templateCache.put('about.html','<ion-view title=About><ion-content class=about><div class=list><div class="item item-spacer"></div><div class="item item-divider">SMART Virtual Coach</div><div class="item item-body"><p>This App aims to inform and encourage consumers and their families to play an active role in acquiring, using, and maintaining their wheelchairs and handling health issues related to wheelchair use. Included in this app, with minor modifications, are the following: the Wheelchair Skills Programs developed at Dalhousie University, the Wheelchair Maintenance Training Program developed through the Collaboration on Mobility Training (NIDILRR grant #90DP0025), and the Mobility Map developed at United Spinal Association contributed informative educational materials for wheelchair users. The App is co-developed by the Department of Rehabilitation Sciences and Technology at the University of Pittsburgh and United Spinal Association under the support of the National Institute on Disability, Independent Living, and Rehabilitation Research (Grant # 90DP0056).</p></div></div><div class=list><div class="item item-divider">Contributors</div><div class="item item-body"><p>Dr. Dan Ding, Dr. Hsin-Yi Liu, Dr. Theresa Crytzer, Dr. Jon Pearlman, Dr. Mark Schmeler, Dr. Alicia Koontz, Dr. Bambang Parmanto, Dr. Rory Cooper, Rosemarie Cooper, Annmarie Kelleher, Maria Toro, Jennifer Wolff, Alexandra Bennewith</p></div></div><div class=list><div class="item item-divider">References</div><div class="item item-body"><ul><li>Mobility map.</li><li>\u201CManual Wheelchair Skills: Guidelines for Instructing\u201D by Ian Denison.</li><li>RESNA Position Paper: The Application of Tilt, Recline, and Elevating Legrests for Wheelchairs.</li><li>RESNA Position Paper: The Application of Ultralight Manual Wheelchairs.</li><li>RESNA Position Paper: The Application of Wheelchairs, Seating Systems, and Secondary Supports for Positioning vs. Restraint.</li><li>Wheelchair Service Provision Guide by RESNA.</li><li>PVA Clinical Practice Guidelines: Pressure Ulcer Prevention and Treatment Following Spinal Cord Injury.</li><li>PVA Clinical Practice Guidelines: Preservation of Upper Limb Function Following Spinal Cord Injury.</li></ul></div><div class="item item-spacer"></div><div class=list><div class="item item-divider">About The App</div><div class="item item-body"><p><span><strong>App Name:</strong></span><span style="display: block">{{ENV.appName}}</span> <span><strong>Version:</strong></span><span style="display: block">{{ENV.build.version}}</span> <span><strong>Built Time:</strong></span><span style="display: block">{{ENV.build.time | date:\'medium\'}}</span> <span><strong>Api Address:</strong></span><span style="display: block">{{ENV.apiEndpoint}}</span></p></div></div></div></ion-content></ion-view>');
$templateCache.put('contact_detail.html','<ion-view title=Contacts><ion-content class="contacts spacer"><div class=list><div class="item item-avatar"><img src=images/person.png><h2>{{contact.title}} {{contact.firstName}} {{contact.lastName}}</h2><p>{{contact.group}}</p></div><div class=list><a href=tel:{{contact.phoneNumber}} class="item item-icon-right">Phone <span class=item-note>{{contact.phoneNumber}}</span> <i class="icon ion-ios7-telephone-outline"></i></a><div class=item>Address <span class=item-note>{{contact.address}}</span></div><a href=mailto:{{contact.email}} class="item item-icon-right">Email <span class=item-note>{{contact.email}}</span> <i class="icon ion-ios7-email-outline"></i></a></div><button class="button button-positive button-block" ui-sref="main.contacts.form({id: contact.id})">Edit</button> <button class="button button-block button-assertive" ng-click=delete(contact) ng-if=contact.id>Delete</button></div></ion-content></ion-view>');
$templateCache.put('contact_form.html','<ion-view title=Contacts><ion-content class="contacts spacer"><form name=contactForm novalidate><div class=list><div class="item item-divider">{{contact.group}}</div><label class="item item-input"><input type=text ng-model=contact.title placeholder=Title></label><label class="item item-input"><input type=text ng-model=contact.firstName required placeholder="First Name - required"></label> <label class="item item-input"><input type=text ng-model=contact.lastName required placeholder="Last Name - required"></label></div><div class=list><label class="item item-input"><input type=text ng-model=contact.phoneNumber required placeholder="Phone Number - required"></label> <label class="item item-input"><textarea ng-model=contact.address placeholder=Address></textarea></label> <label class="item item-input"><input type=text ng-model=contact.email placeholder=Email></label></div><button class="button button-positive button-block" ng-disabled=contactForm.$invalid ng-click=save()>Save</button></form></ion-content></ion-view>');
$templateCache.put('contacts.html','<ion-view title=Contacts><ion-content class="contacts spacer"><div class=list ng-repeat="group in contactGroups"><div class="item item-divider item-icon-right">{{group}} <i class="icon ion-ios-plus-outline link-pointer" ng-click=addNew(group) style="font-size: 2em"></i></div><a ui-sref="main.contacts.detail({id: contact.id})" class="item item-icon-right" ng-repeat="contact in contacts[group]">{{contact.title}} {{contact.firstName}} {{contact.lastName}} <i class="icon ion-chevron-right icon-accessory"></i></a></div><div class=list ng-repeat="group in contactGroupsD"><div class="item item-divider item-icon-right" ng-click="actionOnGroup(group); $event.stopPropagation();">{{group}} <i class="icon ion-ios-plus-outline link-pointer" ng-click=addNew(group);$event.stopPropagation(); style="font-size: 2em"></i></div><a ui-sref="main.contacts.detail({id: contact.id})" class="item item-icon-right" ng-repeat="contact in contacts[group]">{{contact.title}} {{contact.firstName}} {{contact.lastName}} <i class="icon ion-chevron-right icon-accessory"></i></a></div><div class=list><div class="item item-divider item-icon-right" ng-click=addNewGroup(group)>Add Category ...</div></div></ion-content></ion-view>');
$templateCache.put('dashboard.html','<ion-view class=home title="Power WC Guide"><ion-content scroll=false><ul class=menu-grid><li class="menu-item theme-bg-get" ng-click="navigateTo(\'main.serdelivery\')"><i class="icon my-icon-mwg_03_get"></i><h2>Get</h2></li><li class="menu-item theme-bg-use" ng-click="navigateTo(\'main.usewheelchair\')"><i class="icon my-icon-mwg_01_use"></i><h2>Use</h2></li><li class="menu-item theme-bg-maintain" ng-click="navigateTo(\'main.maintenance\')"><i class="icon my-icon-mwg_04_maintain"></i><h2>Maintain</h2></li><li class="menu-item theme-bg-health" ng-click="navigateTo(\'main.healthissues\')"><i class="icon my-icon-mwg_05_health"></i><h2>Health</h2></li><li class="menu-item theme-bg-resources" ng-click="navigateTo(\'main.resources\')"><i class="icon my-icon-mwg_06_resources"></i><h2>Resources</h2></li></ul></ion-content></ion-view>');
$templateCache.put('forgotpass_modal.html','<ion-modal-view><form name=form ng-submit=submit(form) novalidate><ion-header-bar class="bar bar-positive"><h1 class=title>Forgot Password</h1></ion-header-bar><ion-content scroll=false><div class=login-content><div class="list list-inset"><label class="item item-input"><i class="icon ion-person"></i> <input type=text name=email placeholder=Email required ng-model=data.email></label></div><div class="row row-center bottom-row"><div class="col col-50"><button type=button class="button button-block button-assertive" ng-click=modal.hide()>Cancel</button></div><div class="col col-50"><button type=submit class="button button-block button-positive" ng-disabled=form.$invalid>Submit</button></div><div class="col col-10"></div></div></div></ion-content></form></ion-modal-view>');
$templateCache.put('landing.html','<ion-pane><ion-content id=landing padding=true scroll=false><div class=banner><div>SMART Virtual Coach</div></div></ion-content></ion-pane>');
$templateCache.put('login.html','<ion-pane><ion-content class="login padding" scroll=true><div class=login-content><div class=logo><img ng-src=images/iconsv2/logo.svg></div><div class=form-login><form name=form novalidate><div class=list><label class="item item-input"><i class="icon ion-person"></i> <input type=text name=userName placeholder=Username required ng-model=account.username></label> <label class="item item-input"><i class="icon ion-locked"></i> <input type=password name=userPassword placeholder=Password required ng-model=account.password></label></div><div class="row row-center"><div class=col><div class=checkbox><input type=checkbox ng-model=account.staySignIn> <span>Stay Signed in</span></div><div><a ng-click=forgotPassword()>Forget Password?</a></div></div></div><div class="row row-center bottom-row" ng-if=form.$valid><div class="col col-10"></div><div class="col col-80"><button type=submit class="button button-block button-outline button-dark button-login" ng-click=login(form)>Login</button></div><div class="col col-10"></div></div><div class="row row-center bottom-row" ng-if=form.$invalid><div class="col col-100"><div class="button-icon-text hcenter" ng-click=register()><img ng-src=images/iconsv2/newuser.svg> <span>New User</span></div></div></div></form></div></div></ion-content></ion-pane><script id=modal-deviceType.html type=text/ng-template><div class="list"> <ion-radio ng-repeat="item in deviceTypeList" ng-value="item.key" ng-model="data.deviceType"> {{ item.value }} </ion-radio> </div></script>');
$templateCache.put('login_modal.html','<ion-modal-view><form name=loginForm ng-submit=login(loginForm) novalidate><ion-header-bar class="bar bar-positive"><h1 class=title>Login</h1></ion-header-bar><ion-content scroll=false><div class=login-content><div class="list list-inset"><label class="item item-input"><i class="icon ion-person"></i> <input type=text name=userName placeholder=Username required ng-model=account.username></label> <label class="item item-input"><i class="icon ion-locked"></i> <input type=password name=userPassword placeholder=Password required ng-model=account.password></label></div><div class=row><div class=col><a href>Forget Password?</a></div></div><div class="row row-center bottom-row"><div class="col col-50"><button type=button class="button button-block button-assertive" ng-click=modal.hide()>Cancel</button></div><div class="col col-50"><button type=submit class="button button-block button-positive" ng-disabled=loginForm.$invalid>Login</button></div><div class="col col-10"></div></div></div></ion-content></form></ion-modal-view>');
$templateCache.put('menu.html','<ion-side-menus><fade-bar ng-show=isIOS></fade-bar><ion-side-menu-content><ion-nav-bar class=bar-positive animation=nav-title-slide><ion-nav-back-button></ion-nav-back-button></ion-nav-bar><ion-nav-view name=main-content animation=no-animation></ion-nav-view></ion-side-menu-content><ion-side-menu side=right><ion-header-bar class=bar-positive><h1 class=title>Menu</h1></ion-header-bar><ion-content><div class=list><a nav-clear menu-close class="item item-icon-left" ui-sref=main.dashboard><i class="icon ion-ios7-home"></i> Dashboard</a><div class="item item-divider"></div><a menu-close class="item item-icon-left" ui-sref=main.profile><i class="icon ion-ios7-person"></i> Profile</a> <a menu-close class="item item-icon-left" ui-sref=main.settings><i class="icon ion-ios7-cog"></i> Settings</a> <a menu-close class="item item-icon-left" ui-sref=main.about><i class="icon ion-ios7-information"></i> About</a> <a menu-close class="item item-icon-left" ng-click=logout()><i class="icon ion-log-out"></i> Logout</a></div></ion-content></ion-side-menu></ion-side-menus>');
$templateCache.put('more.html','<ion-view title=More><ion-content><div class=list><div class="item item-divider transparent" ng-if=authenticated></div><a class="item item-icon-left" ui-sref=main.profile ng-if=authenticated><i class="icon ion-person"></i> Profile</a><div class="item item-divider transparent"></div><a class="item item-icon-left" ui-sref=main.settings><i class="icon ion-settings"></i> Settings</a><div class="item item-divider transparent"></div><a class="item item-icon-left" ui-sref=main.about><i class="icon ion-information"></i> About</a><div class="item item-divider transparent"></div><div class=item ng-click=showTermOfUse()><i class=icon></i> Term of Use</div></div><button class="button button-block button-assertive" ng-click=logInOut()>{{logInOutLabel}}</button> <button class="button button-block button-positive" ng-show=!authenticated ng-click=register()>Register</button></ion-content></ion-view>');
$templateCache.put('offline.html','<ion-pane><ion-content id=offline><div class=center>Offline</div></ion-content></ion-pane>');
$templateCache.put('profile.html','<ion-view view-title="My Profile"><ion-content><div class=list ng-show=profile><a class="item item-icon-right" ui-sref="main.profile-select({type: \'gender\'})">Gender <span class=item-note>{{profile.gender}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class=item mobi-picker=profile.dateOfBirth mobi-picker-options="{ rows: 3, dateFormat: \'yy\', dateOrder: \'yy\', theme: MOBIPICKER_THEME, setText: \'Done\' }">Year of Birth <span class=item-note>{{profile.dateOfBirth | date:\'yyyy\'}} ({{profile.formatedYOB.age}} yr)</span></a> <a class="item item-icon-right" ui-sref="main.profile-select({type: \'disability\'})">Primary Disability <span class=item-note>{{profile.disability}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ui-sref="main.profile-select({type: \'transfer-strategy\'})">Transfer Strategy <span class=item-note>{{profile.transferStrategy}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ui-sref="main.profile-select({type: \'funding\'})">Funding <span class=item-note>{{profile.funding}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ui-sref="main.profile-select({type: \'living\'})">Living Situation <span class=item-note>{{profile.livingStatus}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ui-sref="main.profile-select({type: \'employment\'})">Employment <span class=item-note>{{profile.employment}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ui-sref=main.profile-device>Device <span class=item-note>{{profile.primaryDevice.model}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a></div><button class="button button-block button-assertive" ng-if=justRegister ui-sref=main.dashboard>Done</button></ion-content></ion-view><script id=select-addnew.html type=text/ng-template><ion-view title="New {{title}}"> <ion-nav-buttons side="right"> <button class="button"> Save </button> </ion-nav-buttons> <ion-content> <div class="item item-divider"><p>Note: Add new value if really needed!</p></div> <div class=" list-inset"> <label class="item item-input"> <span class="input-label">Value</span> <input type="text" ng-model="new.value"> </label> </div> </ion-content> </ion-view></script><script id=select-device-model.html type=text/ng-template><ion-view title="Device Type"> <ion-content> <div class="list list-inset"> <label class="item item-input"> <i class="icon ion-search placeholder-icon"></i> <input type="text" placeholder="Search" ng-model="searchText"> </label> </div> <div class="list list-inset"> <ion-radio ng-repeat="item in _typeList | filter:searchText" ng-value="item.model" ng-model="modelField"> <h2>{{item.model}}</h2> <p>Make: {{item.make}}</p> </ion-radio> </div> <div class="list list-inset"> <a href class="item item-icon-left" ui-sref="main.profile-select-device-addmodel"> <i class="icon ion-ios7-plus-empty"></i> Add New ...</a> </div> </ion-content> </ion-view></script><script id=select-device-addmodel.html type=text/ng-template><ion-view title="New Device Model"> <ion-nav-buttons side="right"> <button class="button"> Save </button> </ion-nav-buttons> <ion-content> <div class="item item-divider"><p>Note: Add new value if really needed!</p></div> <div class=" list-inset"> <label class="item item-input"> <span class="input-label">Make</span> <input type="text" ng-model="new.make"> </label> <label class="item item-input"> <span class="input-label">Model</span> <input type="text"> </label> </div> </ion-content> </ion-view></script>');
$templateCache.put('profile_device.html','<ion-view title=Device><ion-content ng-show=success><div class=no-device ng-if="!devices || devices.length <= 0">No device entered yet.</div><div class=list ng-if="devices.length > 0"><a class="item item-icon-right" ng-repeat="device in devices" ui-sref="main.profile-device-form({id: \'{{device.id}}\'})"><h2>{{device.model}}<span class=primary-device ng-if="device.id == profile.primaryDeviceId">Primary</span></h2><p>Make: {{device.make}}<br>Usage: {{device.usage}}<br></p><i class="icon ion-chevron-right icon-accessory"></i></a></div><button class="button button-block button-positive" ng-click=addNew()>Add New Device</button></ion-content></ion-view>');
$templateCache.put('profile_device_form.html','<ion-view title=Device><ion-content padding=true><div class=list><a class="item item-icon-right" ui-sref="main.profile-select({type: \'make\'})">Device Make <span class=item-note>{{device.make}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ng-click=selectModel()>Device Model <span class=item-note>{{device.model}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class="item item-icon-right" ng-click=selectAccessories()>Accessories <span class=item-note>{{device.accessories}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a> <a class=item id=startDate mobi-picker=device.startDate mobi-picker-options="{ rows: 3, dateFormat: \'yy\', dateOrder: \'yyyy\', theme: MOBIPICKER_THEME, setText: \'Done\' }">Start Year <span class=item-note>{{device.startDate.getFullYear()}}</span></a> <a class=item id=endDate mobi-picker=device.endDate mobi-picker-options="{ rows: 3, dateFormat: \'yy\', dateOrder: \'yyyy\', theme: MOBIPICKER_THEME, setText: \'Done\' }">End Year <span class=item-note>{{ device.endDate.getFullYear() || \'Current\'}}</span></a> <a class="item item-icon-right" ui-sref="main.profile-select({type: \'usage\'})">Usage <span class=item-note>{{device.usage}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a></div><div class="list card"><ion-toggle ng-model=device.primary toggle-class=toggle-assertive>Primary Device</ion-toggle></div><button class="button button-block button-positive" ng-click=save()>Save</button> <button class="button button-block button-assertive" ng-click=delete(device.id) ng-if=device.id>Delete</button></ion-content></ion-view>');
$templateCache.put('profile_select_list.html','<ion-view title={{title}} class=profile><ion-content><div class="list list-inset"><ion-radio ng-if=!multiple ng-repeat="item in _list" ng-value="item.value || item.model || item" ng-model=data.modelField ng-change="updateSelect(data.modelField, item.id, item.deviceType, false)">{{ item.value || item.model || item}}</ion-radio><ion-checkbox ng-if=multiple ng-repeat="item in _list" ng-value=item.text ng-model=item.checked ng-change="updateMultiSelect(item.text, item.checked)">{{ item.text }}</ion-checkbox><label class="item item-input" ng-if=showCustomInput()><input type=text placeholder="Other - type here" ng-model=data.modelCustom ng-change="updateSelect(data.modelCustom, null, null, true)"> <i class="radio-icon icon ion-checkmark" ng-show="data.modelCustom.length > 0"></i></label></div></ion-content></ion-view>');
$templateCache.put('register_modal.html','<ion-modal-view><form name=registerForm novalidate><ion-header-bar class="bar bar-positive"><h1 class=title>Register</h1></ion-header-bar><ion-content class=register><div class=list><label class="item item-input"><i class="icon ion-person"></i> <input type=text name=userName placeholder="Choose Username" ng-model=account.username required></label> <label class="item item-input"><i class="icon ion-email"></i> <input type=email name=userEmail placeholder="Email Address" ng-model=account.email required></label> <label class="item item-input"><i class="icon ion-locked"></i> <input type=password name=userPassword placeholder="New Password" ng-model=account.password required></label> <label class="item item-input"><i class="icon ion-locked"></i> <input type=password name=userRetypePassword placeholder="Retype Password" ng-model=account.retypePassword required></label><div class="item item-divider">Your Primary Device Type:</div><ion-radio ng-repeat="item in deviceTypeList" ng-value=item.key ng-model=account.deviceType name=deviceType required>{{ item.value }}</ion-radio></div><div style="color: red; height: 15px; text-align: center"><span ng-if="registerForm.userPassword.$valid && registerForm.userRetypePassword.$valid && account.password != account.retypePassword">password does not match</span></div><div class="row row-center"><div class="col col-50"><button class="button button-block button-assertive" ng-click=modal.hide()>Cancel</button></div><div class="col col-50"><button type=submit class="button button-block button-positive" ng-click=register(registerForm) ng-disabled="registerForm.$invalid || account.password != account.retypePassword">Submit</button></div><div class="col col-10"></div></div></ion-content></form></ion-modal-view>');
$templateCache.put('review_block.html','<ion-view title=Reviews><div class="bar bar-subheader bar-light"><div class=button-bar><a class=button ng-repeat="item in tabs" ng-class="{\'active\': activeTab==$index}" ng-click=toggle($index)>{{item}}</a></div></div><ion-nav-view name=review-content animation=slide-left-right></ion-nav-view></ion-view>');
$templateCache.put('review_device.html','<ion-view title="My Devices"><ion-content class=has-subheader><ion-radio class=myradio ng-repeat="device in myDevices" ng-value=device ng-model=review.device ng-change=updateSelect(modelField)><h2>{{device.model}}</h2><p>Make: {{device.make}}<br>Usage: {{device.usage}}<br></p></ion-radio></ion-content></ion-view>');
$templateCache.put('router.html','<ion-pane id=router ng-cloak><ion-content padding=true><div id=banner><div>SMART Virtual Coach</div></div></ion-content></ion-pane>');
$templateCache.put('settings-devicetype.html','<ion-view title="Device Type"><ion-content><div class="item item-spacer item-text-wrap"><h2>Please select the primary type of your mobility device</h2><p>If you change the device type, the content of wheelchair usage and maintenance materials will be changed</p></div><form name=settingsForm novalidate><div class="list list-inset"><ion-radio ng-repeat="item in deviceTypeList" ng-value=item.key ng-model=settings.deviceType required>{{ item.value }}</ion-radio></div><button class="button button-block button-positive" ng-click=save() ng-disabled="settingsForm.$invalid || !settingsForm.$dirty">Save</button></form></ion-content></ion-view>');
$templateCache.put('settings.html','<ion-view title=Settings><ion-content padding=false><div class=list><div class="item item-divider transparent"></div><a class="item item-icon-right" ui-sref=main.settings.device-type>Device Type <span class=item-note>{{settings.deviceType}}</span> <i class="icon ion-chevron-right icon-accessory"></i></a><div class="item item-divider transparent"></div><ion-toggle ng-change=staySignIn() ng-model=settings.staySignIn toggle-class=toggle-assertive>Stay Sign In</ion-toggle><ion-toggle ng-change=serviceDeliveryMessage() ng-model=settings.stopPopupServiceDelivery toggle-class=toggle-assertive>Stop Service Delivery message</ion-toggle><ion-toggle ng-change=stopPopupSetupHow() ng-model=settings.stopPopupSetupHow toggle-class=toggle-assertive>Stop Fit and Setup (How) message</ion-toggle></div></ion-content></ion-view><script id=device-type.html type=text/ng-template></script><script id=change-email.html type=text/ng-template><ion-view title="Email"> <form name="settingsForm" novalidate> <ion-nav-buttons side="right"> <button class="button button-clear button-light" ng-click="save()" ng-disabled="settingsForm.$invalid || !settingsForm.$dirty"> Done </button> </ion-nav-buttons> <ion-content> <!-- <div class="item item-divider"><p>Note: Any instruction</p></div> --> <div class=" list-inset"> <label class="item item-input"> <span class="input-label">Email</span> <i class="icon ion-checkmark" ng-show="settingsForm.$valid"></i> <input type="email" name="userEmail" ng-model="settings.email" required> </label> </div> </ion-content> </form> </ion-view></script><script id=change-password.html type=text/ng-template><ion-view title="Change Password"> <form name="settingsForm" novalidate> <ion-nav-buttons side="right"> <button class="button button-clear button-light" ng-click="save()" ng-disabled="settingsForm.$invalid || !settingsForm.$dirty"> Done </button> </ion-nav-buttons> <ion-content> <!--<div class="item item-divider"><p>Note: Any instruction</p></div>--> <div class=" list-inset"> <label class="item item-input"> <span class="input-label">New</span> <i class="icon ion-checkmark" ng-show="!(settingsForm.password.$error.required)"></i> <input type="password" name="password" ng-model="settings.password" required> </label> <label class="item item-input"> <span class="input-label">Retype</span> <i class="icon ion-checkmark" ng-show="!(settingsForm.confirm.$error.match || settingsForm.confirm.$error.required)"></i> <input type="password" name="confirm" ng-model="settings.confirm" required data-match="settings.password"> </label> </div> </ion-content> </form> </ion-view></script>');
$templateCache.put('start_page.html','<ion-pane><ion-content id=start padding=true scroll=false><div class=content><div id=greeting class=padding-horizontal><div id=title>Welcome to<br>Virtual Wheelchair Coach</div><div id=description>To assist you with tracking the process of getting a new wheelchair and guide safe an effective use of a wheelchair, please register or log-in to use the full features of the Virtual Wheelchair Coach app, or you can go on to use the trial app. Your activity of using the app will be monitored and recorded for the purpose of research and improving the app</div></div><button class="button button-block button-outline button-dark" ng-click=doTrial()>Trial</button> <button class="button button-block button-outline button-dark" ng-click=register()>Register</button></div></ion-content></ion-pane><script id=modal-deviceType.html type=text/ng-template><div class="list"> <ion-radio ng-repeat="item in deviceTypeList" ng-value="item.key" ng-model="data.deviceType"> {{ item.value }} </ion-radio> </div></script>');
$templateCache.put('tabs.html','<ion-tabs class="tabs-icon-only tabs-positive" ng-class="{\'tabs-item-hide\': $root.hideTabs}"><ion-tab title=Home icon=icon-home ui-sref=main.dashboard><ion-nav-view name=dashboard-tab animation=slide-left-right></ion-nav-view><nav-content></nav-content></ion-tab><ion-tab title=Contacts icon=icon-contact ui-sref=main.contacts><ion-nav-view name=contacts-tab animation=slide-left-right></ion-nav-view></ion-tab><ion-tab title="To do" icon=icon-calendar ui-sref=main.todo on-select=tabSelected()><ion-nav-view name=todo-tab animation=slide-left-right></ion-nav-view></ion-tab><ion-tab title=More icon=icon-more ui-sref=main.more><ion-nav-view name=more-tab animation=slide-left-right></ion-nav-view></ion-tab><ion-tab title=Profile icon=ion-person ui-sref=main.profile hidden><ion-nav-view name=profile-tab animation=no-animation></ion-nav-view></ion-tab><ion-tab title=Settings icon=ion-ios7-cog ui-sref=main.settings hidden><ion-nav-view name=settings-tab animation=no-animation></ion-nav-view></ion-tab><ion-tab title=About icon=ion-ios7-information href=#/tab/about hidden><ion-nav-view name=about-tab animation=slide-left-right></ion-nav-view></ion-tab></ion-tabs>');
$templateCache.put('healthissues/main.html','<ion-view title="Health Issues"><ion-content class="health-issue joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'pulcer\'})"><div class="title bold">Pressure Ulcers</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'lower-limb-swelling\'})"><div class="title bold">Lower Limb Swelling</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'neck-back-pain\'})"><div class="title bold">Neck Pain & Back Pain</div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('layout/container.html','<ion-side-menus><ion-side-menu-content drag-content=false><ion-nav-bar class=bar-dark><ion-nav-buttons side=left><button menu-toggle=left class="button button-icon icon my-icon-menu"></button></ion-nav-buttons><ion-nav-back-button class="button-icon my-icon-mwg_d_arrow_01"></ion-nav-back-button><ion-nav-buttons side=right><button class="button button-icon icon my-icon-mwg_a_home" goto=main.home ng-hide="$state.includes(\'main.home\')"></button></ion-nav-buttons></ion-nav-bar><ion-nav-view name=main-content animation=slide-left-right></ion-nav-view></ion-side-menu-content><ion-side-menu side=left class=sidemenu><ion-header-bar class=bar-dark><h1 class="title text left" style="margin-left: 10px">My WC Guide</h1></ion-header-bar><ion-content class=side-menu><div class=menu-item nav-clear menu-close ui-sref=main.home><span class="icon-menu theme-bg-home"><i class=my-icon-mwg_a_home></i></span><h2>Home</h2></div><div class=menu-item nav-clear menu-close ui-sref=main.todo><span class="icon-menu theme-bg-todo"><i class=ion-ios-list></i></span><h2>To do List</h2></div><div class=menu-item nav-clear menu-close ui-sref=main.contacts><span class="icon-menu theme-bg-contacts"><i class=ion-ios-people></i></span><h2>Contacts</h2></div><div class=menu-item nav-clear menu-close ng-click=openTermOfUse()><span class="icon-menu theme-bg-settings"><i class=ion-ios-information-outline></i></span><h2 style="white-space: normal !important">Terms of Use</h2></div></ion-content></ion-side-menu></ion-side-menus>');
$templateCache.put('modals/insurance.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Insurance</h3></ion-header-bar><ion-slide-box><ion-slide><ion-content class=padding><ul><li>Wheelchairs are typically covered by insurance under the <a href ng-click="openGlossary(\'dme\')">Durable Medical Equipment (DME)</a> category.</li><li>Potential funding sources include your private health insurance, Medicare, state Medicaid, Veterans administration, and other secondary sources.</li><li>Check your private health insurance about coverage policy and any deductibles or co-payments.</li><li>Insurance usually covers a wheelchair for assisting mobility related activities of daily living within the home, such as:<ul><li>Getting into different rooms</li><li>Using a toilet</li><li>Eating</li><li>Dressing and grooming</li></ul></li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('modals/modal-assessment-popup.html','<div class=questionnaire style="text-align: initial"><div class=qq-answer ng-repeat-end style="margin-bottom: 10px"><ion-radio ng-if="data.question.options != null" name=Q{{data.question.id}} ng-model=data.answer ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in data.question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="data.question.checks != null" ng-repeat="item in data.question.list" ng-value=item.text ng-model=item.checked ng-change="onChangeCheckbox(data.question, item)">{{ item.text }}</ion-checkbox></div></div>');
$templateCache.put('modals/modal-component-assessment-popup.html','<div class=questionnaire style="text-align: initial"><div class=qq-answer ng-repeat-end style="margin-bottom: 10px"><ion-radio ng-if="data.question.options != null" name=Q{{data.question.id}} ng-model=data.answer ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in data.question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="data.question.checks != null" ng-repeat="item in data.question.list" ng-value=item.text ng-model=item.checked ng-change="onChangeCheckbox(data.question, item)">{{ item.text }}</ion-checkbox></div></div>');
$templateCache.put('modals/modal-feature-popup.html','<md-radio-group ng-model=data.selected><md-radio-button ng-repeat="item in options" ng-value=item class=md-primary>{{item.text}}</md-radio-button></md-radio-group>');
$templateCache.put('modals/modal-problem-popup.html','<md-radio-group ng-model=data.selected><md-radio-button ng-repeat="item in list" ng-value=item class=md-primary>{{item.value}}</md-radio-button></md-radio-group>');
$templateCache.put('modals/modal-tpl1-info.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>{{bundle.title}}</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>{{bundle.subTitle}}</h3><ion-slide-box show-pager=true delegate-handle=pager><ion-slide ng-repeat="page in bundle.pages"><div class=postit>{{page.content}}</div></ion-slide></ion-slide-box></ion-content></ion-modal-view>');
$templateCache.put('modals/termofuse.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Term Of Use</h1></ion-header-bar><ion-content><div class=list><div class="item item-body"><p>The My Wheelchair Guide \u2013 Power Wheelchair App (\u201CApp\u201D) is being made available to you by United Spinal Association (\u201CUnited Spinal\u201D), under a license from the University of Pittsburgh (\u201CUniversity\u201D), with the following Terms and Conditions of use.</p></div><div class="item item-divider word-wrap">Terms and Conditions of Use</div><div class="item item-body"><p>Please read these terms and conditions of use carefully before using the App.</p><p style="font-weight: bold;">We do not collect or store your personal data. All data you enter into the application is stored only on your device.</p><p>By using this App, you signify your assent to these Terms and Conditions, if you do not agree to all of these Terms and Conditions of Use, do not use this App.</p><p>The United Spinal may update these Terms and Conditions at any time. Your continuing usage of the App will mean you accept those changes.</p></div><div class="item item-divider word-wrap">The App Does Not Provide Medical Advice</div><div class="item item-body"><p>The content of the App, including texts, graphics, images and information, are for information purposes only. The content is not intended to be a substitute for professional medical advice, diagnosis, assessment, intervention, or treatment. Always seek the advice of your physician or therapist with any questions you may have regarding a medical condition or wheelchair/seating issues. Never disregard professional medical advice or delay in seeking it because of something you have read on the App.</p><p>The App does not recommend or endorse any specific tests, physicians, products, procedures, opinions, or other information that may be mentioned in the App. Reliance on any information provided by the App, developers of this App, or other visitors to the App is solely at your own risk.</p><p>The App and the content published in the App are protected by international copyright laws (My Wheelchair Guide \u2013 Manual Wheelchair App \xA9 2019, University of Pittsburgh). You do not have permission to (a) redistribute; (b) sell or use the App for any commercial purpose; (c) modify, recode, translate or create derivative works of, or based on, the App; (d) copy the App; (e) rent, lease, grant a security interest in, or otherwise transfer rights to the App; or (f) remove any proprietary notices, copyright notices, labels, or license limitations on or within the App.</p></div><div class="item item-body" style="border-top: 0px"><p>DISCLAIMER OF WARRANTY: THE APP IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND. THE UNIVERSITY AND UNITED SPINAL MAKE NO REPRESENTATIONS AND EXTEND NO WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT. THE ENTIRE RISK ARISING OUT OF THE USE OF OR PERFORMANCE OF THE APP REMAINS WITH YOU (\u201CEND USER.\u201D) IN NO EVENT SHALL THE UNIVERSITY OR UNITED SPINAL BE LIABLE FOR ANY CONSEQUENTIAL, INCIDENTAL, DIRECT, INDIRECT, SPECIAL, PUNITIVE, OR OTHER DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION OR OTHER PECUNIARY LOSS) ARISING OUT OF THIS AGREEMENT OR THE USE OF OR INABILITY TO USE THE APP.</p></div></div><button class="button button-block button-positive" ng-click=close()>OK</button></ion-content></ion-modal-view>');
$templateCache.put('resources/assistive.html','<ion-view title="Materials about assistive technology"><ion-content class="health-issue content" padding=true><ul class=bullet-point><li><a ng-click="openInBrowser(\'http://www.resna.org\', \'_blank\')">RESNA position papers</a>: Official statements by the Rehabilitation Engineering and Assistive Technology Society of North America (RESNA) that support the use of a variety of assistive technology, devices, and services.</li></ul></ion-content></ion-view>');
$templateCache.put('resources/general.html','<ion-view title="General Resources"><ion-content class="health-issue content" padding=true><b>Clinician Task Force</b><p>The Clinician Task Force (CTF) provides the voice of the clinical community in order to make a positive difference in ensuring appropriate access to assistive technology. There is clearly a need for experienced clinicians in the field of wheeled mobility and seating to share their knowledge and experience regarding Complex Rehabilitation Technology (CRT) and the CTF is that forum.<br><a ng-click="openInBrowser(\'http://www.cliniciantaskforce.us\', \'_blank\')">www.cliniciantaskforce.us</a></p><b>Commission on Accreditation of Rehabilitation Facilities</b><p>An independent, nonprofit organization focused on advancing the quality of services you use to meet your needs for the best possible outcomes. CARF provides accreditation services worldwide at the request of health and human service providers.</p><p>Click <a ng-click="openInBrowser(\'http://www.carf.org/Programs/Medical/\', \'_blank\')">here</a> to see what a good rehab program is supposed to be.<br><a ng-click="openInBrowser(\'http://www.carf.org\', \'_blank\')">www.carf.org</a></p><b>Model Systems Knowledge Translation Center</b><p>The MSKTC works closely with researchers in the <a ng-click="openInBrowser(\'https://msktc.org/sci/model-system-centers\', \'_blank\')">14 Spinal Cord Injury (SCI) Model System Centers</a> to develop resources for people living with spinal cord injury and their supporters. These user-friendly resources are grounded in evidence and available in a variety of formats such as printable PDF documents, videos, and slideshows.<br><a ng-click="openInBrowser(\'https://msktc.org/sci\', \'_blank\')">https://msktc.org/sci</a></p><b>National Coalition for Assistive and Rehab Technology</b><p>National Coalition for Assistive and Rehab Technology. NCART is a national association of suppliers and manufacturers of Complex Rehab Technology (CRT) products and services that are used by individuals with significant disabilities and medical conditions.<br><a ng-click="openInBrowser(\'http://www.ncart.us\', \'_blank\')">www.ncart.us</a></p><p>The Access2CRT website has been created to share information regarding Complex Rehab Technology (CRT) and provide resources and tools to promote and protect access for people with disabilities.<br><a ng-click="openInBrowser(\'http://www.access2crt.org\', \'_blank\')">www.access2crt.org</a></p><b>National Registry of Rehabilitation Technology</b><p>NRRTS provides a list of qualified suppliers on this web site. You can search by name, state or company. NRRTS Registrants must renew their Registration on an annual basis with 10 hours of continuing education.<br>NRRTS provides a Complaint Resolution for complex rehab technology users. Complaints against a NRRTS Registrant are taken seriously. This can be an effective way to resolve issues related to the provision, service and follow up.<br><a ng-click="openInBrowser(\'https://www.nrrts.org\', \'_blank\')">www.nrrts.org</a></p><b>Rehabilitation Engineering and Assistive Technology Society of North America (RESNA)</b><p>Rehabilitation Engineering and Assistive Technology Society of North America, is the premier professional organization dedicated to promoting the health and well-being of people with disabilities through increasing access to technology solutions.<br><a ng-click="openInBrowser(\'http://www.resna.org\', \'_blank\')">www.resna.org</a></p><b>Spinal Cord Injury Model Systems Information Network</b><br><span style="text-decoration: underline;">The UAB-SCIMS Information Network</span><p>The University of Alabama at Birmingham Spinal Cord Injury Model System (UAB-SCIMS) maintains this Information Network as a resource to promote knowledge in the areas of research, health and quality of life for people with spinal cord injuries, their families, and SCI-related professionals. Here, you will find our educational materials and information on research activities of the UAB-SCIMS along with links to outside (Internet) information.<br><a ng-click="openInBrowser(\'http://www.uab.edu/medicine/sci/uab-scims-information/rehab-tip-sheets\', \'_blank\')">http://www.uab.edu/medicine/sci/uab-scims-information/rehab-tip-sheets</a></p><b>United Spinal Association</b><br><a ng-click="openInBrowser(\'http://www.unitedspinal.org\', \'_blank\')">www.unitedspinal.org</a><p>United Spinal Association is dedicated to enhancing the quality of life of all people living with a spinal cord injury or disease (SCI/D). Please visit the links above or below for more information.</p><ul class=bullet-point><li><b>United Spinal Association\u2019s Affiliated Service Providers</b><br>List of hospital and rehab centers that provide services on rehabilitation of spinal cord injuries and related diagnoses.<ol><li><a ng-click="openInBrowser(\'https://unitedspinal.org/hospitals/\', \'_blank\')">https://unitedspinal.org/hospitals/</a></li><li><a ng-click="openInBrowser(\'https://www.spinalcord.org/disability-products-services/\', \'_blank\')">https://www.spinalcord.org/disability-products-services/</a></li><li><a ng-click="openInBrowser(\'https://unitedspinal.org/my-wheelchair-guide/\', \'_blank\')">https://unitedspinal.org/my-wheelchair-guide/</a></li></ol></li></ul></ion-content></ion-view>');
$templateCache.put('resources/independent.html','<ion-view title="Resources about independent living"><ion-content class="health-issue content" padding=true><ul class=bullet-point><li><a ng-click="openInBrowser(\'http://www.ilru.org/projects/cil-net/cil-center-and-association-directory\', \'_blank\')">Directory of Centers for Independent Living</a></li><li><a ng-click="openInBrowser(\'http://www.ilru.org/projects/silc-net/silc-directory\', \'_blank\')">Directory of Independent Living Councils</a></li></ul></ion-content></ion-view>');
$templateCache.put('resources/main.html','<ion-view title=Resources><ion-content class="health-issue joe-theme"><br><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'sci\'})"><div class="title bold">Educational materials about spinal cord injuries (SCI) and disabilities</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'assistive\'})"><div class=title><div class=bold>Materials about assistive technology</div></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'rehab\'})"><div class=title><div class=bold>Resources about rehab programs</div></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'independent\'})"><div class=title><div class=bold>Resources about independent living</div></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'professionals\'})"><div class=title><div class=bold>Resources to find and know professionals</div></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.sub\', {sub: \'general\'})"><div class=title><div class=bold>General Resources</div></div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('resources/professionals.html','<ion-view title="Resources to find and know professionals"><ion-content class="health-issue content" padding=true>Find professionals near you:<ul class=bullet-point><li>RESNA\u2019s Certified <a ng-click="openGlossary(\'atp\')">Assistive Technology Professionals (ATPs)</a> and <a ng-click="openGlossary(\'sms\')">Seating and Mobility Specialists (SMSs)</a>.</li><li>Occupational Therapists, Physical Therapists, visit <a ng-click="openInBrowser(\'http://www.cliniciantaskforce.us\', \'_blank\')">Clinician Task Force</a></li><li><a ng-click="openInBrowser(\'http://www.nrrts.org\', \'_blank\')">National Registry of Rehabilitation Technology Suppliers</a></li><li><a ng-click="openInBrowser(\'http://www.ncart.us\', \'_blank\')">Complex Rehab Technology Suppliers: National Coalition for Assistive and Rehab Technology</a></li></ul></ion-content></ion-view>');
$templateCache.put('resources/rehab.html','<ion-view title="Resources about rehab programs"><ion-content class="health-issue content" padding=true><ul class=bullet-point><li>United Spinal Association\u2019s Affiliated Service Providers:<br><p><a ng-click="openInBrowser(\' https://unitedspinal.org/hospitals/\', \'_blank\')">Hospitals and rehab centers</a> that provide services on rehabilitation of spinal cord injuries and related diagnoses.</p><p><a ng-click="openInBrowser(\'https://www.spinalcord.org/disability-products-services/\', \'_blank\')">Products and services</a> that optimize health, independence, and quality of life of people with a spinal cord injury or disease.</p></li><li>What a good rehab program is supposed to be<ul class=bullet-point><li><a ng-click="openInBrowser(\'https://askus-resource-center.unitedspinal.org/index.php?pg=kb.book&id=11\',\'_blank\')">Rehabilitation, New Injury and Recovery Programs</a></li><li><a ng-click="openInBrowser(\'http://www.carf.org/Programs/Medical/\',\'_blank\')">Settings and specialty areas of medical rehabilitation programs</a></li><li><a ng-click="openInBrowser(\'https://askus-resource-center.unitedspinal.org/index.php?pg=kb.page&id=1717\',\'_blank\')">United Spinal Association Guidelines for Selecting a Rehabilitation Facility</a></li><li><a ng-click="openInBrowser(\'https://askus-resource-center.unitedspinal.org/index.php?pg=kb.page&id=1509\',\'_blank\')">Choosing a High Quality Rehabilitation Program</a>: an NRH Field Guide for People with Disabilities<ul><li><a ng-click="openInBrowser(\'http://www.carf.org/Programs/Medical/\',\'_blank\')">CARF International</a></li><li><a ng-click="openInBrowser(\'https://msktc.org/sci/model-system-centers\',\'_blank\')">SCI Model Systems</a></li><li><a ng-click="openInBrowser(\'https://www.sci.va.gov/\',\'_blank\')">VA SCI/D Systems of Care</a></li></ul></li></ul></li></ul></ion-content></ion-view>');
$templateCache.put('resources/sci.html','<ion-view title="Educational materials about spinal cord injuries (SCI) and disabilities"><ion-content class="health-issue content" padding=true><ul class=bullet-point><li><a ng-click="openInBrowser(\'http://www.msktc.org/sci\', \'_blank\')">Spinal Cord Injury Model Systems</a>: Funded by the National Institute on Disability, Independent Living, and Rehabilitation Research (NIDILRR), and provide resources for people with SCI and their supporters.</li><li><a ng-click="openInBrowser(\'https://askus-resource-center.unitedspinal.org/index.php?pg=kb\', \'_blank\')">Spinal Cord Injury Knowledge Books</a>: Developed by the United Spinal Association, and can also be downloaded as <a ng-click="openInBrowser(\'https://www.unitedspinal.org/disability-publications-resources/disability-publications/\', \'_blank\')">PDF booklets</a>.</li><li><a ng-click="openInBrowser(\'https://pva.org/research-resources/\', \'_blank\')">Publications by Paralyzed Veterans of America</a>: Provide educational materials and guidelines about health and daily lives with disabilities.</li><li><a ng-click="openInBrowser(\'http://sci.washington.edu/empowerment/videos.asp\', \'_blank\')">SCI Empowerment Videos</a>: Developed by the University of Washington and provide information about aging with spinal cord injuries and using wheelchairs.</li><li><a ng-click="openInBrowser(\'http://www.sci-info-pages.com/\', \'_blank\')">SCI Info Pages</a>: This website is created and maintained by an individual with spinal cord injury. Lots of good information in one place. You can find the list of Model Spinal Cord Injury Care Systems <a href=http://www.sci-info-pages.com/model.html>here</a>.</li></ul></ion-content></ion-view>');
$templateCache.put('resources/wheeltrans.html','<ion-view title="Wheelchair Transportation"><ion-content class="health-issue content" padding=true><p>The best option is to transfer to the original seat installed and bolted to the floor of a vehicle. A crash-tested original equipment (OEM) seat with lap shoulder belts is the safest seat in a motor vehicle. However, if you are unable to transfer onto these seats, your wheelchair needs to be anchored to the floor of a vehicle using either <a ng-click="getStaticModalPage(\'resources/modal/strapsAndBelts.html\')">crash-tested straps and occupant restraint belts</a> or <a ng-click="getStaticModalPage(\'resources/modal/docking.html\')">a docking system</a>.</p><p>Check here for more <a ng-click="openInBrowser(\'https://unitedspinal.org/my-wheelchair-guide/wheelchair-transportation-safety/\', \'_blank\')">information</a> and resources.</p></ion-content></ion-view>');
$templateCache.put('review/main-byothers.html','<ion-view title="Review By Others"><ion-content class=review><div ng-if="filter.state == 0"><div class=list><div class="item divider"><strong>Disclaimer:</strong> Users\u2019 impression about a wheelchair depends on the quality and design of a wheelchair, how well a wheelchair fit the user, and also wheelchair skills that the user has. Please take all these related factors into consideration when reading these consumer reviews about wheelchairs.</div><div class="item item-input item-select"><div class=input-label>Device Type</div><select mobi-picker=filter.type mobi-picker-options="{ preset: \'select\', theme: MOBIPICKER_THEME, setText: \'OK\' }"><option value></option><option value={{item}} ng-repeat="item in deviceTypeList">{{item}}</option></select></div><div class="item item-input item-select"><div class=input-label>Make</div><select mobi-picker=filter.make mobi-picker-options="{ preset: \'select\', theme: MOBIPICKER_THEME, setText: \'OK\' }"><option value></option><option value={{item}} ng-repeat="item in makeList">{{item}}</option></select></div><div class="item item-input item-select"><div class=input-label>Model</div><select mobi-picker=filter.model mobi-picker-options="{ preset: \'select\', theme: MOBIPICKER_THEME, setText: \'OK\' }"><option value></option><option value={{item.model}} ng-repeat="item in modelList">{{item.model}}</option></select></div></div><button class="button button-positive button-block" ng-click=find()>Find</button><div class=list ng-if=foundDevices><div class="item item-divider">Result: {{foundDevices.length}}</div><div class=item ng-repeat="device in foundDevices | orderBy:\'totalReview\':true"><h2>{{device.model}}</h2><a ng-click=viewOthersReview(device) style="float: right" ng-show="device.totalReview > 0" class=subdued>{{device.totalReview}} review{{device.totalReview > 1 ? \'s\' : \'\'}}</a><p>Type: {{device.deviceType}}&nbsp; Wheelchair<br>Make: {{device.make}}<br></p></div></div></div></ion-content></ion-view>');
$templateCache.put('review/main-mydevice.html','<ion-view title="My Reviews"><ion-content class=review><div class=list><div class=item ng-repeat="device in myDevices"><h2>{{device.model}}</h2><p>{{device.make}}</p><div class=review-overall-rating ng-if=device.review><rating ng-model=device.review.overallRate max=5 readonly=true></rating></div><a class=view-detail ng-if=device.review ng-click=viewReviewDetail(device)>view</a><div class=write-review ng-if=!device.review><button class="button button-block button-positive" ng-click=addReview(device)>Write Review</button></div></div></div></ion-content></ion-view>');
$templateCache.put('review/main.html','<ion-view title="Wheelchair Reviews"><ion-content class=review><div class="list gen-tpl1"><div ng-repeat="item in _listMenu"><div ng-if=item.allowed class="item item-icon-right item-custom" ui-sref={{item.url}}>{{item.title}} <i class="icon ion-chevron-right edge-button" ng-click="openSubModule($event, item.url)"></i></div></div></div></ion-content></ion-view>');
$templateCache.put('review/modal_review-detail.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Review</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true class=review><div class=review-detail><div class=header><h3>{{device.model}}</h3><p class=make>{{device.make}}</p><p class=time>{{device.review.createdAt | date:\'medium\'}}</p><p>Type: {{device.type}}&nbsp; Wheelchair<br>Used for {{device.period}} year{{device.period > 1 ? \'s\' : \'\'}} ({{device.startYear}} - {{device.endYear}})<br>Frequency usage: {{device.usage}}<br><br>Overall Satisfaction:<br><rating ng-model=device.review.overallRate max=5 readonly=true></rating>&nbsp;&nbsp;{{OverallRate[device.review.overallRate]}}<br>Comment: {{device.review.comment}}<br></p></div><div class=detail><ol><li ng-repeat="(qIndex,item) in Questions"><span class=fma-title>{{item}}</span> <span>{{QOptions[qIndex][device.review[fmaName(qIndex)]]}}</span></li></ol></div></div></ion-content></ion-modal-view>');
$templateCache.put('review/modal_review-form.html','<ion-modal-view><form name=reviewForm novalidate><ion-header-bar class="bar bar-positive"><h1 class=title>Review</h1></ion-header-bar><ion-content class="has-footer review"><div class=item ng-if=selectedDevice style="background-color: lightgoldenrodyellow;"><h3>{{selectedDevice.model}}</h3><p>{{selectedDevice.make}}</p></div><div class=item ng-if=selectedDevice><h3>Overall Satisfaction:&nbsp;{{OverallRate[review.overallRate]}}</h3><div class=review-overall-rating><rating ng-model=review.overallRate max=5 required></rating></div></div><div class=item ng-if=selectedDevice><h3>Rate the device by 10 questions</h3><ion-slide-box show-pager=false on-slide-changed=slideChanged(index)><ion-slide ng-repeat="(qIndex, item) in Questions"><div class=fma-question>{{qIndex+1}}.&nbsp; {{item}}</div><ion-radio name=Q{{qIndex+1}} ng-model=review[fmaName(qIndex)] ng-value=$index+1 class="custom-radio vertical" ng-repeat="opt in QOptions[qIndex]" required>{{opt}}</ion-radio></ion-slide></ion-slide-box><div class="row fma-nav"><div class="col col-25 nav-direction"><i ng-click=prev() class=left ng-class="{\'ion-ios-rewind-outline\': current == 0, \'ion-ios-rewind\': current > 0}"></i></div><div class="col col-50 rate-label">[{{current+1}}&nbsp;/&nbsp;{{Questions.length}}]</div><div class="col col-25 nav-direction"><i ng-click=next() class=right ng-class="{\'ion-ios-fastforward-outline\': current == Questions.length - 1 || !review[fmaName(current)] , \'ion-ios-fastforward\': review[fmaName(current)] }"></i></div></div></div><div class=item ng-if=selectedDevice><h3>Write your comments:</h3><textarea rows=3 ng-model=review.comment placeholder="What I like/dislike about this device..."></textarea></div></ion-content><div class="bar bar-footer"><button nav-clear class="button button-clear button-positive" ng-click=reviewModal.hide()>Cancel</button> <button class="button button-clear button-positive pull-right" ng-click=save(review) ng-disabled=reviewForm.$invalid>Submit</button></div></form></ion-modal-view>');
$templateCache.put('review/modal_review-view.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Review by others</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true class=review><div class=list><div class=item style="background-color: lightgoldenrodyellow;"><div style="font-weight: bold">{{selectedWCDevice.model}}</div>Type: {{selectedWCDevice.deviceType}}&nbsp; Wheelchair<br>Make: {{selectedWCDevice.make}}<br>Overall Satisfaction:</div><div class="item review-detail" ng-repeat="review in custReviews"><h2>Review #{{$index+1}}: <span style="font-size: 12px">{{review.date | date:\'medium\'}}</span></h2><p>Used for {{review.awcDevice.period}} year{{review.awcDevice.period > 1 ? \'s\' : \'\'}} ({{review.awcDevice.startYear}} - {{review.awcDevice.endYear}})<br>Frequency usage: {{review.awcDevice.usage}}<br><br>Overall Satisfaction:<br><rating ng-model=review.overallRate max=5 readonly=true></rating>&nbsp;&nbsp;{{OverallRate[review.overallRate]}}<br>Comment: {{review.comment}}.<br><br></p></div></div></ion-content></ion-modal-view>');
$templateCache.put('servicedelivery/main-funding-process.2step.html','<ion-view title="Traditional Funding Sources" class=service-delivery><ion-content><div class="list gen-tpl1"><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkSupplier></label> <span class=title>Check with the assistive technology professionals and/or seating and mobility specialists on paperwork submission approximately two weeks after wheelchair evaluation</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkInsurance></label> <span class=title>Check with insurance company on funding decision approximately two weeks after paperwork submission</span></div><div class="item item-checkbox"><label class=checkbox style="top: 30px"><input type=checkbox ng-checked="checklist.checkInsuranceDecision==\'APPROVE\'" ng-click="setInsuranceDecision($event, checklist, \'APPROVE\')"></label> <span class=title>approval</span><div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkInformTherapist></label> <span class=title>Inform your supplier and therapist(s)</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkEstimatedTime></label> <span class=title>Check the estimated time of delivery</span></div></div></div><div class="item item-checkbox"><label class=checkbox style="top: 30px"><input type=checkbox ng-checked="checklist.checkInsuranceDecision==\'DENY\'" ng-click="setInsuranceDecision($event, checklist, \'DENY\')"></label> <span class=title>denial</span><div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkContactTherapist></label> <span class=title>Inform your physician, therapist, and supplier ASAP</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkCallInsurance></label> <span class=title>Call health insurance to learn the steps and timeline of filing an appeal. Also, obtain a hard copy of the denial</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkConsultSuplierTherapist></label> <span class=title>Consult supplier and therapist to <a ng-click="getStaticModalPage(\'servicedelivery/main-funding-process.modal.denial.consult-supplier.html\')">troubleshoot denial</a></span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPrepareAppeal></label> <span class=title>Prepare appeal documents</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkFileAppeal></label> <span class=title>File an appeal</span></div></div></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-funding-process.2step.other.html','<ion-view title="Alternative Funding Sources" class=service-delivery><ion-content><div class="list gen-tpl1"><div class="item item-checkbox align-topL1"><label class=checkbox><input type=checkbox ng-model=temp.check03 ng-click=onCheck03(temp)></label> <span class=title>Collect the following information from your funding source:</span><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPublicFormFormat></label> <span class=title>Forms and formats of paperwork needed</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPublicPersonSubmit></label> <span class=title>Persons (you, physician, therapist, or supplier) who should submit paperwork</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPublicDecision></label> <span class=title>Decision notification method (email, mail, or phone)</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPublicPersonReceive></label> <span class=title>Persons who will receive the decision</span></div></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkProcessSubmitPaperwork></label> <span class=title>Follow the process provided by your funding agency to submit the paperwork</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkProcessAfterSubmission></label> <span class=title>Check with your funding agency on funding decision approximately two weeks after paperwork submission</span></div><div class="item item-checkbox"><label class=checkbox style="top: 30px"><input type=checkbox ng-checked="checklist.checkPublicInsuranceDecision==\'APPROVE\'" ng-click="setInsuranceDecision($event, checklist, \'APPROVE\')"></label> <span class=title>approval</span><div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPublicInformTherapist></label> <span class=title>Inform your supplier and therapist</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPublicEstimatedTime></label> <span class=title>Check the estimated time of delivery</span></div></div></div><div class="item item-checkbox"><label class=checkbox style="top: 30px"><input type=checkbox ng-checked="checklist.checkPublicInsuranceDecision==\'DENY\'" ng-click="setInsuranceDecision($event, checklist, \'DENY\')"></label> <span class=title>denial</span><div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkInformTherapist></label> <span class=title>Inform your supplier and therapist</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkAgencyForRFCAboutDenial></label> <span class=title>Contact the funding agency to check the reason of denial and whether you can appeal</span></div></div></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-funding-process.html','<ion-view title="Funding Process"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-divider">Select your funding source:<ol style="margin-top: 10px;" class=elipse-item><li ui-sref=.other><a>Alternative Funding Sources</a></li><li ui-sref=.private><a>Traditional Funding Sources</a></li></ol></div><a class="item item-icon-left" ng-click="getInfo(\'funding_process\')"><img class="icon icon-info" ng-src=images/iconsv2/info.svg> More Info</a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-funding-process.modal.approval-more-info.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Approval Decision</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Once your private health insurance approves your wheelchair, the supplier will:<ul><li>Order your equipment and bill your funding source</li><li>Assemble your wheelchair for delivery</li></ul></p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-funding-process.modal.denial.call-insurance.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Call your private health insurance</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Call health insurance for steps and timeline of an appeal and a hard copy of the denial :<ul><li>The steps to file an appeal</li><li>The timeline for an appeal</li><li>How to request a hard copy of the denial</li></ul></p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-funding-process.modal.denial.consult-supplier.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Understand the Denial</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Common reasons for denial include:<ul><li>Non-covered benefit</li><li>Recommending least costly alternatives</li><li>Not medically necessary</li></ul></p><p>Steps to follow after denial:</p><ul class=numbered-list><li>It could be an insurance issue. Call your insurance company and make sure everything is in order (phone number is usually on the back of your insurance card).</li><li>It could be a supplier issue. Call your local supplier to make sure that all the paperwork has been submitted. If no response, call your therapist who can serve as an advocate to facilitate communication with your supplier. If still no response, call the supplier corporate office. There is usually a customer service number or form to contact them by e-mail in the corporate website.</li><li>If you have done the steps above and still are waiting or unsure of the issue:<ul class=bullet-point><li>If it is a Medicare-related issue, call your local Congressional office, main switchboard: <a ng-click="call(\'2022243121\')">(202) 224-3121</a> (check <a ng-click="openInBrowser(\'https://www.unitedspinal.org/action-center/\', \'_blank\')">United Spinal Advocacy</a> to find out who and how to contact). Your Senators and/or Representatives will have constituent case workers who can help you find out what the problem is in a more timely manner.</li><li>If it is a Medicaid or state insurance issue, call your state legislator (check State <a ng-click="openInBrowser(\'http://www.ncsl.org/aboutus/ncslservice/state-legislative-websites-directory.aspx\', \'_blank\')">Legislative Wesites Directory</a> to find out who and how to contact), or state Medicaid office (check <a ng-click="openInBrowser(\'https://www.medicaid.gov/medicaid/index.html\', \'_blank\')">Medicaid.gov</a> to find the contact)</li><li>Contact your protection and advocacy agency within the <a ng-click="openInBrowser(\'http://www.ndrn.org/en/ndrn-member-agencies.html\', \'_blank\')">National Disability Rights Network (NDRN)</a>. NDRN is the nonprofit membership organization for the federally mandated Protection and Advocacy (P&amp;A) Systems and Client Assistance Programs (CAP). There is a P&amp;A/CAP agency in every state and U.S. territory, as well as one serving the Native American population in the four corners region. Collectively, the P&amp;A/CAP network is the largest provider of legally based advocacy services to people with disabilities in the United States.</li></ul></li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>a. b. c.');
$templateCache.put('servicedelivery/main-funding-process.modal.denial.contact-therapist.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Contact Therapist immediately</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>The process to file an appeal is usually <strong>Time Sensitive</strong>, but varies by company.</p><p>When you receive the denial, inform your physician, therapist, and supplier to discuss whether to appeal or accept your insurance\u2019s alternative recommendation.</p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-funding-process.modal.talk-to-insurance.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Talk To Insurance Company</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Check with your insurance company <strong>two months</strong> after paperwork submission. The insurance company should inform your supplier and/or you about the decision.</p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-funding-process.modal.talk-to-supplier.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Talk To Supplier</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Check with the supplier <strong>two weeks</strong> after the wheelchair evaluation to see if the paperwork is submitted.</p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-glossary.detail.html','<ion-view title=Glossary class="service-delivery glossary"><ion-content class="plain-content padding"><h3 style="font-size: 18px; font-weight: 800">{{gls.title}}</h3><div class=text-content compile=gls.description></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-glossary.html','<ion-view title=Glossary><ion-content class=service-delivery><div class="list gen-tpl1"><div ng-repeat="item in listItems"><div class="item item-custom" ng-click="navigateTo(\'.detail\',{index: item.id});">{{item.title}}</div></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-physical-referral.html','<ion-view title="Physician Referral"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkScheduleAppointment ng-click=updateData(checklist)></label> <span class=title>Schedule an appointment</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'schedule\')"></div><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkArrangeTransportation ng-click=updateData(checklist)></label> <span class=title>Arrange transportation</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'transport\')"></div><div class="item item-checkbox"><label class=checkbox style="top: 30px"><input type=checkbox ng-model=temp.check03 ng-click=onCheck03(temp)></label> <span class=title>Visit your physician</span><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkWheelchairChecklistReference ng-click=updateData(checklist)></label> <span class=title>Show <a href ng-click=openWheelchairChecklistOrSummary()>My Wheelchair Checklist</a></span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkPrescriptionForWheelchairEvaluation ng-click=updateData(checklist)></label> <span class=title>Obtain a <a href ng-click="getStaticModalPage(\'servicedelivery/modal_prescription.html\')">prescription</a> for a wheelchair evaluation</span></div></div><a class="item item-icon-left item-custom" ng-click="getInfo(\'physical_referral\')"><img class="icon icon-info" ng-src=images/iconsv2/info.svg> More Info</a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.html','<ion-view title="Receive Wheelchair"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkFollowUpSupplier></label> <span class=title>Contact supplier regarding new wheelchair status two weeks after funding approval</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'followup\')"></div><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkScheduleFinalAssessment></label> <span class=title>Contact supplier and therapist to schedule <a href ng-click="getStaticModalPage(\'servicedelivery/main-receive-wheelchair.modal.final-fit.html\')">a final fit assessment</a></span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'finalfit\')"></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkReviewUseWheelchair></label> <span class=title>Learn about <a href ng-click="navigateTo(\'main.usewheelchair\')">wheelchair use</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=temp.ce ng-change=onChangeChecklistExaminationCheck(temp.ce)></label> <span class=title>Before signing, use this <a ng-click="navigateTo(\'.new-checklist.manual-independent\')">checklist</a> to examine your new wheelchair</span></div><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkScheduleDelivery></label> <span class=title>Schedule delivery</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'delivery\')"></div><a class="item item-icon-left" ng-click="getInfo(\'receive_wheelchair\')"><img class="icon icon-info" ng-src=images/iconsv2/info.svg> More Info</a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.modal.final-fit.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Final Fit Assessment</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>A final fit assessment is necessary to ensure the wheelchair fits your needs. Once you sign for the wheelchair, it is not easy to replace it.</li><li>Ideally, the therapist and supplier should be present.<ul><li>The therapist will check if the wheelchair fits you appropriately.</li><li>The supplier will fine-tune the wheelchair as needed, and provide training on wheelchair use and care.</li></ul></li><li>The length of the session varies based on the complexity of the wheelchair. Keep in mind that fitting and learning to use the wheelchair often takes more than one session to ensure you can use it safely and comfortably in all your environments.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.modal.followup.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Approval Decision</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Follow up with your supplier on the status of the new wheelchair and wheelchair delivery <strong>two weeks</strong> after funding approval.</p><p>Your supplier should order and assessmble your new wheelchair after receiving the approval from the health insurance.</p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.modal.receive-training.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Request training</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>Request basic training on wheelchair use, care, and maintenance from your supplier or therapist.</p><p>Refer to the \u201C<a href ng-click="page.close(); navigateTo(\'main.maintenance\')">Wheelchair Maintenance</a>\u201D section for maintenance tips and timelines.</p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.new-checklist.html','<ion-view title="New Wheelchair Checklist"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-icon-right"><span class=title><a href ng-click="navigateTo(\'.manual-independent\')">Checklist for a manual wheelchair</a><br>(Independent Propulsion)</span> <i class="icon ion-checkmark" ng-if="checklist.checkUseChecklist == \'manual-independent\'"></i></div><div class="item item-icon-right"><span class=title><a href ng-click="navigateTo(\'.manual-assisted\')">Checklist for a manual wheelchair</a><br>(Assisted Propulsion)</span> <i class="icon ion-checkmark" ng-if="checklist.checkUseChecklist == \'manual-assisted\'"></i></div><div class="item item-icon-right"><span class=title><a href ng-click="navigateTo(\'.power\')">Checklist for a power wheelchair</a></span> <i class="icon ion-checkmark" ng-if="checklist.checkUseChecklist == \'power\'"></i></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.new-checklist.manual-assisted.html','<ion-view title="Assisted Propulsion Checklist"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-divider" style="font-weight: normal">Check the following items for fit and/or comfort:</div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maSeatWidthDepth></label> <span class=title>Seat width and depth</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maFootrestLocAngle></label> <span class=title>Footrest location and angle</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maTrunkSupport></label> <span class=title>Trunk support location</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maBackrestHeight></label> <span class=title>Backrest height and support</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maHeadrestLocation></label> <span class=title>Headrest location and support</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maHipGuides></label> <span class=title>Hip guides location and support</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maCushionSupport></label> <span class=title>Cushion comfort</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maAbilityToPerformPressure></label> <span class=title>Ability to perform pressure relief</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.maAbilityToPerformTransfer></label> <span class=title>Ability to perform transfers</span></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.new-checklist.manual-independent.html','<ion-view title="Wheelchair Fitting Checklist"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-divider" style="font-weight: normal">Check the following items for fit and/or comfort:</div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miSeatWidthDepth></label> <span class=title>Seat <a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'seat-width\'})">width</a> and <a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'seat-depth\'})">depth</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miFootrestLocAngle></label> <span class=title>Footrest location (<a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'footrest-length\'})">length</a>) and <a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'footrest-angle\'})">angle</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.armRestHeightPosition></label> <span class=title>Arm rest height and position</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miHeadrestComfort></label> <span class=title><a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'headrest\'})">Headrest</a> comfort and position</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miControlLocation></label> <span class=title><a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'mounting-location\'})">Controller location</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miControlLocation></label> <span class=title>Wheelchair <a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'programming\'})">speed up, slow down, stop, and turn smoothly</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miCushionSupport></label> <span class=title><a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'cushion\'})">Cushion comfort</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miAbilityToPerformPressure></label> <span class=title>Ability to perform position changes using your power seat functions, including title and recline for optimal <a ng-click="navigateTo(\'main.usewheelchair.skills.skill.page\', {name: \'da_weight\'})">pressure relief</a></span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.miAbilityToPerformTransfer></label> <span class=title>Ability to perform <a ng-click="navigateTo(\'main.usewheelchair.skills.skill.page\', {name: \'da_transfer\'})">transfers</a></span></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-receive-wheelchair.new-checklist.power.html','<ion-view title="Power Wheelchair Checklist"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-divider" style="font-weight: normal">Check the following items for fit and/or comfort:</div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pSeatWidthDepth></label> <span class=title>Seat width and depth</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pFootrestLocAngle></label> <span class=title>Footrest location and angle</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pTrunkSupport></label> <span class=title>Trunk support location</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pBackrestHeight></label> <span class=title>Backrest height and support</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pHeadrestLocation></label> <span class=title>Headrest location and support</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pHipGuides></label> <span class=title>Hip guides location and support</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pCushionSupport></label> <span class=title>Cushion comfort</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pJoystickPosition></label> <span class=title>Joystick position and/or special control(s) position</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pAbilityToAccessControls></label> <span class=title>Ability to access controls when tilted or reclined</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pAbilityToPerformPressure></label> <span class=title>Ability to perform pressure relief</span></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkUseChecklistItems.pAbilityToPerformTransfer></label> <span class=title>Ability to perform transfers</span></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-select-wheelchair.html','<ion-view title="Wheelchair Selection"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkScheduleWheelchairTrialSession ng-click=updateData(checklist)></label> <span class=title>Schedule trial session</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'trial\')"></div><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkArrangeTransportation ng-click=updateData(checklist)></label> <span class=title>Arrange transportation</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'transport\')"></div><div class="item item-checkbox"><label class=checkbox style="top: 30px"><input type=checkbox ng-model=temp.check03 ng-click=onCheck03(temp)></label> <span class=title>Attend trial session</span><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkBody ng-click=updateData(checklist)></label> <span class=title><a href ng-click="getStaticModalPage(\'servicedelivery/modal_body_measurement.html\')">Body measurement</a></span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkOptions ng-click=updateData(checklist)></label> <span class=title>Discuss product options</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkTestDrive ng-click=updateData(checklist)></label> <span class=title><a href ng-click="getStaticModalPage(\'servicedelivery/modal_test_drive.html\')">Test drive</a> potential products</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkSelectWheelchair ng-click=updateData(checklist)></label> <span class=title>Select a wheelchair</span></div></div><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkScheduleHomeEvaluation ng-click=updateData(checklist)></label> <span class=title>Schedule <a href ng-click="getStaticModalPage(\'servicedelivery/modal_home_evaluation.html\')">home evaluation</a></span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'home_eval\')"></div><a class="item item-icon-left" ng-click="getInfo(\'select_wheelchair\')"><img class="icon icon-info" ng-src=images/iconsv2/info.svg> More Info</a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-self-assessment.html','<ion-view title="Self Assessment"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=temp.wc ng-change=onChangeWheelchairChecklistCheck(temp.wc)></label> <span class=title><a href ng-click=openChecklist()>My Wheelchair Checklist</a></span> <img class="icon aligned right" ng-src=images/iconsv2/goto_icon.svg ng-if="data.wheelchairChecklist.doneAt!=null" ng-click=openWheelchairChecklistSummary()></div><div class="item item-checkbox"><label class=checkbox><input type=checkbox ng-model=data.insurance ng-click=updateData(data)></label> <span class=title>Check <a href ng-click=openInsurance()>Insurance</a></span></div><a class="item item-icon-left" ng-click="getStaticModalPage(\'servicedelivery/modal_self_assessment.html\')"><img class="icon icon-info" ng-src=images/iconsv2/info.svg> <span class=title>More Info</span></a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main-wheelchair-evaluation.html','<ion-view title="Wheelchair Evaluation"><ion-content class=service-delivery><div class="list gen-tpl1"><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkScheduleWheelchairEvaluationSession ng-click=updateData(checklist)></label> <span class=title>Schedule a session</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'session\')"></div><div class="item item-checkbox item-icon-right"><label class=checkbox><input type=checkbox ng-model=checklist.checkArrangeTransportation ng-click=updateData(checklist)></label> <span class=title>Arrange transportation</span> <img class="icon aligned right" ng-src=images/iconsv2/calendar-blue.svg ng-click="addAppointment(\'transport\')"></div><div class="item item-checkbox item-custom"><label class=checkbox style="top: 30px"><input type=checkbox ng-model=temp.check03 ng-click=onCheck03(temp)></label> <span class=title>Attend evaluation session</span><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkWheelchairChecklistReference ng-click=updateData(checklist)></label> <span class=title>Show <a href ng-click=openWheelchairChecklistOrSummary()>My Wheelchair Checklist</a></span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkShowCurrentMobilityDevice ng-click=updateData(checklist)></label> <span class=title>Show my current mobility device (or photos)</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkDiscussNeeds ng-click=updateData(checklist)></label> <span class=title>Discuss my needs</span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkFunctionalAssessment ng-click=updateData(checklist)></label> <span class=title>Go through a <a href ng-click="getStaticModalPage(\'servicedelivery/modal_func_assessment.html\')">functional assessment</a></span></div><div class="item sub-item item-checkbox"><label class=checkbox><input type=checkbox ng-model=checklist.checkObtainReferralForWheelchairSuplier ng-click=updateData(checklist)></label> <span class=title>Obtain a referral for assistive technology professional and/or seating and mobility specialist.</span></div></div><a class="item item-icon-left" ng-click="getInfo(\'wheelchair_evaluation\')"><img class="icon icon-info" ng-src=images/iconsv2/info.svg> More Info</a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/main.html','<ion-view title="Get a Wheelchair"><ion-content class="service-delivery joe-theme"><div class=list><div class="item item-icon-right" ng-repeat="item in listItems" ng-click="navigateTo(item.url, {reload: true})"><div class=title>{{$index+1}}. {{item.title}}</div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.serdelivery.qa\', {reload: true})"><div class=title><strong>Q&amp;A</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'main.serdelivery.glossary\', {reload: true})"><div class=title><strong>Glossary</strong></div><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/modal_body_measurement.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Body Measurement</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Your supplier(s) will review the wheelchair evaluation report from your therapist, and take measurements from you to determine the features and fit of your wheelchair and seating components.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/modal_func_assessment.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Functional Assessment</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>A therapist will typically assess: range of motion, muscle strength, muscle tone/spasticity, skin condition, sitting and standing balance, endurance and ability to complete daily tasks.</li><li>Whether you are getting a replacement wheelchair or your first wheelchair, you will typically need to go through a full mat evaluation in both supine and sitting positions. Here is a video of the <a href ng-click="openInBrowser(\'https://youtu.be/J2Utm5tLd4w\', \'_blank\')">mat evaluation</a>.</li><li>The functional assessment will help the clinician to assist you with finding the right type of product and wheelchair components.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/modal_glossary.detail.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Glossary</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class="plain-content padding"><h3 style="font-size: 18px; font-weight: 800">{{gls.title}}</h3><div class=text-content compile=gls.description></div></ion-content></ion-modal-view>');
$templateCache.put('servicedelivery/modal_home_evaluation.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Home Evaluation</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>A home evaluation is strongly recommended before you commit to the selected wheelchair.</li><li>To prepare for a home evaluation:<ul><li>Ask a caregiver/family member or close friend to be present.</li><li>Secure your pet(s).</li></ul></li><li>During a home evaluation, things to consider:<ul><li>Go through all areas around the house.</li><li>Reach items you often use.</li><li>Transfer to/from bed &amp; commode.</li><li>Get in/out and use your personal vehicle.</li></ul></li><li>For any accessibility issues in your home and/or vehicle:<ul><li>Ask for further information from your supplier(s).</li><li>Refer to online resources<ul><li><a style="text-decoration: underline" ng-click="openInBrowser(\'http://www.aded.net\', \'_blank\')">Association of Driving Rehabilitation Specialists</a></li><li><a style="text-decoration: underline" ng-click="openInBrowser(\'http://www.nmeda.com\', \'_blank\')">National Mobility Equipment Dealers Association</a></li><li><a style="text-decoration: underline" ng-click="openInBrowser(\'http://www.ncil.org\', \'_blank\')">National Council on Independent Living</a></li></ul></li><li>Go back to the evaluation team to address access issues</li></ul></li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/modal_prescription.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Prescription</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Prescription should be addressed to<ul><li>An assistive technology clinic or wheelchair clinic.</li><li>A therapist (either a Physical Therapist or Occupational Therapist) who specializes in wheelchair and seating.</li></ul></li><li>If your physician is unaware of any professionals in your area, you can direct him/her <a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">here</a> to search for a certified <a href ng-click="openGlossary(\'atp\')">Assistive Technology Professional (ATP)</a> or a certified <a href ng-click="openGlossary(\'sms\')">Seating and Mobility Specialist (SMS)</a> in your area.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/modal_self_assessment.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Self-Assessment</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Self-assessment is a key step for getting an appropriate wheelchair. The more you are involved, the more likely the wheelchair will fit your needs.</li><li>Once delivered, the wheelchair can only be replaced if:<ul><li>It is in disrepair.</li><li>Repairs will cost more than 60% of the cost of a replacement chair.</li><li>It does not meet your health needs.</li></ul></li><li>The process of acquiring a wheelchair can take a few months.</li><li>To ensure the best possible outcomes, you should work with a team of professionals including a physician, a therapist(s), and assistive technology professional and/or seating and mobility specialist.</li><li><a href ng-click=openWheelchairChecklistOrSummary()>My Wheelchair Checklist</a> can prepare you to assess your own needs.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/modal_test_drive.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Test Drive</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><p>You should always test drive the potential products. You should:<ul><li>Drive/propel the wheelchair around.</li><li>If possible, drive/propel the wheelchair under different scenarios (e.g. backwards, ramps, and tight spaces).</li><li>See if you feel comfortable and stable, and whether you like the maneuverability of the wheelchair.</li></ul></p></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/wc_checklist_summary.html','<ion-modal-view class="service-delivery checklist"><ion-header-bar class=bar-positive><h1 class=title>Checklist Summary</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content><div class=question><span class=qnumber>1.</span> Physical &amp; medical concerns</div><div class=answer ng-init="_list1=checklist.q01"><span ng-repeat="item in _list1 | filter: {value: true}"><span ng-if="item.title != \'Other\'">{{item.title}}<i ng-if=!$last>,</i>&nbsp;</span></span> <span ng-if=_list1[35].value>{{_list1[36].value}}</span></div><div class=question><span class=qnumber>2.</span> Width of the narrowest doorway or hallway</div><div class=answer>{{checklist.q02}} {{checklist.q02Unit}}</div><div class=question><span class=qnumber>3.</span> Steps to enter your house?</div><div class=answer>{{checklist.q03 ? (checklist.q03a ? "Yes, one step." : "Yes, more than one step.") : "No"}}</div><div class=question><span class=qnumber>4.</span> Mobility device you are interested in</div><div class=answer>{{checklist.q04}}</div><div class=question><span class=qnumber>5.</span> Things to do with your mobility device</div><div class=answer ng-init="_list5=checklist.q05"><span ng-repeat="item in _list5 | filter: {value: true}"><span ng-if="item.title != \'Other\'">{{item.title}}<i ng-if=!$last>,</i> &nbsp;</span></span> <span ng-if=_list5[16].value>{{_list5[17].value}}</span></div><div class=question><span class=qnumber>6.</span> Ways to transport the mobility device</div><div class=answer><span ng-repeat="item in checklist.q06"><span>{{item.title}}<i ng-if=!$last>,</i>&nbsp;</span></span></div><div class=question><span class=qnumber>7.</span> Wheelchair features important to you</div><div class=answer>{{checklist.q07}}</div><div class=question><span class=qnumber>8.</span> Currently using a wheelchair?</div><div class=answer>{{checklist.q08 ? "Yes" : "No"}}</div><div ng-if="checklist.q08==1"><div class=question><span class=qnumber>9.</span> Make and model of your wheelchair</div><div class=answer>{{checklist.q09.Make}} - {{checklist.q09.Model}}</div><div class=question><span class=qnumber>10.</span> Age of your wheelchair</div><div class=answer>{{checklist.q10}} <span ng-if=checklist.q10>years</span></div><div class=question><span class=qnumber>11.</span> Average time you spend in your wheelchair</div><div class=answer>{{checklist.q11}}</div><div class=question><span class=qnumber>12.</span> Comments on current wheelchair</div><div class=answer>{{checklist.q12}}</div></div></ion-content></ion-modal-view>');
$templateCache.put('servicedelivery/wheelchair_checklist.html','<ion-modal-view class="service-delivery checklist"><ion-header-bar class=bar-positive><h1 class=title>My Wheelchair Checklist</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=false scroll=false style="z-index: 0" class=has-header><ion-slide-box class=question-slider show-pager=false delegate-handle=outerSlideBox><ion-slide class=question-page ng-init="_list01=checklist.q01"><h4 class=question><span class=qnumber>1.</span> Mark your physical/medical concerns: <span class=note>select all that apply; <strong>swipe to see more options</strong></span></h4><div class=answer><ion-slide-box delegate-handle=innerSlideBox1><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list01 | limitTo:9" ng-value=item.title ng-model=item.value>{{ item.title }}</ion-checkbox></div><br></ion-slide><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list01 | limitTo:9:9" ng-value=item.title ng-model=item.value>{{ item.title }}</ion-checkbox></div><br></ion-slide><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list01 | limitTo:9:18" ng-value=item.title ng-model=item.value>{{ item.title }}</ion-checkbox></div><br></ion-slide><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list01 | limitTo:9:26" ng-value=item.title ng-model=item.value>{{ item.title }}</ion-checkbox></div><br></ion-slide><ion-slide><br><div class=list><ion-checkbox ng-value=_list01[35].title ng-model=_list01[35].value>{{ _list01[35].title }}</ion-checkbox><input type=text ng-if=_list01[35].value ng-model=_list01[36].value></div><br></ion-slide></ion-slide-box></div></ion-slide><ion-slide class=question-page><h4 class=question><span class=qnumber>2.</span> What is the width of the narrowest door or hallway in your home?</h4><div class=answer><div class=row><div class="col col-50"><input type=number min=0 inputmode=numeric pattern=[0-9]* ng-model=checklist.q02 class=cell></div><div class=col><div class=cell ng-class="{selected: checklist.q02Unit==\'in\'}" ng-click="checklist.q02Unit=\'in\';">in</div></div><div class=col><div class=cell ng-class="{selected: checklist.q02Unit==\'cm\'}" ng-click="checklist.q02Unit=\'cm\';">cm</div></div></div><div class=row><div class=col><img src=images/door.png alt=measure-door-width></div></div></div></ion-slide><ion-slide class=question-page><h4 class=question><span class=qnumber ng-init="checklist.q03=0">3.</span> Do you have to go through steps to enter your house?</h4><div class=answer><div class=row><div class="col col-50"><div class=cell ng-class="{selected: checklist.q03==1}" ng-click="checklist.q03=1; a3=true">Yes</div></div><div class="col col-50"><div class=cell ng-class="{selected: checklist.q03==0}" ng-click="checklist.q03=0; a3=false">No</div></div></div></div><div ng-if=a3 ng-init="checklist.q03a=1"><h4 class=question2><span class=qnumber2>3a.</span> How many steps? (please take a photo of the steps to bring it your evaluation session)</h4><div class=answer2><div class=row><div class="col col-50"><div class=cell ng-class="{selected: checklist.q03a==1}" ng-click="checklist.q03a=1">One step</div></div><div class="col col-50"><div class=cell ng-class="{selected: checklist.q03a==0}" ng-click="checklist.q03a=0">More steps</div></div></div></div></div></ion-slide><ion-slide class=question-page ng-init="_list04=bindCheckboxValue(checkboxItems[4], checklist.q04)"><h4 class=question><span class=qnumber>4.</span> What type of mobility device are you interested in? <span class=note>select as many as apply</span></h4><div class=answer><div class=list><ion-checkbox ng-repeat="item in _list04" ng-value=item.title ng-model=item.checked ng-change="checklist.setQ04(item.title, item.checked)">{{ item.title }}</ion-checkbox></div></div></ion-slide><ion-slide class=question-page ng-init="_list05=checklist.q05"><h4 class=question><span class=qnumber>5.</span> What do you want to do with your mobility device? <span class=note>select all that apply</span></h4><div class=answer><ion-slide-box delegate-handle=innerSlideBox2><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list05 | limitTo:9" ng-value=item.title ng-model=item.value>{{item.title}}</ion-checkbox></div><br></ion-slide><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list05 | limitTo:8:8" ng-value=item.title ng-model=item.value>{{item.title}}</ion-checkbox><input type=text ng-if=_list05[16].value ng-model=_list05[17].value></div></ion-slide><ion-slide><div class=list><ion-checkbox ng-value=_list05[16].title ng-model=_list05[16].value>{{_list05[16].title}}</ion-checkbox><input type=text ng-if=_list05[16].value ng-model=_list05[17].value></div></ion-slide></ion-slide-box></div></ion-slide><ion-slide class=question-page ng-init="_list06=checklist.q06"><h4 class=question><span class=qnumber>6.</span> How are you going to transport the mobility device? <span class=note>check all that apply</span></h4><div class=answer><ion-slide-box delegate-handle=innerSlideBox3><ion-slide><div class=list><span>Personal Vehicle Type</span><br><ion-checkbox ng-repeat="item in _list06 | limitTo:4" ng-value=item.title ng-model=item.value>{{item.title}}</ion-checkbox><span>How to load/unload?</span><br><ion-checkbox ng-repeat="item in _list06 | limitTo:2:4" ng-value=item.title ng-model=item.value>{{item.title}}</ion-checkbox></div><br></ion-slide><ion-slide><div class=list><span>Public Transportation Type</span><br><ion-checkbox ng-repeat="item in _list06 | limitTo:4:6" ng-value=item.title ng-model=item.value>{{item.title}}</ion-checkbox><span>How to get on/off?</span><br><ion-checkbox ng-repeat="item in _list06 | limitTo:2:10" ng-value=item.title ng-model=item.value>{{item.title}}</ion-checkbox></div></ion-slide></ion-slide-box></div></ion-slide><ion-slide class=question-page ng-init="_list07=bindCheckboxValue(checkboxItems[7], checklist.q07)"><h4 class=question><span class=qnumber>7.</span> What wheelchair features are important to you? <span class=note>select as many as apply</span></h4><div class=answer><ion-slide-box delegate-handle=innerSlideBox3><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list07 | limitTo:9" ng-value=item.title ng-model=item.checked ng-change="checklist.setQ07(item.title, item.checked)">{{ item.title }}</ion-checkbox></div><br></ion-slide><ion-slide><div class=list><ion-checkbox ng-repeat="item in _list07 | limitTo:-1*_list07.length+9" ng-value=item.title ng-model=item.checked ng-change="checklist.setQ07(item.title, item.checked)">{{ item.title }}</ion-checkbox></div><br></ion-slide></ion-slide-box></div></ion-slide><ion-slide class=question-page><h4 class=question><span class=qnumber>8.</span> Are you currently using a wheelchair?</h4><div class=answer ng-init><div class=row><div class="col col-50"><div class=cell ng-class="{selected: checklist.q08==1}" ng-click="checklist.q08=1;updateSlidebox()">Yes</div></div><div class="col col-50"><div class=cell ng-class="{selected: checklist.q08==0}" ng-click="checklist.q08=0;updateSlidebox();">No</div></div></div></div></ion-slide><ion-slide class=question-page ng-if="checklist.q08==1"><h4 class=question><span class=qnumber>9.</span> What is the make and model of your wheelchair?</h4><div class=answer><div class=row><div class=col><input type=text class=cell placeholder=Make ng-model=checklist.q09.Make></div></div><div class=row><div class=col><input type=text class=cell placeholder=Model ng-model=checklist.q09.Model></div></div></div></ion-slide><ion-slide class=question-page ng-if="checklist.q08==1"><h4 class=question><span class=qnumber>10.</span> How old is your current wheelchair?</h4><div class=answer><div class=row><div class="col col-50"><input type=number min=0 inputmode=numeric pattern=[0-9]* ng-model=checklist.q10 class=cell></div><div class=col><div class="cell plain">years</div></div></div><div class=row ng-if="checklist.q10 != null && checklist.q10 < 5"><div class=col><a ng-click="getStaticModalPage(\'servicedelivery/modal_self_assessment.html\')"><span class=title>Please review more information here More Info</span></a></div></div></div></ion-slide><ion-slide class=question-page ng-if="checklist.q08==1" ng-init="_list11=bindCheckboxValue(checkboxItems[11], checklist.q11)"><h4 class=question><span class=qnumber>11.</span> Average amount of time you spend in you wheelchair while awake</h4><div class=answer><div class=list><ion-checkbox ng-repeat="item in _list11" ng-value=item.title ng-model=item.checked ng-click="checklist.q11 = item.checked ? item.title : \'\'" ng-checked="checklist.q11==item.title" class=checkbox2option>{{ item.title }}</ion-checkbox></div></div></ion-slide><ion-slide class=question-page ng-if="checklist.q08==1"><h4 class=question><span class=qnumber>12.</span> What do you think about your current wheelchair? <span class=note>Please note any concerns or improvements you would like to see</span></h4><div class=answer><div class=row><div class=col><textarea class=cell ng-model=checklist.q12 placeholder="Type your review here"></textarea></div></div></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class=bar-positive><div class=buttons ng-click=prevChecklistPage() ng-hide="checklistCurrentIndex==0"><button class=button>Previous</button></div><h1 class="title checklist-pager" style="text-align: center; left: 82px;">{{checklistCurrentIndex+1}} of {{checklistTotal}}</h1><div class=buttons><button class=button ng-if="checklistCurrentIndex+1 != checklistTotal" ng-click=nextChecklistPage()>Next</button> <button class=button ng-if="checklistCurrentIndex+1 == checklistTotal" ng-click=finish(data)>Finish</button></div></ion-footer-bar></ion-modal-view>');
$templateCache.put('todo/event-form.html','<ion-modal-view class="todo event"><ion-header-bar class=bar-positive><div class=buttons><button class=button ng-click=cancel()>Cancel</button></div><h1 class=title>{{title}}</h1><div class=buttons><button class=button ng-click=save(event)>Save</button></div></ion-header-bar><ion-content ng-init="cal1=false"><div class=list><div class="item item-divider"></div><label class="item item-input item-stacked-label"><span class=input-label>Title:</span> <input type=text placeholder="Title of the event" ng-model=event.title></label><div class="item item-divider"></div><div class=item mobi-picker=event.dtFrom mobi-picker-options="{ theme: \'{{MOBIPICKER_THEME}}\', rows: 3, preset: \'datetime\', display: \'modal\', onShow: onShowHandler, onHide: onHideHandler, dateOrder:\'Mddy\', timeWheels: \'HHii\', setText: \'Done\', stepMinute: 1, showLabel: true }">Start <span class=item-note>{{event.dtFrom | date:\'MMM d, y HH:mm\'}}</span></div><div ng-if=!event.isAllDay class=item mobi-picker=event.dtTo mobi-picker-options="{ theme: \'{{MOBIPICKER_THEME}}\', rows: 3, preset: \'datetime\', display: \'modal\', onShow: onShowHandler, onHide: onHideHandler, dateOrder:\'Mddy\', timeWheels: \'HHii\', setText: \'Done\', stepMinute: 10, showLabel: true }">End <span class=item-note>{{event.dtTo | date:dtToFilter}}</span></div><ion-toggle ng-change=toggleAllDay(event) ng-model=event.isAllDay toggle-class=toggle-balanced>All day</ion-toggle><div class=item ng-click=openOpt()>Reminder <span class=item-note>{{getOptLabel(event.reminder)}}{{openOpt}}</span></div><div class="select list" ng-if=openOptFlag><ion-radio ng-repeat="item in reminderOpts" class="animated bounceIn" ng-value=item.value ng-model=event.reminder ng-change=closeOpt()>{{ item.label}}</ion-radio></div><div class="item item-divider"></div><label class="item item-input item-stacked-label"><span class=input-label style="width: 100%">Phone number to call:</span> <input type=text placeholder="XXX XXX XXXX" ng-model=event.phoneNumber ui-us-phone-number></label> <label class="item item-input item-stacked-label"><span class=input-label>Location:</span> <input type=text placeholder="Event location" ng-model=event.location></label> <label class="item item-input item-stacked-label"><span class=input-label>Description:</span> <textarea placeholder="Detail information" rows=8 ng-model=event.description></textarea></label></div></ion-content></ion-modal-view>');
$templateCache.put('todo/main-detail.html','<ion-view title="Event detail" class=todo><ion-content class=todo-detail><div class=list><div class="item header"><h2>{{todo.title}}</h2><p>{{todo.dtFrom | date: \'EEEE, MMM d, y\'}}<br>From {{todo.dtFrom | date: \'hh:mm a\'}} to {{todo.dtTo | date: \'hh:mm a\'}}</p></div><div class="item item-icon-right std"><span class=caption>Phone number to call:</span><p>{{todo.phoneNumber}}</p><i ng-if=todo.phoneNumber class="icon icon-second ion-ios7-chatbubble-outline" ng-click=sms(todo.phoneNumber)></i> <i ng-if=todo.phoneNumber class="icon ion-ios7-telephone-outline" ng-click=call(todo.phoneNumber)></i></div><div class="item std"><span class=caption>Location:</span><p>{{todo.location}}</p></div><div class="item std"><span class=caption>Description:</span><p>{{todo.description}}</p></div></div></ion-content></ion-view>');
$templateCache.put('todo/main.html','<ion-view title="{{vm.showDone ? \'Completed Tasks\' : \'To Do List\'}}"><ion-nav-buttons side=primary ng-init="vm.showDone=false"><button class="button button-clear icon ion-android-checkbox-outline" ng-if="vm.showDone==false" ng-click="vm.showDone=true"></button> <button class="button back-button buttons button-icon ion-arrow-left-c header-item" ng-if="vm.showDone==true" ng-click="vm.showDone=false"></button></ion-nav-buttons><ion-nav-buttons side=secondary><button class="button button-clear icon ion-ios-plus-outline" ng-click=addNewEvent() ng-if="vm.showDone==false"></button></ion-nav-buttons><ion-content class=todo><div class=list><div class="item item-avatar" ng-repeat="item in todos | filter:{isDone: vm.showDone} | orderBy:\'dtFrom\'" ng-init="rem=item.getRemainingDay()"><div ng-click="askAction($event, item)"><div class="item-image avatar-number" ng-class="{morethan14: moreThan14(rem), morethan3: moreThan3(rem), lessthan3: lessThan3(rem), threedigit: threeDigit(rem), twodigit: twoDigit(rem) }">{{rem}}</div><h2>{{item.title}}</h2><p>{{item.dtFrom | date: \'hh:mm a, EEE, MMM d, y\'}}</p></div><div class="checkbox checkbox-right"><input type=checkbox ng-checked=item.isDone ng-click="$event.preventDefault(); setDone($event, item)"></div></div></div></ion-content></ion-view>');
$templateCache.put('todo/reminder-select.html','<!DOCTYPE html><html lang=en><head><meta charset=utf-8></head><body></body></html>');
$templateCache.put('widgets/audiomedia.html','<style type=text/css>\n#audio-capture ion-content {\n  padding: 15px;\n  background-color: black;\n}\n\n#audio-capture.modal .bar-subheader {\n  background: black;\n}\n\n#audio-capture.modal .bar-subheader .title {\n    text-align: center;\n    font-weight: 800;\n    font-size: 24px;\n    color: white;\n}\n\n.mic {\n  position: absolute !important;\n  top: 0 ;\n  bottom: 80px;\n  left: 0;\n  right: 0;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-justify-content: center;\n  justify-content: center;\n  -webkit-align-items: center;\n  align-items: center;\n\n  font-size: 300px;\n  color: white;\n}\n\n.controller {\n  position: absolute;\n  width: 100%;\n  height: 80px;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  font-size: 40px;\n  color: white;\n\n  display: -webkit-flex;\n  display: flex;\n  -webkit-justify-content: center;\n  justify-content: center;\n  -webkit-align-items: center;\n  align-items: center;\n}\n\n.controller * {\n  padding: 10px;\n}\n\n.left, .right {\n  width: 20%;\n  text-align: center;\n}\n.center {\n  width: 60%;\n  text-align: center;\n}\n\n.record {\n  padding-left: 20%;\n  padding-right: 20%;\n}\n\n.red  { color: red; }\n.grey { color: grey;}\n\n</style><ion-modal-view id=audio-capture><ion-header-bar class=bar-positive><h1 class=title>Audio Capture</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=cancelRecord() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h4 class=title>{{timer}}</h4></ion-header-bar><ion-content scroll=false><div class=mic><i class="icon ion-ios-mic"></i></div><div class=controller><i class="icon left ion-ios-undo-outline" ng-if="status>=STYPE.RECORDED" ng-click=retake()></i> <i class="icon center" ng-click=mainAction() ng-class="{\'ion-record red\': status==STYPE.NONE, \'ion-stop grey\': status==STYPE.RECORDING, \'ion-checkmark-round\': status>=STYPE.RECORDED}"></i> <i class="icon right" ng-if="status>=STYPE.RECORDED" ng-click=checkAudio() ng-class="{\'ion-play\': status==STYPE.RECORDED || status==STYPE.PAUSE || status==STYPE.STOP, \'ion-stop\': status==STYPE.PLAYING}"></i></div></ion-content></ion-modal-view>');
$templateCache.put('usewheelchair/main-setup-features-a.html','<ion-view title="Wheelchair Features"><ion-content class="usewchair content" padding=true><div class=frame><ion-slide-box auto-play=true does-continue=true show-pager=false><ion-slide><img src=images/use/features/page5_w_text.svg class=illustration></ion-slide><ion-slide><img src=images/use/features/page6_w_text.svg class=illustration></ion-slide><ion-slide><img src=images/use/features/page7_w_text.svg class=illustration></ion-slide></ion-slide-box></div><div class=features-menu><div class=row style="padding: 0px"><div class="col col-50" style="padding: 0px"><ul class="block button-list"><li ng-click="navigateTo(\'.feature\', {id: \'feature01\'})">Wheel Position</li><li ng-click="navigateTo(\'.feature\', {id: \'feature02\'})">Wheel Camber</li><li ng-click="navigateTo(\'.feature\', {id: \'feature03\'})">Seat Angle</li><li ng-click="navigateTo(\'.feature\', {id: \'feature04\'})">Seat Depth</li><li ng-click="navigateTo(\'.feature\', {id: \'feature05\'})">Seat Cushion</li></ul></div><div class="col col-50" style="padding: 0px"><ul class=button-list><li ng-click="navigateTo(\'.feature\', {id: \'feature06\'})">Backrest Height</li><li ng-click="navigateTo(\'.feature\', {id: \'feature07\'})">Backrest Angle</li><li ng-click="navigateTo(\'.feature\', {id: \'feature08\'})">Back Support</li><li ng-click="navigateTo(\'.feature\', {id: \'feature10\'})">Footrest Height</li><li ng-click="navigateTo(\'.feature\', {id: \'feature09\'})">Armrests</li></ul></div></div><div class=row style="padding: 0px"><div class=col style="padding: 5px 0px"><ul class=button-list><li ng-click="navigateTo(\'.feature\', {id: \'feature11\'})">Leg To Seat Surface Angle</li><li ng-click="navigateTo(\'.feature\', {id: \'feature12\'})">Position Accessories</li></ul></div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-angle.html','<ion-view title="Backrest Angle" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'4\')"></button></ion-nav-buttons><div class="sticky-frame has-header two image"><div class=wrapper><img src=images/use/how/backrest_angle_small.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/backrest_angle_large.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><h4>Backrest angle could affect sitting stability.</h4><ul class=bullet-point><li>Bakcrest angle refers to backrest-to-seat angle to be precise. The configuration of backrest angle and seat angle determines how upright you are when sitting in a wheelchair.</li><li>Most of backrest angles are between 90\xB0 to 110\xB0, based on personal preference. An <a ng-click="navigateTo(\'^.feature\', {id: \'seat-angle\'})">increased seat angle (seat dump)</a> is usually coupled with backrest angle smaller than 90\xB0 to maintain the torso in an upright position (shown left). This configuration helps secure the pelvis to improve sitting stability and prevent sliding forward, but requires sufficient hip joint range and torso control.</li><li>A backrest angle greater than 110\xB0 (shown right) is used to accommodate users who have decreased torso control or hip range of motion, but it may increase the chance of sliding out of the seat.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-camber.html','<ion-view title="Wheel Camber" class="usewchair content has-content-bar"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'2\')"></button></ion-nav-buttons><div class="sticky-frame has-header two image"><div class=wrapper><img src=images/use/how/wheel_camber_no_camber.png> <img src=images/use/how/wheel_camber_with_camber.png></div></div><ion-content class="usewchair content padding"><h4>Wheel camber (shown right)</h4><ul class=bullet-point><li>allows you to reach handrims easily.</li><li>protects hands in tight spaces.</li><li>increases side to side (lateral) stability.</li><li>allows greater stability on side slopes.</li><li>makes it harder to propel a wheelchair.</li><li>makes a wheelchair wider at the base.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-cushion.html','<ion-view title="Seat Cushion" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'9\')"></button></ion-nav-buttons><div class="sticky-frame has-header one image"><div class=wrapper><img src=images/use/how/cushion.jpg ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><p>An appropriate seat cushion is key to protect you from pressure sores, and provide seating comfort.</p><ul class=bullet-point><li>A pressure mapping assessment is usually conducted to help select or calibrate a cushion. A sensor-embedded pressure mat (shown left) is placed on top of the candidate cushion, and can show pressure distribution (shown right). Clinicians can adjust the cushion, switch to another cushion, or adjust wheelchair setup to minimize areas with high pressure (red spots shown in the right picture).</li><li>You should always sit on a seat cushion when using a wheelchair.</li><li>DO NOT add any cushion/pad on top of your cushion, which affects pressure redistribution and decreases sitting stability.</li><li>When switching to a cushion of different thickness, you will likely need adjustments to seat angle, backrest height, and footrest height.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-cushiontype.html','<ion-view title="Cushion Types" class="usewchair content has-content-bar fullpage slidebox"><ion-slide-box><ion-slide><ion-content class=padding><p>Different cushion types provide different features. Please contact your therapists or supplier for an <a href ng-click="navigateTo(\'^.feature\', {id: \'pressuremap\'})">pressure mapping</a> assessment to decide the appropriate cushion type for you.</p><p><a href ng-click="navigateTo(\'^.feature\', {id: \'pressuremap\'})">Regular maintenance</a> is reguired to ensure the cushion is functioning for you.</p><p>Here are some common cushion types:</p></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>Contoured foam cushions</h4><ul class=bullet-point><li>A piece of foam or a combination of foam with different densities.</li><li>To adjust the contoured shape one either carves off more foam or glues in additional pieces of foam.</li><li>Contoured foam cushions wear out faster than other types of cushion, but they are relatively inexpensive, and provide good support.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>Air filled-capsule cushions</h4><ul class=bullet-point><li>Have a matrix of air-filled capsules.</li><li>Air is allowed to move among the capsules.</li><li>Contour shape changes as the user shifts his or her weight, which consequently compromises stability.</li><li>Close attention to air-flow and <a href ng-click="navigateTo(\'^.feature\', {id: \'pressuremap\'})">Regular maintenance</a> is required because air-capsules could be punctured and air-leaks can occur.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>Air foam cushions</h4><ul class=bullet-point><li>A piece of foam wrapped tightly in an air-tight and water resistant cover.</li><li>When sit upon it, open the valve to release air to allow you to immerse into the cushion while the foam conforms to you. After the valve is closed, the cushion keeps its contour shaped.</li><li>Air-foam cushions need regeneration daily through overnight inflation.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>Visoelastic-fluid and gel cushions</h4><ul class=bullet-point><li>Distribute pressures by the transformation feature of the viscoelastic or gel-filled pouches.</li><li>Pouches are often attached to a foam base to provide a stable base during sitting.</li><li>Gel and viscoelastic cushions need daily maintenance of \u201Ckneading\u201D to mold and distribue the gel or viscoelastic fluid evenly to allow appropriate immersion and to prevent from bottoming out.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>Hybrid cushions</h4><p>Incorporate the advantages of different types of cushion, such as air-filled capsules embedded in a foam base, or gel or viscoelastic fluid pouches attached on a foam base.</p></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-footrest-angle.html','<ion-view title="Footrest Angle" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'10\')"></button></ion-nav-buttons><div class="sticky-frame has-header two image"><div class=wrapper><img src=images/use/how/footrest_angle_large.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/footrest_angle_regular.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><p>It is also called leg-to-seat angle or hanger angle, and determined based on wheelchair dimension and the knee range of motion. Appropriate footrest angle allows you to sit in the wheelchair stably and comfortably, and creates a smaller wheelchair footprint for better access to narrow spaces.</p><ul class=bullet-point><li>Only wheelchairs with elevating legrests can change footrest angle.</li><li>Wheelchairs with swing-away footrests can change this angle by ordering a different pair of footrests.</li><li>Wheelchairs with fixed footrests cannot change this angle after the wheelchair is custom made for you.</li><li>Larger footrest angle (shown left) may increase the tendency to slide forward out of the wheelchair, require more effort to turn, and decrease your access to narrow spaces.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-footrest-length.html','<ion-view title="Footrest Length" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'11\')"></button></ion-nav-buttons><div class="sticky-frame has-header three image"><div class=wrapper><img src=images/use/how/footrest_length_short.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/footrest_length_regular.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/footrest_length_long.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><p>It is also known as \u201Clegrest length\u201D and \u201Cfootrest-to-seat length\u201D. Appropriate footrest length provides good sitting stability.</p><ul class=bullet-point><li>Shorter footrest length (shown left) may raise knees up thus interfering sitting at a desk, and may increase pressure underneath your buttocks and tailbone, and the risks of developing pressure sores.</li><li>Longer footrest length (shown right) may decrease sitting stability and increase the tendency of sliding forward out of the seat.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-height.html','<ion-view title="Backrest Height" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'3\')"></button></ion-nav-buttons><div class="sticky-frame has-header two image"><div class=wrapper><img src=images/use/how/backrest_height_low.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/backrest_height_high.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><h4>Backrest height could affect the movements of your torso and shoulders, as well as sitting stability.</h4><ul class=bullet-point><li>A higher backrest (shown right) could limit your ability to reach backward, and move your torso and shoulders for propulsion. You may strain your shoulders when propelling with a higher backrest.</li><li>A higher backrest could provide more torso support and stability.</li><li>A lower backrest provides less torso support, but allows you to move freely for propelling and reaching.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-position.html','<ion-view title="Wheel Position" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button id=popupme class="button button-clear icon ion-compose" ng-click="openPopup(\'1\')"></button></ion-nav-buttons><div class="sticky-frame has-header three image"><div class=wrapper><img src=images/use/how/wheel_position_axel_inline_with_shoulder.png ng-class="{selected: currentPage == 1}"> <img src=images/use/how/wheel_position_axel_behind_shoulder.png ng-class="{selected: currentPage == 2}"> <img src=images/use/how/wheel_position_axel_infront_of_shoulder.png ng-class="{selected: currentPage == 3}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index)><ion-slide><ion-content class=padding><h4>When the wheel axle is in line with the shoulder,</h4><ul class=bullet-point><li>you are able to reach most of the handrim.</li><li>it is easier to pop a wheelie to get over obstacles/curbs.</li><li>you are relatively stable.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>When the wheel axle is behind the shoulder,</h4><ul class=bullet-point><li>it is harder to reach most of the handrim.</li><li>you may strain shoulders for propulsion.</li><li>you are more stable.</li><li>you need more space to make turns.</li><li>it is easier to pop a <a ng-click="navigateTo(\'main.usewheelchair.skills.skill.page.page\', {name: \'wheelie\'})">wheelie</a>.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><h4>When the wheel axle is in front of the shoulder,</h4><ul class=bullet-point><li>it is easier to reach most of the handrim.</li><li>it is easier to pop a wheelie.</li><li>you are less stable and may tip backwards easily.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-pressuremap.html','<ion-view title="Pressure Mapping"><ion-content class="usewchair content" padding=true><p>Pressure-mapping is a tool for therapists and suppliers to assess pressure distribution and choose or calibrate cushions for appropriate fit. The goal is to approximate total contact and minimize areas with high pressure.</p><div class=frame></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-seat-angle.html','<ion-view title="Seat Angle" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'6\')"></button></ion-nav-buttons><div class="sticky-frame has-header two image"><div class=wrapper><img src=images/use/how/seat_angle_flat.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/seat_angle_seat_dump.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><p>New users usually start with 0.5 to 1 inch of seat dump (shown right). Seat angle can be adjusted based on personal preference after users become familiar with their balance and strength.</p><ul class=bullet-point><li>Seat dump allows you to easily access pushrims, improves sitting stability, and prevents you from sliding forward out of the wheelchair.</li><li>Seat dump makes it difficult to transfer out of the wheelchair.</li><li>Flat seat is appropriate for foot propulsion and for hip flexion &lt; 90\xB0.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-seat-depth.html','<ion-view title="Seat Depth" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'5\')"></button></ion-nav-buttons><div class="sticky-frame has-header two image"><div class=wrapper><img src=images/use/how/seat_depth_short.png ng-class="{selected: currentPage == 1}"><img src=images/use/how/seat_depth_long.png ng-class="{selected: currentPage == 2}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index)><ion-slide><ion-content class=padding><p>Seat depth is usually determined by measuring the length from the further end of the buttock to the back of the knee when a user is in a proper sitting position, and deducting 2 inches from the measured length for clearance.</p><p>When seat depth is short,<ul class=bullet-point><li>buttocks and legs are not supported properly.</li><li>there is an increased risk of pressure sores over buttocks and thighs.</li><li>it is harder to propel the wheelchair forward.</li></ul></p></ion-content></ion-slide><ion-slide><ion-content class=padding><p>When seat depth is long,<ul class=bullet-point><li>you may slide forward easily.</li><li>you may sit with slouched posture.</li><li>There is an increased risk of pressure sores behind the knees and on tailbone.</li><li>you may strain shoulders when propelling.</li></ul></p></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-seat-height.html','<ion-view title="Seat-To-Floor Height" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'8\')"></button></ion-nav-buttons><div class="sticky-frame has-header three image"><div class=wrapper><img src=images/use/how/seat_height_high.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/seat_height_regular.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/seat_height_low.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><p>Seat-to-floor height is normally around 18-20 inches based on personal preference. The ideal seat-to-floor height should allow you to touch the rear wheel axle when letting your hands drop down naturally (show middle).</p><ul class=bullet-point><li>Higher seat-to-floor height (shown left) may increase risks of tipping backward, reduce your access to handrims for efficient propulsion, and be problematic when accessing desks and tables.</li><li>Lower seat-to-floor height (shown right) may allow better access to desks and tables, but will decrease the height you can reach and ground clearance.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features-seat-width.html','<ion-view title="Seat Width" class="usewchair content has-content-bar fullpage slidebox"><ion-nav-buttons side=secondary><button class="button button-clear icon ion-compose" ng-click="openPopup(\'7\')"></button></ion-nav-buttons><div class="sticky-frame has-header three image"><div class=wrapper><img src=images/use/how/seat_width_wide.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/seat_width_regular.png ng-class="{selected: currentPage == 0}"> <img src=images/use/how/seat_width_narrow.png ng-class="{selected: currentPage == 0}"></div></div><ion-slide-box on-slide-changed=onSlideChanged($index) show-pager=false><ion-slide><ion-content class=padding><p>Seat width is usually determined by measuring the widest distance between your buttocks, hips, or thighs when a user is in a proper sitting position. If necessary, add 2 inches to that distance for bulky clothing, orthoses, or side panel of the armrests.</p><ul class=bullet-point><li>Seat width should be as snug as possible to allow good access to pushrims and make the wheelchair compact for navigating in narrow spaces.</li><li>Narrow seat width could increase risk for pressure sores.</li><li>Wide seat width could affect access to pushrims for efficient propulsion, decrease sitting balance, and affect navigation in narrow spaces.</li></ul></ion-content></ion-slide></ion-slide-box></ion-view>');
$templateCache.put('usewheelchair/main-setup-features.html','<ion-view title="Wheelchair Features"><ion-content class="usewchair content" padding=true><div class=card><div class=item ng-click="status.open = status.open == \'wheel\' ? null : \'wheel\'"><i class=icon ng-class="{\'ion-arrow-right-b\': status.open != \'wheel\', \'ion-arrow-down-b\': status.open == \'wheel\'}"></i> <span><strong>Wheel</strong></span></div><div class=item ng-if="status.open == \'wheel\'"><ul class="block button-list"><li ng-click="navigateTo(\'.feature\', {id: \'feature01\'})">Wheel Position</li><li ng-click="navigateTo(\'.feature\', {id: \'feature02\'})">Wheel Camber</li></ul></div></div><div class=card><div class=item ng-click="status.open = status.open == \'seat\' ? null : \'seat\'"><i class=icon ng-class="{\'ion-arrow-right-b\': status.open != \'seat\', \'ion-arrow-down-b\': status.open == \'seat\'}"></i> <span><strong>Seat</strong></span></div><div class=item ng-if="status.open == \'seat\'"><ul class="block button-list"><li ng-click="navigateTo(\'.feature\', {id: \'feature03\'})">Seat Angle</li><li ng-click="navigateTo(\'.feature\', {id: \'feature04\'})">Seat Depth</li><li ng-click="navigateTo(\'.feature\', {id: \'feature05\'})">Seat Cushion</li></ul></div></div><div class=card><div class=item ng-click="status.open = status.open == \'backrest\' ? null : \'backrest\'"><i class=icon ng-class="{\'ion-arrow-right-b\': status.open != \'backrest\', \'ion-arrow-down-b\': status.open == \'backrest\'}"></i> <span><strong>Backrest</strong></span></div><div class=item ng-if="status.open == \'backrest\'"><ul class="block button-list"><li ng-click="navigateTo(\'.feature\', {id: \'feature06\'})">Backrest Height</li><li ng-click="navigateTo(\'.feature\', {id: \'feature07\'})">Backrest Angle</li></ul></div></div><div class=card><div class=item ng-click="status.open = status.open == \'legs\' ? null : \'legs\'"><i class=icon ng-class="{\'ion-arrow-right-b\': status.open != \'legs\', \'ion-arrow-down-b\': status.open == \'legs\'}"></i> <span><strong>Legs</strong></span></div><div class=item ng-if="status.open == \'legs\'"><ul class="block button-list"><li ng-click="navigateTo(\'.feature\', {id: \'feature11\'})">Leg To Seat Surface Angle</li></ul></div></div><div class=card><div class=item ng-click="status.open = status.open == \'other\' ? null : \'other\'"><i class=icon ng-class="{\'ion-arrow-right-b\': status.open != \'other\', \'ion-arrow-down-b\': status.open == \'other\'}"></i> <span><strong>Other</strong></span></div><div class=item ng-if="status.open == \'other\'"><ul class="block button-list"><li ng-click="navigateTo(\'.feature\', {id: \'feature08\'})">Back Support</li><li ng-click="navigateTo(\'.feature\', {id: \'feature10\'})">Footrest Height</li><li ng-click="navigateTo(\'.feature\', {id: \'feature09\'})">Armrests</li><li ng-click="navigateTo(\'.feature\', {id: \'feature12\'})">Position Accessories</li></ul></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-goals-comfort.html','<ion-view title=Comfort><ion-content class="usewchair content" padding=true><div class=frame><img ng-src=images/use/goal/page12_comfort.gif></div><p>Wheelchair set-up should allow you to sit in a wheelchair comfortably, give you stability, and let your arms be free to reach the wheels and push chair easily.</p></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-goals-maneuverability.html','<ion-view title=Maneuverability><ion-content class="usewchair content" padding=true><div class=frame><img ng-src=images/use/goal/page11_maneuver.gif class=illustration></div><p>Wheelchair set-up should allow you to move around your living areas at ease.</p><p>There should be appropriate compromises between maneuverability and safety. Get training and practice on <a href ng-click=navigateTo()>basic wheelchair skills</a> and <a href ng-click=navigateTo()>advanced wheelchair skills</a> to improve your maneuvering skills.</p></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-goals-pressure.html','<ion-view title="Pressure Distribution"><ion-content class="usewchair content" padding=true><p>Wheelchair set-up should help you minimize pressure on your body and reduce risks of developing <a href ng-click=navigateTo()>pressure sores</a>.</p><p>Common Spots of Pressure Sores:</p><div class=frame style="border-width: 0px"><img src=images/use/goal/page13_pressure.gif></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-goals-propulsion.html','<ion-view title="Propulsion Efficiency"><ion-content class="usewchair content" padding=true><div class=frame><img ng-src=images/use/goal/page10_propulsion.gif></div><p>Wheelchair set-up should allow you to reach most of the handrim and propel wheelchair smoothly. Get training and practice on <a href ng-click=navigateTo()>propulsion technique</a> to prevent <a href ng-click=navigateTo()>arm injuries</a> and push chair easily.</p></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-goals.html','<ion-view title=Goals><ion-content class="usewchair gen-tpl3" padding=true><md-grid-list md-cols=2 md-gutter=15px md-row-height=2:3><md-grid-tile class=md-whiteframe-z1 ng-click="navigateTo(\'.comfort\')"><img ng-src=images/use/goal/menu_comfort.svg><div class=footer>Comfort</div></md-grid-tile><md-grid-tile class=md-whiteframe-z1 ng-click="navigateTo(\'.propulsion\')"><img ng-src=images/use/goal/menu_propulsion.svg><div class=footer>Propulsion Efficiency</div></md-grid-tile><md-grid-tile class=md-whiteframe-z1 ng-click="navigateTo(\'.pressure\')"><img ng-src=images/use/goal/menu_pressure.svg><div class=footer>Pressure Distribution</div></md-grid-tile><md-grid-tile class=md-whiteframe-z1 ng-click="navigateTo(\'.maneuverability\')"><img ng-src=images/use/goal/menu_maneuver.svg><div class=footer>Maneuverability</div></md-grid-tile></md-grid-list></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-how.html','<ion-view title="Fit and Set-up: How?" hide-tabs show-nav-content=navContentConfigs><ion-content class="usewchair content" padding=true><ul class=accordion><li><input type=radio name=a> <i></i> <img ng-src=images/how/wc-wheel.png><h3>Wheel</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'position\'})">Position</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'camber\'})">Camber</a></div></li><li><input type=radio name=a> <i></i> <img ng-src=images/how/wc-back.png><h3>Backrest</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'height\'})">Height</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'angle\'})">Angle</a></div></li><li><input type=radio name=a> <i></i> <img ng-src=images/how/wc-seat.png><h3>Seat</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'seat-depth\'})">Depth</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'seat-angle\'})">Angle</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'seat-width\'})">Width</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'seat-height\'})">Seat-to-Floor Height</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'cushion\'})">Cushion</a></div></li><li><input type=radio name=a> <i></i> <img ng-src=images/how/wc-other.png><h3>Footrest</h3><div><a class=block ng-click="navigateTo(\'.feature\', {id: \'footrest-angle\'})">Angle</a> <a class=block ng-click="navigateTo(\'.feature\', {id: \'footrest-length\'})">Length</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-summary.html','<ion-view title="Wheelchair Summary"><ion-content class="usewchair content" padding=true>{{display}}<div class=block-summary><h4>Features:</h4><ul class=bullet-point><li class=item-icon-right ng-repeat="item in summary.features">{{item.value}} <i class="icon icon-delete ion-minus-circled" ng-click=deleteFeature(item)></i></li></ul></div><div class=item-divider style="margin-left: -15px; margin-right: -15px;"></div><div class=block-summary><h4>Problems:</h4><ul class=bullet-point><li class=item-icon-right ng-repeat="item in summary.problems">{{item.value}} <i class="icon icon-delete ion-minus-circled" ng-click=deleteProblem(item)></i></li></ul></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-info.html','<ion-view title=Information><ion-content class=usewchair><br><p>Please work with your therapist or supplier if you want to adjust your wheelchair. When you adjusted one wheelchair feature, you may need to address relative changes of other wheelchair features.</p><br><img src=images/use/wchair.svg class=illustration></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob01.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob01\')"></div><div class=problem><h4>Problem:</h4><p>Unable to reach most of handrim</p></div><div class=solution><h4>Possible Solutions:</h4><ul class=bullet-point><li>Move wheels forward (<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature01\'})">Wheel position</a>).</li><li>Decrease <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature06\'})">backrest height</a>.</li><li>Remove or lower <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature09\'})">armrests</a>.</li><li>Increase <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature02\'})">wheel camber</a>.</li><li>Increase <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature03\'})">seat angle</a>.</li><li>Check your <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature05\'})">seat cushion</a>.</li></ul></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob02.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob02\')"></div><div class=problem><h4>Problem:</h4><p>Need to reach far back for handrims</p></div><h4>Possible Solutions:</h4><ul class=bullet-point><li>Move wheels forward (<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature01\'})">Wheel position</a>).</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob03.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob03\')"></div><div class=problem><h4>Problem:</h4><p>Tip backwards too easily</p></div><h4>Possible Solutions:</h4><ul class=bullet-point><li>Move wheels backward (<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature01\'})">Wheel position</a>).</li><li>Decrease <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature03\'})">seat angle</a>.</li><li>Decrease <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature07\'})">backrest recline angle</a>.</li><li>Decrease your belongings hanging on the backrest.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob04.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob04\')"></div><div class=problem><h4>Problem:</h4><p>Unable to pop a wheelie to get over curb</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Move wheels forward (<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature01\'})">Wheel position</a>).</li><li>Sharpen <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature11\'})">leg to seat surface angle</a> (contact therapist or supplier for assessment to adjust this angle).</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob05.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob05\')"></div><div class=problem><h4>Problem:</h4><p>Seat or back is too wide</p></div><p>It could lead to shoulder problems arms are not in good position to paopel (too far out).</p><p>Need to contact your therapist or supplier for an assessment about seat dimension.</p><p>May require a wheelchair evaluation for a new wheelchair or modification. (May refer to <a href ng-click="navigateTo(\'null\')">Getting a wheelchair</a> section)</p></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob06.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob06\')"></div><div class=problem><h4>Problem:</h4><p>Seat or back is too light</p></div><p>A tight seat could lead to pressure wounds or abresions.</p><p>Need to contact your therapist or supplier for an assessment about seat dimension.</p><p>May require a wheelchair evaluation for a new wheelchair or modification. (May refer to <a href ng-click="navigateTo(\'null\')">Getting a wheelchair</a> section)</p></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob07.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob07\')"></div><div class=problem><h4>Problem:</h4><p>Have shoulder pain</p></div><p>Contact your physician to check whether you have injuries or wounds need immediate care.</p><p>Contact your therapist or supplier for assessment about wheelchair set-up.</p><h4>Potential solutions by adjusting wheelchair:</h4><ul class=bullet-point><li>Move <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature01\'})">wheel position</a> forward.</li><li>Lower the back canes if they are rubbing against your shoulders.</li><li>Improve your <a href ng-click="navigateTo(\'null\')">wheelchair propulsion technique</a>.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob08.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob08\')"></div><div class=problem><h4>Problem:</h4><p>Feel pressure or pain over buttocks</p></div><ion-slide-box style="padding-bottom: 50px;"><ion-slide><p>If you find red spots or changes in skin color that does not go away in 20 min after pressure was taken off from the area:</p><ul class=bullet-point><li><a href ng-click="navigateTo(\'null\')">See your physician</a> to check whether you need immediate care.</li><li><a href ng-click="navigateTo(\'null\')">See your therapist or supplier</a> for pressure mapping assessment of seat cushion.</li></ul></ion-slide><ion-slide><ul class=bullet-point><li>May need to change the<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'cushiontype\'})">type of cushion</a>.</li><li>May need training in pressure relief.</li><li>Check other areas you sit on at home and work to make sure they have appropriate padding.</li></ul></ion-slide></ion-slide-box></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob09.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob09\')"></div><div class=problem><h4>Problem:</h4><p>Wheelchair is too heavy</p></div><p>You may feel the chair is too heavy if too hard to propel or to be tansfered in an out of a car.</p><ul class=bullet-point><li>Need to contact your therapist or supplier for a wheelchair evaluation.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob10.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob10\')"></div><div class=problem><h4>Problem:</h4><p>Slide forward in seat</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Increase <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature03\'})">seat angle</a>.</li><li>Check <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature04\'})">seat depth</a>.</li><li>Check <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature10\'})">footrest height</a>.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob11.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob11\')"></div><div class=problem><h4>Problem:</h4><p>Body leans to one side</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Increase <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature03\'})">seat angle</a>.</li><li>Add <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature11\'})">positioning accessories</a> to support torso.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob12.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob12\')"></div><div class=problem><h4>Problem:</h4><p>Do not feel stable</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Increase <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature03\'})">seat angle</a>.</li><li>Check your <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature04\'})">seat depth</a>(<a href ng-click="navigateTo(\'null\')">contact therapist or supplier</a> for assessment to adjust seat width).</li><li>Increase <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature06\'})">backrest height</a>.</li><li>Adjust<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature07\'})">backrest angle</a>.</li><li>Adjust <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature10\'})">footrest height</a>.</li><li>Use rigid backrest (<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature08\'})">back support</a>).</li><li>Add <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature12\'})">positioning accessories</a>.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob13.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob13\')"></div><div class=problem><h4>Problem:</h4><p>Difficult to make turns</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Move wheels forward (<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature01\'})">wheel postiton</a>).</li><li>Minimize <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature02\'})">wheel camber</a>.</li><li>Sharpen <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature11\'})">leg to seat surface angle</a>(<a href ng-click="navigateTo(\'null\')">contact therapist or supplier</a> for assessment to adjust seat width).</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob14.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob14\')"></div><div class=problem><h4>Problem:</h4><p>Feel fall out of the footrests</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Adjust <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature10\'})">footrest height</a>.</li><li>Check <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature11\'})">leg to seat surface angle</a>(<a href ng-click="navigateTo(\'null\')">contact therapist or supplier</a> for assessment to adjust seat width).</li><li>Add <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature12\'})">positioning accessories</a> to control foot position.</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot-prob15.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><div class="btn-corner icon-check4summary" ng-click="openPopup(\'prob15\')"></div><div class=problem><h4>Problem:</h4><p>Knees tend to flare apart</p></div><h4>Potential Solutions:</h4><ul class=bullet-point><li>Check your<a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature04\'})">seat depth</a>(<a href ng-click="navigateTo(\'null\')">contact therapist or supplier</a> for assessment to adjust seat width).</li><li>Adjust <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature10\'})">footrest height</a>.</li><li>Check <a href ng-click="navigateTo(\'^.^.features.feature\', {id: \'feature11\'})">leg to seat surface angle</a>(<a href ng-click="navigateTo(\'null\')">contact therapist or supplier</a> for assessment to adjust seat width).</li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup-troubleshoot.html','<ion-view title=Troubleshooting><ion-content class="usewchair content" padding=true><ul class=button-list><li ng-repeat="item in problemList" ng-click="navigateTo(\'.problem\', { id: item.key })">{{item.value.title}}</li></ul><div class=space-follower></div></ion-content><div class="bar caution-bar" ng-click=caution()><img class="icon left" ng-src=images/caution.svg> Cautions <img class="icon right" ng-src=images/caution.svg></div></ion-view>');
$templateCache.put('usewheelchair/main-setup-why.html','<ion-view title="Fit and Setup: Why?"><ion-content class="usewchair content" padding=true><p>Wheelchair set-up affects your <strong>propulsion efficiency, maneuverability, comfort, and pressure distribution</strong>. Appropriate set-up will help you:<ul class=bullet-point><li>reach most of the handrim and propel the wheelchair smoothly.</li><li>maneuver in confined spaces (e.g., elevator and bathroom).</li><li>sit comfortably and stably in a wheelchair.</li><li>minimize pressure on your body to reduce risks for pressure sores.</li></ul></p></ion-content></ion-view>');
$templateCache.put('usewheelchair/main-setup.html','<ion-view title="Fit and Set-up"><ion-content class="usewchair joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.why\', {reload: true})"><div class=title><strong>Why?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.how\', {reload: true})"><div class=title><strong>How?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click=openSetupQuestionnaire()><div class=title><strong>Self-assessment</strong></div></div><div class="item item-icon-right" ng-click=openSetupQSummary($event)><div class=title><strong>My Wheelchair Fit Summary</strong></div><img class="icon aligned right" ng-src=images/survey-done.png style="height: auto; width: 40px; margin-right: 0px"></div></div></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main-amiprone.html','<ion-view title="Lower Limb Swelling"><ion-content class="health-issue content" padding=true><h2>Am I prone to lower limb swelling?</h2><p>Lower limb swelling is a very common and recurrent condition for wheelchair users. You may have more significant lower limb swelling if you have the following conditions:</p><ul class=bullet-point><li>Overweight.</li><li>History of fracture in lower limbs.</li><li>Have heart, kidney, liver, or peripheral vescular diseases.</li><li>Rarely changing posture.</li><li>Consume too much salt.</li><li>Stay in warm weather.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main-consequence.html','<ion-view title="Lower Limb Swelling"><ion-content class="health-issue content" padding=true><h2>What are the consequences of having lower limb swelling?</h2><p>Mild lower limb swelling will not affect your health. However, if your feet or legs swell significantly, the skin over the swelling areas will be thin and get injured easily. Lower limb swelling may also present challenges to foot hygiene and wearing shoes.</p></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main-cost.html','<ion-view title="Lower Limb Swelling"><ion-content class="health-issue content" padding=true><h2>How to treat lower limb swelling?</h2><ul class=bullet-point><li>You can manage lower limb swelling at home by elevating your legs higher than your heart while lying in the bed.</li><li>If you are using a power wheelchair with seating functions such as seat tilt and elevating legrests, you can use these functions to elevate your feet above the level of your heart.</li><li>You should see your doctor for further assessment under the following condition, i.e., if swelling does not go away with leg elevation; the severity of the swelling increases significantly; the swollen area becomes warm/red and having pain; or the swelling affects your skin health.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main-earlysign.html','<ion-view title="Lower Limb Swelling"><ion-content class="health-issue content" padding=true><h2>What are the signs of lower limb swelling?</h2><ul class=bullet-point><li>Spaces between your toes decrease or disappear.</li><li>Bony areas diminish.</li><li>Skin looks puff or thin and shining.</li><li>Difficult to put on shoes that should fit your feet.</li><li>Feel tight when moving your toes and ankles.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main-prevent.html','<ion-view title="Lower Limb Swelling"><ion-content class="health-issue content" padding=true><h2>What can I do to prevent lower limb swelling?</h2><ul class=bullet-point><li>Eat healthy and restrict your salt intake.</li><li>Maintain appropriate weight.</li><li>Elevate your feet above the heart level daily.</li><li>If your wheelchair has power tilt, recline, and elevating legrest functions, use these functions to elevate your feet above the heart level as frequently as needed. Check <a ng-click="navigateTo(\'main.usewheelchair.skills.skill.page\', {name: \'da_weight\'})">this video</a> for appropriate use of power seat functions.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main-whatis.html','<ion-view title="Lower Limb Swelling"><ion-content class="health-issue content" padding=true><h2>What is lower limb swelling?</h2><div class="frame borderless"><img src=images/healthissues/lower-limb/lower_limb.jpg class=jpg></div><p>It is also called edema or dependent edema. Swelling is accumulated body fluid, and can occur in any body parts positioned lower than the heart. As your feet and legs are not moving, body fluid is pulled down by the gravity and collected in these lower areas.</p></ion-content></ion-view>');
$templateCache.put('healthissues/lower-limb-swelling/main.html','<ion-view title="Lower Limb Swelling"><ion-content class="usewchair content"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'whatis\'});"><strong>What is lower limb swelling?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'earlysign\'});"><strong>What are the signs of lower limb swelling?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'consequence\'});"><strong>What are the consequences of having lower limb swelling?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'cost\'});"><strong>How to treat lower limb swelling?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'amiprone\'});"><strong>Am I prone to lower limb swelling?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'prevent\'});"><strong>What can I do to prevent lower limb swelling?</strong><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('healthissues/neck-back-pain/main-consequence.html','<ion-view title="Neck Pain & Back Pain"><ion-content class="health-issue content" padding=true><h2>What are the consequences of having neck pain &amp; back pain?</h2><ul class=bullet-point><li>Interfere with your daily activities and even sleep.</li><li>May decrease the time that you can use your wheelchair independently.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/neck-back-pain/main-cost.html','<ion-view title="Neck Pain & Back Pain"><ion-content class="health-issue content" padding=true><h2>How to treat or manage neck pain &amp; back pain?</h2><ul class=bullet-point><li>Your physician may prescribe medication or physical therapy.</li><li>You can consult your supplier or therapist for an assessment if you are concerned about your posture and the vibration from using your wheelchair.</li><li>If you are using a power wheelchair with seating functions, you could tilt your seat backward as frequently as you need to have a break from maintaining an upright position and release tension in your neck and back.</li><li>Physicians may recommend surgeries in some rare and severe cases when the pain is caused by problems in the spine structure.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/neck-back-pain/main-whatis.html','<ion-view title="Neck Pain & Back Pain"><ion-content class="health-issue content" padding=true><h2>Why am I having neck pain &amp; back pain?</h2><div class="frame borderless"><img src=images/healthissues/neck-back/illustration01.jpg class=jpg></div><ul class=bullet-point><li>Neck pain &amp; back pain are very common among wheelchair users.</li><li>Causes include poor posture, exposure to vibration from wheelchair driving, changes in the spine structure after surgery, and degeneration of joints in your spine.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/neck-back-pain/main.html','<ion-view title="Neck Pain & Back Pain"><ion-content class="usewchair content"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'whatis\'});"><strong>Why am I having neck pain &amp; back pain?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'consequence\'});"><strong>What are the consequences of having neck pain &amp; back pain?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'cost\'});"><strong>How to treat or manage neck pain &amp; back pain?</strong><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-amiprone.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>Am I prone to pressure ulcer?</h2><p>Wheelchair users with most of the time spending in sitting positions are typically prone to pressure ulcers. If you have the following charateristics, you should be more cautious.</p><ul class=bullet-point><li>Elderly.</li><li>Smoker.</li><li>Extremely thin.</li><li>Impaired or loss of sensation.</li><li>Having scoliosis or other alignment problems causing uneven weight bearing.</li><li>Having health problems (e.g., heart disease, diabetes, kidney disease, lung disease, frequent urinary tract infection).</li><li>Being immobilized due to disability or health condition.</li><li>Lack of activity.</li><li>Inappropriate wheelchair configuration.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-commonsite.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>Where are the common sites of pressure ulcers?</h2><p>Common sites of pressure ulcers are body areas bearing weight in a sitting position. Inappropriate wheelchair set-up could further increase the pressure on the body and the risks for pressure ulcers.</p><div class=row style="background-color: #aaa"><div class="col col-33"><strong>Sites</strong></div><div class="col col-67"><strong>Wheelchair set-up</strong></div></div><div class=row style="background-color: #444"><div class="col col-33">Shoulder blades</div><div class="col col-67">Back height</div></div><div class=row><div class="col col-33">Tailbone</div><div class="col col-67">Back angle<br>Seat angle<br>Cushion selection</div></div><div class=row style="background-color: #444"><div class="col col-33">Sit bones</div><div class="col col-67">Cushion selection</div></div><div class=row><div class="col col-33">Hips</div><div class="col col-67">Seat width</div></div><div class=row style="background-color: #444"><div class="col col-33">Heels</div><div class="col col-67">Footrest height and angle</div></div></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-consequence.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>What are the consequences of having pressure ulcers?</h2><ul class=bullet-point><li>Can be life threatening or need amputation due to infection.</li><li>Keep you out of work, school, and social activities for months.</li><li>Increase risks of having respiratory problems and uninary tract infection.</li><li>Induce <a ng-click="getStaticModalPage(\'healthissues/pulcer/modal-autonomic-dysreflexia.html\')">autonomic dysreflexia</a>.</li><li>Incur costly medical expense for treatment.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-cost.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>How costly to treat pressure ulcers?</h2><ul class=bullet-point><li>Stage 1 and Stage 2: around $2,000 to $11,000.</li><li>Stage 3 and Stage 4: around $6,000 to $22,000.</li><li>Increased costs are due to prolonged hospitalization to treat the wound and associated infections and health conditions.</li><li>More information can be found in the report <a ng-click="openInBrowser(\'http://www.leafhealthcare.com/pdfs/LH_WP_FinancialOverview_1563AB_101316.pdf\', \'_blank\')">The Financial Impact of Pressure Ulcers</a>.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-earlysign.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>What are the early signs of pressure ulcers?</h2><ul class=bullet-point><li>Lighter skin tone: redness spot on skin.</li><li>Darker skin tone: spot on skin with different color (purple, bluish, or shiny) compared to the surrounding area.</li><li>The spot may be painful, firmer or softer, and warmer or cooler compared to surrounding skin.</li><li>The early signs indicate a <a ng-click="getStaticModalPage(\'healthissues/pulcer/modal-pressure-ulcer-stages.html\')">stage 1</a> pressure ulcer.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-prevent.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>What can I do to prevent pressure ulcers?</h2><ul class=bullet-point><li><a ng-click="navigateTo(\'main.usewheelchair.skills.skill.page\', {name: \'da_weight\'})">Change position regularly</a> to relieve pressure.</li><li>Use <a ng-click="getStaticModalPage(\'healthissues/pulcer/modal-technology-pressure-management.html\')">technology</a> to provide feedback and reminders for pressure relief.</li><li>Receive <a ng-click="navigateTo(\'main.usewheelchair.fit.features.page\', { name: \'cushion\'})">pressure mapping assessment</a> and use <a ng-click="navigateTo(\'main.usewheelchair.components.component.page\', { name: \'cushion_foam\'})">appropriate cushions</a> on wheelchair and other supporting surfaces.</li><li>Check skin every day.</li><li>Keep skin dry and clean.</li><li>Maintain appropriate weight.</li><li>Eat a well-balanced diet and drink plenty of fluids.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main-whatis.html','<ion-view title="Pressure Ulcers"><ion-content class="health-issue content" padding=true><h2>What is a pressure ulcer?</h2><ul class=bullet-point><li>A pressure ulcer is skin or soft tissue injury resulted from long durations of pressure due to static position or immobility.</li><li>The incidence of pressure ulcers in people with spinal cord injury is 25-66%.</li><li>Pressure ulcers are classified from <a ng-click="getStaticModalPage(\'healthissues/pulcer/modal-pressure-ulcer-stages.html\')">Stage 1 to Stage 4</a>, according to their severity.</li></ul></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/main.html','<ion-view title="Pressure Ulcers"><ion-content class="usewchair content"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'whatis\'});"><strong>What is a pressure ulcer?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'consequence\'});"><strong>What are the consequences of having pressure ulcers?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'cost\'});"><strong>How costly to treat pressure ulcers?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'commonsite\'});"><strong>Where are the common sites of pressure ulcers?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'amiprone\'});"><strong>Am I prone to pressure ulcer?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'earlysign\'});"><strong>What are the early signs of pressure ulcers?</strong><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{term: \'prevent\'});"><strong>What can I do to prevent pressure ulcers?</strong><div class="valign middle triangle-right"></div></div></div></ion-content></ion-view>');
$templateCache.put('healthissues/pulcer/modal-autonomic-dysreflexia.html','<ion-modal-view class=health-issue><ion-header-bar class=bar-positive><h1 class=title>Autonamoic Dysreflexia</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding padding=true><h2>Autonomic Dysreflexia (AD)</h2><p>Autonomic Dysreflexia (AD), sometimes referred to as Autonomic Hyperreflexia, is a potentially life-threatening medical condition that many people with spinal cord injury (SCI) experience when there is a pain or discomfort below their level of injury, even if the pain or discomfort cannot be felt.</p><p><b>Am I at risk for AD?</b><ul class=bullet-point><li>People with injury levels at or above T6 are at risk for AD.<div>Read Understanding Spinal Cord Injury Part 1 to learn about levels of injury <a ng-click="openInBrowser(\'https://msktc.org/lib/docs/Factsheets/SCI_Understand_Spin_Crd_Inj_Prt1.pdf\', \'_blank\')">HERE</a></div></li><li>People with injury levels below T6 may also be at risk for AD in some rare situations.</li></ul></p><p><b>Why do people with SCI get AD?</b><br>AD happens because there is a change in the body\u2019s autonomic reflexes after injury.</p><p><b>Autonomic Reflexes before SCI</b><br>The autonomic nervous system controls body functions like blood pressure, heart rate, body temperature, sweating, digestion, sexual function, and dilation of your eyes\u2019 pupils through signals sent back and forth from the brain and body through the spinal cord nerves. These functions are largely automatic or involuntary, meaning they are controlled without you thinking about it.</p></ion-content></ion-modal-view>');
$templateCache.put('healthissues/pulcer/modal-pressure-ulcer-stages.html','<ion-modal-view class="health-issue fullpage slidebox pager-no-offset"><ion-header-bar class=bar-positive><h1 class=title>Pressure Ulcer Stages</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-slide-box><ion-slide><ion-content class=padding><h2>Stage 1 Pressure Ulcer</h2><p>The spot may be painful, or have different color, firmness, and temperature compared to surrounding skin, as described in the <a ng-click="navigateTo(\'^.detail\',{term: \'earlysign\'});page.close();">early signs of pressure ulcers</a>.</p><div class="frame borderless"><img src=images/healthissues/stage01.jpg class=jpg></div></ion-content></ion-slide><ion-slide><ion-content class=padding><h2>Stage 2 Pressure Ulcer</h2><p>An intact or open/ruptured blister.</p><div class="frame borderless"><img src=images/healthissues/stage02.jpg class=jpg></div></ion-content></ion-slide><ion-slide><ion-content class=padding><h2>Stage 3 Pressure Ulcer</h2><p>An open wound showing fatty tissue below skin. May present with signs of infection (redness around the edge, foul odor, or greenish drainage) and possible necrosis (black, dead tissue).</p><div class="frame borderless"><img src=images/healthissues/stage03.jpg class=jpg></div></ion-content></ion-slide><ion-slide><ion-content class=padding><h2>Stage 4 Pressure Ulcer</h2><p>An open wound showing the muscle or bone with lots of dead tissue and drainage, and high possibility of infection.</p><div class="frame borderless"><img src=images/healthissues/stage04.jpg class=jpg></div></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('healthissues/pulcer/modal-technology-pressure-management.html','<ion-modal-view class=health-issue><ion-header-bar class=bar-positive><h1 class=title>Technology</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content class=padding padding=true><h2>Technology assisting with pressure management</h2><ul class=bullet-point><li><a ng-click="openInBrowser(\'http://www.sensimatsystems.com/\', \'_blank\')">SENSIMAT</a> \u2013 everyday seat pressure monitoring with feedback via a mobile app.</li><li><a ng-click="openInBrowser(\'https://vsc-us.permobil.com/#/home/en_US/\', \'_blank\')">Virtual Wheelhair Coach</a> \u2013 track power seat function use and instruct appropriate/safe use.</li><li>Timer apps (e.g., Stand Up!, Healthy Timer) \u2013 provide reminders for weight shifting activities.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/armrests.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of armrests</h3><ul class=bullet-point><li>Armrests are to provide good resting posture for the arms, provide a form of support and are convenient handles when the rider leans to one side or the other, and cane be helpful when attempting to reach higher places and also assist some people with transfers</li><li>Loose armrests can make the user fall when using them for support during transfers</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/backrest.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of backrest</h3><ul class=bullet-point><li>Back supports provide comfort and postural support while sitting</li><li>Loose upholstery may provide less postural support and can lead to skeletal deformities</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/bearing_condition.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of bearing condition</h3><ul class=bullet-point><li>The wheel bearings allow for free rotation of the wheel around the wheel axis</li><li>Therefore, damaged bearings can increase rolling resistance which will make you spend more energy and stress your shoulders more while propelling</li><li>Bearings will wear out on a wheelchair during normal use</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/casters.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of casters</h3><ul class=bullet-point><li>They affect the performance of the wheelchair.</li><li>Worn out caster wheels can make the wheelchair harder to propel.</li><li>Caster float decreases the stability and performance of the wheelchair.</li><li>Caster bearings allow for free rotation of the wheel around the wheel axis. In addition, casters have another bearing that allows for shaft rotation.</li><li>Wore out bearing can make the wheelchair difficult to maneuver.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/cushion_cover_insert.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of cushion function and integrity</h3><ul class=bullet-point><li>The interaction between the cushion and the body determines the user\u2019s comfort, function, and clinical safety.</li><li>Cushions do not last as long as the frame. Deterioration in the cushion can increase the risk of developing a pressure ulcer.</li><li>Dirt on the cushion can cause skin breakdown and can cause odor on both the wheelchair and cushion.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/folding_mechanism.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of folding mechanism</h3><ul class=bullet-point><li>Cross-brace frames allow the wheelchair to collapse towards the middle for storage.</li><li>Problems with the cross-brace mechanism may cause the wheelchair to collapse and injury to you.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/footrests.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of footrests</h3><ul class=bullet-point><li>Often the footrests are the first part of the wheelchair to come in contact with an obstacle.</li><li>They are used to open doors, act as bumpers, and also scraped along the ground when the wheelchair is loaded into a motor vehicle.</li><li>A loose or broken footrest may decrease ground clearance of the wheelchair, and may cause your feet to slide and drag on the ground.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/funding_process.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Funding Process</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>You may find funding from <a ng-click="openGlossary(\'traditional_fs\')">traditional funding sources</a> and/or <a ng-click="openGlossary(\'alternative_fs\')">alternative funding sources.</a></li><li>The assistive technology professional and/or seating and mobility specialist and the therapist will need your assistance to prepare the paperwork for your funding source.</li><li>The paperwork for a funding application typically includes a <a ng-click="openGlossary(\'jdw\')">justification documentation for wheelchair</a> from your therapist(s) based on the wheelchair evaluation and the wheelchair specifications. These specifications are based on your wheelchair selection session. Other materials may be needed based on your funding source.</li><li>Either the assistive technology professional and/or seating and mobility specialist or yourself will be responsible for submitting the paperwork. It usually takes about 3 months after your wheelchair evaluation/selection session for you or the representative of the medical equipment company to receive the decision from your funding source.</li><li>Note the difference between standard manual and complex manual wheelchairs<br><span style="text-decoration: underline;">Complex Manual Wheelchairs</span><ul><li>Intended for Long-term Use</li><li>High Adjustability</li><li>Provides Positioning</li><li>Accommodates orthopedic issues</li><li>Provides pressure management</li></ul><span style="text-decoration: underline;">Standard Manual Wheelchairs</span><ul><li>Intended for Short-term Use</li><li>Limited to No Adjustability</li><li>No Positioning</li><li>No orthopedic accommodations</li><li>Provides no pressure management</li></ul><br>Click <a ng-click="openInBrowser(\'https://ncart.us/uploads/userfiles/files/Complex%20Wheelchairs%20vs%20Std%20Wheelchairs%204-18-16.pdf\', \'_blank\')">HERE</a> to view the original pamphlet.<p>Different insurers may have different requirements. Complex manual wheelchairs require slightly more documentation, check with your <a href ng-click="openGlossary(\'atp\')">assistive technology professional</a> and/or <a href ng-click="openGlossary(\'sms\')">seating and mobility specialists</a> (<a href ng-click="openGlossary(\'rrts\')">RRTS</a>/ <a href ng-click="openGlossary(\'crts\')">CRTS</a>) for more information.</p><p>What is prior authorization? Under some health insurance plans, certain durable medical equipment may need approval from your health insurance carrier, before they\u2019re covered. Check with your doctor and your <a href ng-click="openGlossary(\'atp\')">assistive technology professional</a> and/or <a href ng-click="openGlossary(\'sms\')">seating and mobility specialists</a> for more information (<a href ng-click="openGlossary(\'rrts\')">RRTS</a>/<a href ng-click="openGlossary(\'crts\')">CRTS</a>).You can also ask your wheelchair supplier if they do repairs.</p></li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('modals/info/handrims.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of handrims</h3><ul class=bullet-point><li>Handrims are metal or plastic rings attached to the rear wheels used to propel a manual wheelchair</li><li>A loose, worn, dented or bent handrim will make it more difficult to grasp, or even fall off</li><li>Cracks on the handrim can cut or harm you</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/nuts_bolts_tips.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Tips about tightening nuts and bolts</h3><ul class=bullet-point><li>Do not over tighten! Some bolts are not to be tightened all the way, such as lock nuts.</li><li>Over tightening a loose nut or bolt could damage the part and/or bolt.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/physical_referral.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Physician Referral</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Your physician will:<ul><li>Assess your eligibility for a wheelchair</li><li>Write a prescription for a wheelchair evaluation if you are eligible</li></ul></li><li>After obtaining a prescription, you will be responsible for scheduling an appointment for a wheelchair evaluation.</li><li>If your physician is unable to make the referral, you may find a certified <a href ng-click="openGlossary(\'atp\')">Assistive Technology Professional (ATP)</a> or a certified <a href ng-click="openGlossary(\'sms\')">Seating and Mobility Specialist (SMS)</a> in your area <a ng-click="openInBrowser(\'https://www.resna.org/Certified-Professionals-Directory\', \'_blank\')">here</a>.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('modals/info/receive_wheelchair.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Receive Your Wheelchair</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Before signing for your new wheelchair, it is important to schedule a final fit assessment where you will work with your therapist and supplier on checking the fit, fine tuning it, and learning the use and care of the wheelchair.</li><li>Retain copies of all relevant documents including:<ul><li>A copy of the signed receipts</li><li>Warranty information</li><li>Contacts for questions and repairs</li></ul></li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('modals/info/select_wheelchair.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Wheelchair Selection</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Ideally, you will work with assistive technology professional and/or seating and mobility specialist and the therapist who performs the wheelchair evaluation in this step to achieve the best outcomes.</li><li>The supplier(s) will:<ul><li>Review the wheelchair evaluation report from your therapist.</li><li>Take measurements from you to determine the fit of your wheelchair and seating components.</li><li>Discuss product options.</li><li>Help you try out different products and configurations.</li></ul></li><li>You can and should request a home evaluation, which could help verify if the wheelchair fits in and around your home, and if you can use it independently and safely.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('modals/info/spoke_tension.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-slide-box><ion-slide><ion-content class=padding><h3 class=title>Importance of spoke tension</h3><ul class=bullet-point><li>Loose spokes can make the wheelchair harder to propel and cause the wheel to collapse.</li><li>One loose spoke will cause others to carry more tension, ultimately making the wheel wobble from side to side.</li><li>If there is one loose, others will become loose very quickly.</li></ul></ion-content></ion-slide><ion-slide><ion-content class=padding><ul class=bullet-point><li>It is recommended that you do not adjust spoke tension on your own because spokes must be tensioned to a specific torque range and a special stand is used to do this. Otherwise, spokes or their nipples could break and the wheel could go out of true.</li><li>A bicycle store/shop is useful to get spokes tighten if you have pneumatic tires.</li><li>If you have solid tires, you need to contact the wheelchair maintenance expert since a new wheel might be the best solution.</li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('modals/info/tire_condition.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of tire condition</h3><p>Worn out tires can make the wheelchair harder to propel, and may lose traction easily.</p></ion-content></ion-modal-view>');
$templateCache.put('modals/info/tire_pressure.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of Tire Pressure</h3><p>If the tire lacks sufficient pressure,<ul class=bullet-point><li>You will need more energy to push the wheelchair around;</li><li>Your wheelchair will be difficult to maneuver;</li><li>You may stress your shoulders more;</li><li>The tire and wheel will also wear much more quickly.</li></ul></p></ion-content></ion-modal-view>');
$templateCache.put('modals/info/wheel_alignment.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Importance of wheel alignment</h3><ul class=bullet-point><li>If the wheelchair does not track well, it will drift from its course between pushes and forces you to push more often to travel straight, wastes energy and reduces your control over the wheelchair.</li><li>You should learn how the wheelchair \u201Cfeels\u201D when it is new so you can identify misalignment.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/wheel_locks.html','<ion-modal-view><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content padding=true scroll=false class=info-page><h3 class=title>Impotance of wheel locks</h3><ul class=bullet-point><li>Wheel locks act as parking brakes and assist when transferring to other surfaces, or when you wish to remain in a particular spot.</li><li>They allow you to be more stable when desired.</li><li>Wheel locks that interfere with normal wheel rolling cause wear to the tire and brake.</li></ul></ion-content></ion-modal-view>');
$templateCache.put('modals/info/wheelchair_evaluation.html','<ion-modal-view class=info-page><ion-header-bar class=bar-positive><h1 class=title>Information</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-header-bar class="bar-subheader bar-light"><h3 class=title>Wheelchair Evaluation</h3></ion-header-bar><ion-slide-box show-pager=false><ion-slide><ion-content class=padding><ul><li>Sometimes, a wheelchair evaluation is scheduled together with a wheelchair selection session where you get to try different products.</li><li>Bring the following items with you:<ul><li>Your physician\'s referral to receive wheelchair assessment.</li><li>Your current mobility device or photos of your current mobility device (if applicable).</li><li><a href ng-click=openWheelchairChecklistOrSummary()>My Wheelchair Checklist</a>.</li></ul></li><li>A wheelchair evaluation is typically performed by a therapist who specializes in wheelchair and seating. The therapist will:<ul><li>Review medical records.</li><li>Collect health information.</li><li>Learn about all areas of your life that may affect your mobility.</li><li>Conduct a <a href ng-click="getStaticModalPage(\'servicedelivery/modal_func_assessment.html\')">functional assessment</a> .</li><li>Refer you to assistive technology professional and/or seating and mobility specialist.</li><li>Work with the supplier(s) to determine the best wheelchair and features for your needs.</li></ul></li></ul></ion-content></ion-slide></ion-slide-box></ion-modal-view>');
$templateCache.put('servicedelivery/qa/main-qa-detail.html','<ion-view title=Q&A><ion-content class="service-delivery qa-detail content" padding=true><h3 style="font-size: 18px; font-weight: 800">{{qa.q}}</h3><div compile=qa.a></div></ion-content></ion-view>');
$templateCache.put('servicedelivery/qa/main-qa.html','<ion-view title=Q&A><ion-content class="service-delivery content"><div class=list><div class="item item-input-inset search-bar"><label class=item-input-wrapper><i class="icon ion-ios-search placeholder-icon"></i> <input type=text placeholder=Search ng-model=search.keyword></label> <i class="clear ion-ios-close-outline" ng-click="search.keyword = \'\';" ng-show=search.keyword.length></i></div><div ng-repeat="item in qaList | inArray:include:\'title\'"><div class="item item-icon-right" ng-click="navigateTo(\'.detail\',{qa: item});"><strong>{{item.title}}</strong><div class="valign middle triangle-right"></div></div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/assessment-summary.html','<ion-view title=Summary><ion-content class="usewchair content assessment-summary" padding=true><div id=manualElementSummary><h2 style="text-align: center">My Manual Wheelchair Element Summary</h2><h3><strong>Recommendations</strong></h3><p>If you consider to improve certain components on your wheelchair, you should consult your therapist or supplier for more detailed information about available products. Here are some recommendations based on your answers in the self-assessment:</p><ul class=bullet-point><li ng-if="vm.componentQAnswer[1] == 3">Next time when you replace your wheelchair, you may want to consider using an <strong>ultralight weight</strong> wheelchair. It will be much easier for you to push and help protect your shoulders, arms, and wrists from repetitive injuries.</li><li ng-if="vm.componentQAnswer[2] == 1">If your backrest is slinging (i.e., sagging), you may want to consider replacing it with a <strong>tension-adjustable backrest</strong> or a <strong>solid backrest in order to provide better</strong> support for your posture.</li><li ng-if="vm.componentQAnswer[7] == 1 || vm.componentQAnswer[7] == 2">You may want to consider using <strong>ergonomic handrims</strong>. They will help you to push your wheelchair more efficiently and prevent repetitive injuries in your wrists and hands.</li><li ng-if="vm.componentQAnswer[5] != null">If you are bothered by recurrent pressure sores or pain over your buttocks, you should contact your therapist to receive a wheelchair evaluation that includes a <strong>pressure mapping assessment</strong> to determine best course of action to relieve pressure (e.g., adjustments in your wheelchair to improve your position, ordering a new pressure relieving cushion, education on pressure relief manuevers).</li><li ng-if="vm.componentQAnswer[8] != null && vm.componentQAnswer[8] != 8">If you feel that your <strong>positioning accessories</strong> interfere with or do not support you to push your wheelchair, you should contact your therapist for a wheelchair evaluation. They can help you figure out the problems with the accessoriesand make adjustments or work with a wheelchair supplier to order new or replacement parts.</li><li ng-if="vm.componentQAnswer[8] != null && vm.componentQAnswer[8] == 8">If you feel that your trunk or legs are not stable in your wheelchair, <strong>positioning accessories</strong> may be helpful for you. You should contact your therapist to receive an assessment to figure out the problem and select appropriate positioning accessories.</li><li ng-if="vm.componentQAnswer[8] == 1">If you are experiencing pain or weakness in your upper limbs, a <strong>power add-on device</strong> could be helpful for you.</li></ul><p>If you want to purchase new component(s) and pursue reimbursement from your private or public health insurance or public funding resources, you would need to obtain a script from your physician for a wheelchair evaluation from a physical or occupational therapist who, ideally, is an Assistive Technology Certified specialist (provide link to RESNA website where they can look up atp therapist in their area here) He or she can work with your ATP certified wheelchair supplier and you PM&R physician or primary care physician to provide the insurance company with a letter of medical necessity detailing your medical need for the equipment. The wheelchair suppliers can provide you with more detailed information about the product (s) and arrange trial sessions so that you feel confident that you are selecting a device that works in your home and community and that you are comfortable with.</p><br><h3><strong>Summary of Assessment</strong></h3><div class=list><div class="item item-divider" ng-repeat-start="question in vm.questions"><strong>{{question.summary}}</strong></div><div class=item ng-repeat-end>{{vm.getAnswer(question)}}</div></div></div><br><div class=list><a class="item item-icon-left" ng-click=vm.forwardViaEmail()><i class="icon ion-email"></i> Forward to Email</a></div><br></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/assessment.html','<ion-view title=Assessment><ion-content class="usewchair content questionnaire" padding=true><ion-slide-box class=question-slider dynamic-height show-pager=false delegate-handle=outerSlideBox ng-init="list = {}"><ion-slide class ng-repeat="page in vm.pages"><h4 class=qq-question ng-repeat-start="question in page" ng-init="question.list = question.deserializeMultiValueFn(question.checks, vm.componentQAnswer[question.id])" ng-click="navigateTo(question.state, question.params)"><span class=qnumber>{{question.id}}.</span> <span class=title style="font-size: inherit" ng-bind-html=question.text></span></h4><div class=qq-answer ng-repeat-end style="margin-bottom: 10px"><ion-radio ng-if="question.options != null" name=Q{{question.id}} ng-model=vm.componentQAnswer[question.id] ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="question.checks != null" ng-repeat="item in question.list" ng-value=item.text ng-model=item.checked ng-change="vm.onChangeCheckbox(question, item)">{{ item.text }}</ion-checkbox></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class="bar-positive bar-pager"><div class=buttons ng-click=vm.prevPage() ng-hide="vm.currentIndex==0"><button class="button button-icon my-icon-mwg_d_arrow_01"></button></div><h1 class=title style="text-align: center">{{vm.currentIndex+1}} of {{vm.questionsTotal}}</h1><div class=buttons><button class="button button-icon my-icon-mwg_d_arrow_02" ng-show="vm.currentIndex+1 != vm.questionsTotal" ng-click=vm.nextPage()></button> <button class=button ng-show="vm.currentIndex+1 == vm.questionsTotal" ng-click=vm.finish()>Finish</button></div></ion-footer-bar></ion-view>');
$templateCache.put('usewheelchair/components/components-backrest_rigid.html','<ion-view title=Backrests class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/backrest_rigid.jpg></div><ion-scroll class=description><ul class=bullet-point><li>Provides more torso support, but allows less torso movement.</li><li>Curve of the backrest plate is not adjustable, but additional foam pads can be inserted or a molded back cushion can be installed to accommodate individual needs.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(2)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-backrest_soft.html','<ion-view title=Backrests class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/backrest_soft.gif></div><ion-scroll class=description><ul class=bullet-point><li>Includes two types: sling and tension-adjustable.</li><li>Sling backrest is a piece of flat upholstery. Its curve cannot be adjusted.</li><li>Tension-adjustable backrests have Velcro straps that can be tightened to adjust the curve. It can accommodate various shapes and curves of the torso.</li><li>Soft backrests allow more torsi movement, but sag after use and provide less torso support.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(2)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-cushion_air.html','<ion-view title=Cushions class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/cushion_air.gif></div><ion-scroll class=description><ul class=bullet-point><li>Includes two types: air foam and air capsule.</li><li>Air foam is a piece of foam wrapped tightly in an airtight and water resistant cover. It is lightweight, has good ability to redistribute pressure, and provides good support.</li><li>Before sitting on an air foam cushion, open the valve to inflate it and then close the valve. When sitting on it, open the valve to release air to allow your hips to immerse into the cushion while the foam conforms to your buttocks. Close the valve when your buttocks settle into the cushion. It keeps the contour for the day, but needs to be inflated each night to maintain the optimal performance of the foam- open the valve and leave it open over night to let air flow back in.</li><li>Air capsule cushion moves air through all of the capsules. It has a great ability to redistribute pressure. Its contour changes as you shift your weight, which could reduce sitting stability. It can have over- or under- inflated situations, and thus requires regular maintenance.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(5)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-cushion_custom.html','<ion-view title=Cushions class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/cushion_custom.png></div><ion-scroll class=description><ul class=bullet-point><li>Custom molded to the individual\u2019s body curves.</li><li>Accommodates and supports fixed alignment deformities, like fixed scoliosis or uneven pelvis.</li><li>Distributes pressure for skin health.</li><li>More difficult for transfer.</li><li>The curves interfere with dynamic posture change.</li><li>Adds additional weight to the wheelchair.</li><li>Limited ability to accommodate growth of the individual.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(5)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-cushion_foam.html','<ion-view title=Cushions class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/cushion_foam.gif></div><ion-scroll class=description><ul class=bullet-point><li>Includes two types: standard foam and contoured foam.</li><li>Standard foam is just a piece of flat foam that is inexpensive, has little ability to provide support and redistribute pressure, and wears out very fast.</li><li>Contoured foam allows users to adjust the contour by removing or gluing in additional pieces of foam. It is relatively inexpensive, has fair ability to redistribute pressure and provides good support, and wears out fast.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(5)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-cushion_gel.html','<ion-view title=Cushions class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/cushion_gel.png></div><ion-scroll class=description><ul class=bullet-point><li>Distributes pressure by the transformation of gel-filled pouches.</li><li>Has a good ability to redistribute pressure.</li><li>Gel pouches are often attached to a foam base to support sitting stability.</li><li>Needs daily maintenance of \u201Ckneading\u201D to redistribute the gel evenly to allow hips to immerse into the cushion and not to sink down to the bottom of the cushion.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(5)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-footrest_fixed.html','<ion-view title=Footrests class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/footrest_fixed.png></div><ion-scroll class=description><ul class=bullet-point><li>Makes a wheelchair lighter and shorter in length.</li><li>Requires less maintenance.</li><li>Cannot accommodate knee contracture in an extended position.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(4)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-footrest_swing_away.html','<ion-view title=Footrests class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/footrest_swing.jpg></div><ion-scroll class=description><ul class=bullet-point><li>Allows users to propel using their feet occasionally.</li><li>Can incorporate elevating legrests that allows users to adjust legrest angles.</li><li>Can accommodate knee contracture in an extended position.</li><li>Can better accommodate certain needs for transfer (e.g., sit-to-stand, standing pivot, attendant assisted, and transfer using a swivel board).</li><li>Adds weight and length to a wheelchair.</li><li>Requires more maintenance than the fixed one.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(4)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-frame_folding.html','<ion-view title=Frames class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/frame_folding.gif></div><ion-scroll class=description><ul class=bullet-point><li>Folds sideways.</li><li>Has more movable joints, and thus may require frequent maintenance to tighten nuts and bolts.</li><li>Folding mechanism adds weight.</li><li>Consists of modular components that can be replaced individually.</li><li>Costs less than rigid frames.</li><li>A folding frame with a folding or detachable backrest, detachable swing away footrests, and quick-release wheelchair axles could make a wheelchair compact for transportation.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(1)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-frame_rigid.html','<ion-view title=Frames class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/frame_rigid.gif></div><ion-scroll class=description><ul class=bullet-point><li>Its backrest folds forward.</li><li>Has less movable joints, and thus many require less maintenance.</li><li>Lighter and shorter in length than folding frames.</li><li>Costs more than folding frames.</li><li>Most rigid frames have more adjustments than folding frames, and can be custom made for individual needs.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(1)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-frame_ultralight_weight.html','<ion-view title=Frames class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/frame_ultralight.png></div><ion-scroll class=description><ul class=bullet-point><li>Wheelchairs less than 30 lbs are classified as ultralight weight. You can easily find wheelchairs under 20 lbs on the market.</li><li>Weight varies based on materials. Weight of a wheelchair is primarily determined by its frame material (steel/ aluminum/ titanium/carbon fiber) and frame design (folding/rigid).</li><li>Light weight makes it easier to push around, help preserve energy, and prevent overuse injuries.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(1)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-handrims_conventional.html','<ion-view title=Handrims class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/handrims_conventional.gif></div><ion-scroll class=description><ul class=bullet-point><li>Most are aluminum anodized handrims or standard vinyl coated handrims.</li><li>Low cost.</li><li>Can be slippery and hard to firmly grasp.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(7)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-handrims_ergonomic.html','<ion-view title=Handrims class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/handrims_ergonomic.png></div><ion-scroll class=description><ul class=bullet-point><li>Various ergonomic handrims available on the market.</li><li>Designed to increase contact surface and friction for easier and more efficient wheelchair propulsion.</li><li>Help prevent repetitive injuries at wrists and hands.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(7)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-handrims_gloves.html','<ion-view title=Handrims class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/handrims_gloves.png></div><ion-scroll class=description><p>Bike gloves can be very helpful to protect hands from:<ul class=bullet-point><li>cuts and abrasions from folding and handling the wheelchair for transpotation or storage.</li><li>temperature related injuries in very cold and hot weather.</li></ul></p></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(7)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-handrims_projection.html','<ion-view title=Handrims class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/handrims_projection.png></div><ion-scroll class=description><ul class=bullet-point><li>Good for individuals who cannot grasp, but can push with arms.</li><li>Adds additional weight.</li><li>Needs practice on push patterns to prevent hands from being caught by the projection.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(7)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=left><button class="button buttons button-icon my-icon-mwg_d_arrow_01 go-back" ng-click=vm.goBack()></button></ion-nav-buttons><ion-nav-buttons side=right><button class="button button-icon icon my-icon-mwg_a_home" goto=main.home ng-hide="$state.includes(\'main.home\')"></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('usewheelchair/components/components-pa_clothing_guard.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/pa_guards.png></div><ion-scroll class=description><ul class=bullet-point><li>Helps protect clothing from being damaged by the wheels.</li><li>May help stabilize the pelvis which improves sitting stability.</li><li>May create pressure points on your hips.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(8)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-pa_lap_strap.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/pa_legs.gif></div><ion-scroll class=description><ul class=bullet-point><li>Some individuals may need additional support to maintain lower limb position.</li><li>Options include lap straps, leg straps, and ankle loops.</li><li>May create pressure points underneath these straps and loops.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(8)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-pa_trunk.html','<ion-view title=Accessories class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/pa_trunk.gif></div><ion-scroll class=description><ul class=bullet-point><li>Some individuals may need additional supports to maintain the trunk in an upright position.</li><li>Options include lateral supports, chest harness, and chest belt.</li><li>May interfere with trunk movements and create pressure points.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(8)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-pao_papaw.html','<ion-view title="Power Add-On" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/pao_papaw.png></div><ion-scroll class=description><ul class=bullet-point><li>PAPAW =<u>P</u>ushrim-<u>a</u>ctivated &nbsp;<u>p</u>ower-<u>a</u>ssisted &nbsp;<u>w</u>heelchair</li><li>It is a pair of special quick-release wheels with a motor in each hub that can provide an extra boost proportionally to the sensed push force from the user.</li><li>Top speed can reach 3.7 mph.</li><li>Benefits include reduced risk of overuse related injury/pain and improved ability on difficult terrains (e.g., carpet and ramp).</li><li>Limitations include the needs to charge batteries, increased weight (e.g., up to 24lb per wheel), and transportability. PAPAW is also sensitive to the strength difference between your two arms, thus it may take time to learn and adapt.</li><li>May be funded by health insurance (billing code: E0986).</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(6)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-pao_rio.html','<ion-view title="Power Add-On" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/pao_rio.png></div><ion-scroll class=description><ul class=bullet-point><li>A scooter-like front with a hub motor that can be attached to a manual wheelchair and provide the power to move the wheelchair.</li><li>Top speed can reach 12 mph.</li><li>Benefits include reduced risk of overuse related injury/pain and improved ability on difficult terrains (e.g., carpet and ramp).</li><li>Limitations include the needs to charge, increased weight (16.1lb), increased turning radius, and transportability.</li><li>It requires strength, control, and dexterity in thumbs, hands, and arms to operate.</li><li>May be funded by health insurance (billing code: E0986).</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(6)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-pao_smart.html','<ion-view title="Power Add-On" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/pao_smart.png></div><ion-scroll class=description><ul class=bullet-point><li>A device attached to the axle between the wheels underneath the wheelchair, which provides the power to move the wheelchair at a set speed (through a wristwatch). Users activate it with a natural push and stop it by tapping the wrist on the pushrim.</li><li>Top speed can reach 4 mph.</li><li>Benefits include reduced risk of overuse related injury/pain and improved ability on difficult terrains (e.g., carpet and ramp).</li><li>Limitations include the needs to charge, and increased weight (12.5 lb).</li><li>It can be easily attached to rigid frame wheelchairs, and requires an adapter for folding frames. It can be easily detached when not in use.</li><li>May be funded by health insurance (billing code: E0986).</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(6)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-wc_pneumatic.html','<ion-view title=Wheels class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/wc_pneumatic.png></div><ion-scroll class=description><ul class=bullet-point><li>Lighter than solid tires.</li><li>Provides better shock absorption, and thus a smoother ride.</li><li>Requires weekly maintenance to check and maintain tire pressure.</li><li>Has risks of being punctured.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(3)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components-wc_solid.html','<ion-view title=Wheels class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true class=content-frame><div class=image-container><img src=images/use/components/wc_solid.png></div><ion-scroll class=description><ul class=bullet-point><li>Heavier than pneumatic tires.</li><li>Provides less shock absorption.</li><li>No need for weekly maintenance, but need monthly check for wear and tear.</li></ul></ion-scroll><div class="list button-style"><div class="item item-icon-left yellow" ng-click=openPopup(3)><i class="icon my-icon-mwg_f_star"></i><div class="title bold">Check It!</div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/components.html','<ion-view title="Wheelchair Components"><ion-content class="usewchair content" padding=true><ul class=accordion><li><input type=radio name=a> <i></i><h3>Frames</h3><div><a class=block ng-click="navigateTo(\'.component\', {name: \'frame_folding\'})">Folding</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'frame_rigid\'})">Rigid</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'frame_ultralight_weight\'})">Ultralight Weight</a></div></li><li><input type=radio name=a> <i></i><h3>Backrests</h3><div><a class=block ng-click="navigateTo(\'.component\', {name: \'backrest_soft\'})">Soft</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'backrest_rigid\'})">Rigid</a></div></li><li><input type=radio name=a> <i></i><h3>Wheels and Casters</h3><div><a class=block ng-click="navigateTo(\'.component\', {name: \'wc_pneumatic\'})">Pneumatic</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'wc_solid\'})">Solid</a></div></li><li><input type=radio name=a> <i></i><h3>Footrests</h3><div><a class=block ng-click="navigateTo(\'.component\', {name: \'footrest_swing_away\'})">Swing-away</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'footrest_fixed\'})">Fixed</a></div></li><li><input type=radio name=a ng-click=openCaution()> <i></i><h3>Cushions</h3><div><a class=block ng-click="navigateTo(\'.component\', {name: \'cushion_contoured_foam\'})">Contoured Foam</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'cushion_air_foam\'})">Air-Foam</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'cushion_air_capsule\'})">Air Capsule</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'cushion_gel\'})">Gel</a></div></li><li><input type=radio name=a ng-click=openCaution()> <i></i><h3>Positioning Accessories</h3><div><a class=block ng-click="navigateTo(\'.component\', {name: \'pa_trunk\'})">Trunk Supports</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'pa_clothing_guard\'})">Clothing Guards</a> <a class=block ng-click="navigateTo(\'.component\', {name: \'pa_lap_strap\'})">Straps (Lap, Leg, and Ankle)</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/main.html','<ion-view title=\'<i class="icon my-icon-mwg_09_elements"></i> Elements\'><ion-content class="usewchair content" padding=true><div class=main-frame><div class=parts><div class=btn-go ng-hide=!vm.selected ng-click=vm.openGroup(vm.selected.children[0])><i class="icon my-icon-mwg_h_go03"></i></div><svg version=1.1 id=Layer_1 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewbox="0 0 720 720" style="enable-background:new 0 0 720 720;" xml:space=preserve><style type=text/css>\n                    .st0{stroke:#FFFFFF;stroke-width:4.3168;stroke-miterlimit:10; fill: lightgrey}\n                    .st1{stroke:#FFFFFF;stroke-width:6.6856;stroke-miterlimit:10; fill: lightgrey}\n                    .st2{fill:none;stroke:#FFFFFF;stroke-width:7.76;stroke-miterlimit:10;}\n                    .selected { fill: #D72328 }\n                    .selected2 {stroke: #D72328}\n\n                </style><path class="st0 footrest" ng-class="{selected: vm.selected.title == \'Footrest\'}" d="M672.9,517.6h-92.1c-11.9,0-21.6-9.7-21.6-21.6v0c0-11.9,9.7-21.6,21.6-21.6h92.1c11.9,0,21.6,9.7,21.6,21.6v0 C694.4,507.8,684.7,517.6,672.9,517.6z"></path><path class="st0 frame" ng-class="{selected: vm.selected.title == \'Frame\'}" d="M601.4,565.2l-20.2-2.5l10-40.9c0,0,1-8.3,1.2-18c0.2-9.8-9.8-29-9.8-29l-94.9-128.9c0,0-5.4-9.7-11.6-16.1 c-6.3-6.5-11.2-7.5-11.2-7.5l-179.1-2.7c0,0-28.6,1.8-43.8-13.9c-15.2-15.6-20.4-45.8-20.4-45.8l-37.9-160 c-2.4-10.2,3.9-20.5,14.2-23l0,0c10.3-2.4,20.5,3.9,23,14.2l38.2,161.4c0,0,0.9,12.6,10.3,22.3c9.4,9.7,15.5,6.6,15.5,6.6 l186.4,2.8c0,0,15-0.7,27,11.6c12,12.3,16.3,21.2,16.3,21.2l96.3,131.8l11.9,25.1c0,0,5.7,21.6,5.3,46.1c-0.2,10.7-4.7,33-9.8,54.7 L601.4,565.2z"></path><path class="st0 cushion" ng-class="{selected: vm.selected.title == \'Cushion\'}" d="M522.6,258.2c0.2-14.7-11.5-26.8-26.3-27.1l-184-2.8c-14.7-0.2-26.8,11.5-27.1,26.3l0,0 c-0.2,14.7,11.5,26.8,26.2,27.1l184,2.8C510.3,284.7,522.4,273,522.6,258.2L522.6,258.2z"></path><path class="st0 backrest" ng-class="{selected: vm.selected.title == \'Backrest\'}" d="M236.7,41.7c-14.3,3.5-23.1,17.9-19.7,32.2l30.8,129.8c3.5,14.3,17.9,23.1,32.2,19.6l0,0 c14.3-3.4,23.1-17.9,19.7-32.2L268.9,61.4C265.4,47.1,251,38.3,236.7,41.7L236.7,41.7z"></path><g class=power-add-on><path class=st0 ng-class="{selected: vm.selected.title == \'Power Add-On\'}" d="M293.7,425.2c-13.4,6.1-19.4,21.9-13.3,35.3l54.3,121.8c6.1,13.4,21.8,19.4,35.3,13.3l0,0 c13.4-6,19.4-21.8,13.4-35.3l-54.3-121.9C322.9,425.2,307.1,419.2,293.7,425.2L293.7,425.2z"></path><path class=st1 ng-class="{selected: vm.selected.title == \'Power Add-On\'}" d="M371.2,503.8c46,0,83.3,37.3,83.3,83.2c0,46-37.3,83.2-83.3,83.2c-46,0-83.2-37.3-83.2-83.2 C287.9,541,325.2,503.8,371.2,503.8z M323.2,587c0,26.5,21.5,47.9,47.9,47.9c26.5,0,48-21.5,48-47.9c0-26.5-21.5-47.9-48-47.9 C344.7,539.1,323.2,560.5,323.2,587z"></path></g><g class=wheels><path class=st0 ng-class="{selected: vm.selected.title == \'Wheel\'}" d="M282,156.8c141.4,0,256,114.6,256,256c0,141.4-114.6,256-256,256c-141.4,0-256-114.6-256-256 C26,271.4,140.6,156.8,282,156.8z M77.2,412.8c0,113.1,91.7,204.8,204.8,204.8c113.1,0,204.8-91.7,204.8-204.8 C486.7,299.7,395,208,282,208C168.9,208,77.2,299.7,77.2,412.8z"></path><path class=st0 ng-class="{selected: vm.selected.title == \'Wheel\'}" d="M584.8,562.7c29.7,0,53.8,24.1,53.8,53.7c0,29.7-24.1,53.7-53.8,53.7c-29.7,0-53.7-24.1-53.7-53.7 C531,586.8,555.1,562.7,584.8,562.7z M553.8,616.5c0,17.1,13.9,31,30.9,31c17.1,0,31-13.9,31-31c0-17.1-13.9-31-31-31 C567.7,585.5,553.8,599.4,553.8,616.5z"></path></g><circle class="st0 accessoris" ng-class="{selected: vm.selected.title == \'Accessories\'}" cx=282 cy=412.8 r=58></circle><path class="st2 handrim" ng-class="{selected2: vm.selected.title == \'Handrim\'}" d="M282.9,178.2c129.6,0,234.6,105,234.6,234.6c0,129.6-105,234.6-234.6,234.6c-129.6,0-234.6-105-234.6-234.6 C48.2,283.2,153.3,178.2,282.9,178.2z"></path></svg></div><div class=groups><ul class=list-groups><li class=btn-menu ng-class="{selected: vm.selected.title == section.title}" ng-repeat="section in vm.navData" ng-click=vm.selectGroup(section)>{{::section.title}}</li></ul></div></div><div class="list button-style"><div class="item item-icon-left yellow" ng-click="navigateTo(\'.assessment\')"><i class="icon my-icon-mwg_16_activities"></i><div class="title bold">Self Assessment</div></div><div class="item item-icon-right primary" ng-click="navigateTo(\'.summary\')"><div class="title bold aligned right">Summary</div><i class="icon my-icon-mwg_e_clipboard"></i></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/components/questionnaire2perpage.html','<ion-modal-view class=questionnaire><ion-header-bar class=bar-positive><h1 class=title>Self Assessment</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=false scroll=true style="z-index: 0" class="padding has-header" padding=true><ion-slide-box class=question-slider dynamic-height show-pager=false delegate-handle=outerSlideBox ng-init="list = {}"><ion-slide class ng-repeat="page in pages"><h4 class=qq-question ng-repeat-start="question in page" ng-init="list[question.id] = question.deserializeMultiValueFn(question.checks, componentQAnswer[question.id])"><span class=qnumber style="line-height: initial">{{question.id}}.</span> {{question.text}}</h4><div class=qq-answer ng-repeat-end style="margin-bottom: 10px"><ion-radio ng-if="question.options != null" name=Q{{question.id}} ng-model=componentQAnswer[question.id] ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in question.options">{{item.text}}</ion-radio><ion-checkbox ng-if="question.checks != null" ng-repeat="item in list[question.id]" ng-value=item.text ng-model=item.checked ng-change="componentQAnswer[question.id] = question.serializeMultiValueFn(componentQAnswer[question.id], item.text, item.checked)">{{ item.text }}</ion-checkbox>{{question.checks}}</div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class=bar-positive><div class=buttons ng-click=prevPage() ng-hide="currentIndex==0"><button class=button>Previous</button></div><h1 class="title pager" style="text-align: center">{{currentIndex+1}} of {{questionsTotal}}</h1><div class=buttons><button class=button ng-if="currentIndex+1 != questionsTotal" ng-click=nextPage()>Next</button> <button class=button ng-if="currentIndex+1 == questionsTotal" ng-click=close()>Finish</button></div></ion-footer-bar></ion-modal-view>');
$templateCache.put('usewheelchair/setup1/host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=primary><button class="button button-icon ion-arrow-return-left" ng-click=vm.goBack()></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('usewheelchair/setup1/main.html','<ion-view title="Fit and Setup: How?" hide-tabs><ion-content class="usewchair content" padding=true><ul class=accordion><li ng-repeat="section in vm.navData"><input type=radio name=a> <i></i><h3>{{section.title}}</h3><div><a ng-repeat="sub in section.children" ng-if=!sub.hidden class=block ng-click="navigateTo(\'.feature.page\', sub.params )">{{sub.title}}</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/setup1/setup-qa.html','<ion-view title=Q&A><ion-content class=usewchair><div class=list><div ng-repeat="item in problemList"><div class="item item-icon-right" ng-click="navigateTo(\'.problem\', { id: item.key })">{{item.value.title}}<div class="valign middle triangle-right"></div></div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/setup1/setup-questionnaire-summary.html','<ion-modal-view class="questionnaire usewchair"><ion-header-bar class=bar-positive><h1 class=title>Wheelchair Fit Summary</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=true scroll=true style="z-index: 0" class="has-header padding"><h3>Progress</h3><div progressbar value=progress></div><br><ul class=accordion><li style="border-width: 0px"><input type=checkbox> <i></i><h3>Recommendations</h3><div ng-if="unexpectedAnswer.length > 0"><p>You should contact your therapist or a certified professional (find <a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">here</a>) to check the following items of your wheelchair.</p><ul class=bullet-point><li ng-repeat="question in unexpectedAnswer">{{question.text}}<u>{{translateAnswer(question, setupQAnswer[question.id])}}</u></li></ul></div><div ng-if="unexpectedAnswer.length == 0"><p>Based on your self-assessment, your wheelchair seems appropriately configured. If there is any change in your condition (e.g., physical, cognitive, and environment related), you should re-assess the fit and setup of your wheelchair.</p></div></li><li style="border-width: 0px"><input type=checkbox> <i></i><h3>Summary</h3><div><span class="qq-question summary" ng-repeat-start="question in questions | filter: {group: \'Y\'}"><span class=qnumber>{{getIndexOf(question) + 1}}.</span> {{question.text}}</span> <span class=qq-answer ng-repeat-end><span>{{translateAnswer(question, setupQAnswer[question.id])}}</span></span></div></li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewheelchair/setup1/setup-questionnaire2perpage.html','<ion-modal-view class=questionnaire><ion-header-bar class=bar-positive><h1 class=title>Self Assessment</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=false scroll=true style="z-index: 0" class="padding has-header" padding=true><ion-slide-box class=question-slider show-pager=false delegate-handle=outerSlideBox><ion-slide class ng-repeat="page in pages"><h4 class=qq-question ng-repeat-start="question in page"><span class=qnumber>{{question.id}}.</span> {{question.text}}</h4><div class=qq-answer ng-repeat-end><ion-radio name=Q{{question.id}} ng-model=setupQAnswer[question.id] ng-value={{item.value}} class="custom-radio vertical" ng-repeat="item in question.options">{{item.text}}</ion-radio></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class=bar-positive><div class=buttons ng-click=prevPage() ng-hide="currentIndex==0"><button class=button>Previous</button></div><h1 class="title pager" style="text-align: center">{{currentIndex+1}} of {{questionsTotal}}</h1><div class=buttons><button class=button ng-if="currentIndex+1 != questionsTotal" ng-click=nextPage()>Next</button> <button class=button ng-if="currentIndex+1 == questionsTotal" ng-click=close()>Finish</button></div></ion-footer-bar></ion-modal-view>');
$templateCache.put('usewheelchair/skills/host.html','<ion-nav-bar class=bar-positive animation=no-animation><ion-nav-buttons side=primary><button class="button button-icon ion-arrow-return-left" ng-click=vm.goBack()></button></ion-nav-buttons></ion-nav-bar><nav-content-bar nav-content-bar-configs=vm.navComponents></nav-content-bar><ion-nav-view animation=no-animation></ion-nav-view>');
$templateCache.put('usewheelchair/skills/main-skills.html','<ion-view title="Wheelchair Skills"><ion-content class="usewchair joe-theme"><div class=list><div class="item item-icon-right" ng-click="navigateTo(\'.why\', {reload: true})"><div class=title><strong>Why?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click="navigateTo(\'.how\', {reload: true})"><div class=title><strong>How?</strong></div><div class="valign middle triangle-right"></div></div><div class="item item-icon-right" ng-click=openSkillQuestionnaire()><div class=title><strong>Self-Assessment</strong></div></div><div class="item item-icon-right" ng-click=openSQSummary($event)><div class=title><strong>My Skill Summary</strong></div><img class="icon aligned right" ng-src=images/survey-done.png style="height: auto; width: 40px; margin-right: 5px"></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/main.html','<ion-view title="Wheelchair Components" hide-tabs><ion-content class="usewchair content" padding=true><ul class=accordion><li ng-repeat="section in vm.navData"><input type=radio name=a> <i></i><h3>{{section.title}}</h3><div><a ng-repeat="sub in section.children" ng-if=!sub.hidden class=block ng-click="navigateTo(\'.skill.page\', sub.params )">{{sub.title}}</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-backwardpropulsion.html','<ion-view title="Backward Propulsion" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'SsmfJc1R6Q8\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>Pushing backwards may cause a wheelchair to tip backwards.</li><li>Always look over both shoulders.</li><li>You can either pull the wheels evenly with both hands or pull with one hand at a time, which may provide greater control.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-braking.html','<ion-view title=Braking class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'7oQLgyEvs9k\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>Place hands at the 1:00 o\u2019clock position, and let the handrims slide through your hands.</li><li>Coast, slow down, then stop.</li><li>The rate of slowing is controlled by how hard the handrims are gripped.</li><li>The wheelchair may tip forward if stopped suddenly.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-curbs.html','<ion-view title=Curbs class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'6JTH7WNKk9Q\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h2>Read more ...</h2><div><ul class=bullet-point><li>If possible, curbs should be avoided. Going up and down curbs requires good upper body strength, coordination, and balance.</li><li>Popping the casters at the right timing with appropriate height (depending on the height of the curb) followed by quick weight shift is the key skill to climb up a curb.</li><li>Descending the curb backward can be an easier alternative, but you should be very cautious of tipping and falling.</li><li>Supervision is needed to learn and practice this skill.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-forwardpropulsion.html','<ion-view title="Forward Propulsion" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class="video-container has-content-bar"><youtube-video video-id="\'Hm_6E8JVv1g\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><p>A functional forward propulsion speed is about 1 meter (or 3.3 feet) per second. A semi-circular pattern that uses long and smooth strokes is typically recommended. It helps improve propulsion efficiency and thus decrease the risk of upper limb pain and injury.</p><p>How to push using a semi-circular pattern?</p><h4>Step 1: Imagine that your right wheel is a clock.</h4><h4>Step 2: Initial contact</h4><ul class=bullet-point><li>Lean forward slightly.</li><li>Reach back as far as you can comfortably, ideally hands at 11:00 o\'clock position.</li><li>Grab the handrim with your thumb pointing forward.</li></ul><h4>Step 3: Push</h4><ul class=bullet-point><li>Push the handrim with a long, smooth, and slow stroke.</li><li>Avoid jerky moves to prevent the wheelchair from tipping backward.</li></ul><h4>Step 4: Release</h4><ul class=bullet-point><li>Release the handrim at 2:00 o\'clock position.</li><li>Allow the wheelchair to coast if possible.</li></ul><h4>Step 5: Recovery</h4><ul class=bullet-point><li>Relax your arms by touching the wheel axles and swing backward.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-fromground.html','<ion-view title="From the ground to a wheelchair" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'YG-u4QVniL8\'"></youtube-video></div><ul class=accordion><li><input type=checkbox> <i></i><h2>Read more ...</h2><div><ul class=bullet-point><li>If possible, use a lift or get help when transferring from the ground to a wheelchair. Independent transfer requires good upper body strength and range of motion, which may induce muscle strains.</li><li>To prepare, you sit on the floor in front of a wheelchair with hips and knees flexed as much as possible. Then push the frame and/or floor to lift your buttocks off the floor.</li><li>An alternative is to use transition surfaces, for example, from floor to a foot stool or bench, then to a wheelchair.</li><li>Supervision is needed to learn and practice this skill.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-gaps.html','<ion-view title=Gaps/Thresholds class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'ExQJSs63_fg\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>If possible, gaps/thresholds should be avoided. Running casters directly into a gap or onto a threshold may cause the wheelchair to tip forward or backward.</li><li>To negotiate a gap/threshold, you will need to push the wheelchair with a slow and steady speed, and then pop the casters right before the gap/threshold, and negotiate it using the big wheels. The timing to pop the casters and the ability to pop the casters while moving forward make it a challenging task.</li><li>Supervision is needed to learn and practice this skill.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-rampasc.html','<ion-view title="Ascending a Ramp" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'xeJDfU2DOhA\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>Use a rocking action to get over the initial incline.</li><li>Lean forward to avoid tipping backward.</li><li>Use a short arcing stroke to avoid rolling backward.</li><li>Put your heavy backpack on your laps to increase stability.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-rampdesc.html','<ion-view title="Descending a Ramp" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'6a3Qp1riIf8\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>Keep your weight back to maintain good traction on rear wheels.</li><li>Go slowly, stay in control, and prepare to stop at any time.</li><li>Hold your hands at the 1:00 o\u2019clock position and let handrims to slide through your grip to provide continuous friction.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-reaching.html','<ion-view title=Reaching class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'Gnn5GjhrCaY\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>Reaching and leaning reduce stability and can put you at a risk for falling.</li><li>If you have weak trunk muscles, you should hook the opposite arm behind the push handle or hold onto the armrest or wheel to avoid falling and help return to an upright posture.</li><li>Making the casters trailing forward could increase the footprint and decrease the risk of tipping forward when reaching forward.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-steepramps.html','<ion-view title="Steep ramps and side-slope" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content class="usewchair content has-content-bar" padding=true><div class=video-container><youtube-video video-id="\'vtEJo1T7sD8\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h2>Read more ...</h2><div><ul class=bullet-point><li>Pushing a wheelchair up a steep ramp/slope or across a side slope requires good upper body strength and could expose users to risks of muscle strains and overuse injuries.</li><li>When going through a side slope,<ul class=bullet-point><li>lean backward to keep the weight on rear wheels to reduce the tendency of rolling downhill.</li><li>your hand at the downhill side will need to move faster than the other hand to maintain direction.</li></ul></li><li>When rolling down from a steep ramp/slope,<ul class=bullet-point><li>follow the skills for <a ng-click="navigateTo(\'^.skill\', {name: \'rampdesc\'})">descending a mild ramp/slope</a>.</li><li>proceed slowly, especially at the ramp-floor transition to prevent from tipping backward.</li><li>popping a wheelie could help prevent sliding and tipping forward.</li></ul></li><li>When pushing uphills on a steep ramp/slope,<ul class=bullet-point><li>follow the skills for <a ng-click="navigateTo(\'^.skill\', {name: \'rampasc\'})">ascending a mild ramp/slope</a>.</li></ul></li><li>Supervision is needed to learn and practice this skill.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-transfer.html','<ion-view title=Transfer class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'tK4_BMNyGT8\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h2>Read more ...</h2><div><ul class=bullet-point><li>Move to the target surface as close as possible.</li><li>Clear the pathway.</li><li>Orient the casters to trail toward the target surface to increase stability.</li><li>Apply brakes.</li><li>Remove armrests (if any).</li><li>Place your feet on the ground.</li><li>There are several transfer methods, e.g., standing pivot, pivot, and sideways. You need to choose a method depending on your condition (e.g., strength, joint range of motion, and balance), and the situation.</li><li>Please consult your therapist or a certified professional (find <a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">here</a>) for transfer training.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-turncorner.html','<ion-view title="Turning Around a Corner" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'woh01hd6mU0\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><ul class=bullet-point><li>Slow down the inside wheel and push harder on the outside wheel.</li><li>Check the video for tips of alternative methods. Alternative methods may lead to better efficiency. Moving your arms with various patterns could prevent repetitive injuries.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-turntight.html','<ion-view title="Maneuvering in Tight Spaces" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'oZ8u6C5U7eM\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h2>Read more ...</h2><div><ul class=bullet-point><li>In tight spaces such as an elevator or a small bathroom, you often need to turn in place or move sideways.</li><li>You can turn in place by pulling back on one wheel and pushing forward on the other wheel.</li><li>You can move sideways by shuffling the wheelchair forwards and backwards to get into a desired position.</li><li>An alternative to move sideways is to do a "bunny-hop" by pulling up on the rear wheels and lifting/moving the chair/body towards the desired position by a small amount.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-weightshift.html','<ion-view title="Weight Shift" class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'HlQ3BFYDBic\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h3>Read more ...</h3><div><p>It is recommended that you relieve pressure at buttocks every 15-20 minutes for at least 2 minutes to reduce risks of pressure sores.</p><p>Methods for weight shift<ul class=bullet-point><li>Forward leaning: put the casters in trailing forward positions, and bend forward to rest your chest on your lap to unweigh your buttocks.</li><li>Side leaning: lean your trunk sideways by pulling or pushing the rear wheel on the opposite side.</li><li>Tilt backwards: use a wheelie position to tilt backwards and rest your trunk on the wall.</li></ul></p></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how-wheelie.html','<ion-view title=Wheelie class="usewchair content has-content-bar" on-swipe-left=nextPage() on-swipe-right=prevPage()><ion-content padding=true><div class=video-container><youtube-video video-id="\'lk5T-7fGJE0\'"></youtube-video></div><ul class="accordion has-header"><li><input type=checkbox> <i></i><h2>Read more ...</h2><div><ul class=bullet-point><li>The wheelie position is the foundation of many advanced wheelchair skills. It helps decrease rolling resistance and prevent tipping forward. However, it increases risks of tipping and falling backward.</li><li>Popping a wheelie could be used to negotiate soft and uneven surfaces (e.g., thick carpet, gravels, and broken or uneven paving slabs), go down the slope, and negotiate curbs.</li><li>Supervision is needed to learn and practice this skill.</li></ul></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-how.html','<ion-view title="Wheelchair Skills: How?"><ion-content class="usewchair content" padding=true><ul class=accordion><li><input type=radio name=a> <i></i><h3>On Flat Surfaces</h3><div><a class=block ng-click="navigateTo(\'.skill\', {name: \'forwardpropulsion\'})">Forward Propulsion</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'backwardpropulsion\'})">Backward Propulsion</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'braking\'})">Braking</a></div></li><li><input type=radio name=a> <i></i><h3>Turning</h3><div><a class=block ng-click="navigateTo(\'.skill\', {name: \'turncorner\'})">Around a Corner</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'turntight\'})">In Tight Spaces</a></div></li><li><input type=radio name=a> <i></i><h3>On a Ramp</h3><div><a class=block ng-click="navigateTo(\'.skill\', {name: \'rampasc\'})">Ascending</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'rampdesc\'})">Descending</a></div></li><li><input type=radio name=a> <i></i><h3>Activities of Daily Living</h3><div><a class=block ng-click="navigateTo(\'.skill\', {name: \'weightshift\'})">Weight Shift</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'transfer\'})">Transfer</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'reaching\'})">Reaching</a></div></li><li><input type=radio name=a ng-click=openCaution()> <i></i><h3>Advanced Skills</h3><div><a class=block ng-click="navigateTo(\'.skill\', {name: \'wheelie\'})">Wheelie</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'gaps\'})">Gaps and Thresholds</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'steepramps\'})">Steep Ramps and Side Slopes</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'curbs\'})">Curbs</a> <a class=block ng-click="navigateTo(\'.skill\', {name: \'fromground\'})">From Ground to Wheelchair</a></div></li></ul></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-qa-a.html','<ion-view title=Q&A><ion-content class="usewchair content" padding=true><h3 style="font-size: 18px; font-weight: 800">{{qa.q}}</h3><p>{{qa.a}}</p></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-qa.html','<ion-view title=Q&A><ion-content class=usewchair><div class=list><div ng-repeat="item in qaList"><div class="item item-icon-right" ng-click="navigateTo(\'.a\',{qa: item});"><strong>Q: {{item.q}}</strong><div class="valign middle triangle-right"></div></div></div></div></ion-content></ion-view>');
$templateCache.put('usewheelchair/skills/skill-questionnaire-summary.html','<ion-modal-view class="questionnaire usewchair"><ion-header-bar class=bar-positive><h1 class=title>Skill Summary</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=page.close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=true scroll=true style="z-index: 0" class="has-header padding"><ul class=accordion><li ng-if=showRecommendation style="border-width: 0px"><input type=checkbox> <i></i><h3>Recommendations</h3><div><p>Out of {{totalQ}} essential wheelchair skills, you have mastered {{progress.y}} ({{progress.yp}}%) of them. Please contact your therapist or a certified professional (find <a ng-click="openInBrowser(\'http://www.resna.org/member-directory/individual\', \'_blank\')">here</a>) to learn and practice the other skills.</p></div></li><li ng-if="progress.y != 0" style="border-width: 0px"><input type=checkbox> <i></i><h3>Skills Achieved ({{progress.yp}}%)</h3><div><span class="qq-question summary" ng-repeat="question in questions | filter: {group: \'Y\'}"><span class=qnumber>{{getIndexOf(question) + 1}}.</span> {{question.text}}</span></div></li><li ng-if="progress.n != 0" style="border-width: 0px"><input type=checkbox> <i></i><h3>Skills to acquire ({{progress.np}}%)</h3><div><a class=edit ng-click="openSkillQuestionnaire(\'ACQUIRE\')">Edit</a> <span class="qq-question summary" ng-repeat-start="question in questions | filter: {group: \'N\'}"><span class=qnumber>{{getIndexOf(question) + 1}}.</span> {{question.text}}</span> <span class=qq-answer ng-repeat-end><span>{{translateAnswer(sQAnswer[question.id])}}</span></span></div></li><li ng-if="progress.z != 0" style="border-width: 0px"><input type=checkbox> <i></i><h3>Skills to assess ({{progress.zp}}%)</h3><div><a class=edit ng-click="openSkillQuestionnaire(\'ASSESS\')">Edit</a> <span class="qq-question summary" ng-repeat="question in questions | filter: {group: \'Z\'}"><span class=qnumber>{{getIndexOf(question) + 1}}.</span> {{question.text}}</span></div></li></ul></ion-content></ion-modal-view>');
$templateCache.put('usewheelchair/skills/skill-questionnaire.html','<ion-modal-view class=questionnaire><ion-header-bar class=bar-positive><h1 class=title>Skill Self-Assessment</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=false scroll=false style="z-index: 0" class=has-header padding=true><ion-slide-box class=question-slider show-pager=false delegate-handle=outerSlideBox><ion-slide class ng-repeat="question in questions"><h4 class=qq-question><span class=qnumber>{{getIndexOf(question) + 1}}.</span> {{question.text}}</h4><div class=qq-answer><div class=list><ion-radio name=Q{{$index+1}} ng-model=sQAnswer[question.id] ng-value={{item.value}} class=custom-radio ng-repeat="item in options">{{item.title}}</ion-radio></div></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class=bar-positive><div class=buttons ng-click=prevPage() ng-hide="currentIndex==0"><button class=button>Previous</button></div><h1 class="title pager" style="text-align: center">{{currentIndex+1}} of {{questionsTotal}}</h1><div class=buttons><button class=button ng-if="currentIndex+1 != questionsTotal" ng-click=nextPage()>Next</button> <button class=button ng-if="currentIndex+1 == questionsTotal" ng-click=close()>Finish</button></div></ion-footer-bar></ion-modal-view>');
$templateCache.put('usewheelchair/skills/skill-questionnaire2perpage.html','<ion-modal-view class=questionnaire><ion-header-bar class=bar-positive><h1 class=title>Self Assessment</h1><a class="button icon-left ion-ios-close-outline button-clear" ng-click=close() style="position: absolute; right: 10px"></a></ion-header-bar><ion-content has-bouncing=false scroll=true style="z-index: 0" class="padding has-header" padding=true><ion-slide-box class=question-slider show-pager=false delegate-handle=outerSlideBox><ion-slide class ng-repeat="page in pages"><h4 class=qq-question ng-repeat-start="question in page"><span class=qnumber>{{question.id}}.</span> {{question.text}}</h4><div class="qq-answer likert-option" ng-repeat-end><div class=row><ion-radio name=Q{{question.id}} ng-model=sQAnswer[question.id] ng-value={{item.value}} class=custom-radio style="width: 33%" ng-repeat="item in options"></ion-radio></div><div class=row><span class=option-label style="width: 33%" ng-repeat="item in options">{{item.title}}</span></div></div></ion-slide></ion-slide-box></ion-content><ion-footer-bar class=bar-positive><div class=buttons ng-click=prevPage() ng-hide="currentIndex==0"><button class=button>Previous</button></div><h1 class="title pager" style="text-align: center">{{currentIndex+1}} of {{questionsTotal}}</h1><div class=buttons><button class=button ng-if="currentIndex+1 != questionsTotal" ng-click=nextPage()>Next</button> <button class=button ng-if="currentIndex+1 == questionsTotal" ng-click=close()>Finish</button></div></ion-footer-bar></ion-modal-view>');
$templateCache.put('usewheelchair/skills/skill-why.html','<ion-view title="Wheelchair Skills: Why?"><ion-content class="usewchair content" padding=true><div class=video-container><youtube-video video-id=videoId player=ytPlayer></youtube-video></div></ion-content></ion-view>');}]);